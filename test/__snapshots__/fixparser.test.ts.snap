// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[` 1`] = `
[
  Message {
    "bodyLengthExpected": 440,
    "bodyLengthValid": true,
    "bodyLengthValue": 440,
    "checksumExpected": "227",
    "checksumValid": false,
    "checksumValue": "235",
    "data": [
      Field {
        "category": null,
        "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
        "enumeration": EnumType {
          "added": "FIX.Latest",
          "addedEP": "270",
          "codeSet": "BeginStringCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Session profile FIX.4.2",
          "group": undefined,
          "id": "8001",
          "name": "FIX42",
          "sort": 1,
          "tag": 8,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "FIX.4.2",
        },
        "name": "BeginString",
        "section": null,
        "tag": 8,
        "type": null,
        "value": "FIX.4.2",
      },
      Field {
        "category": null,
        "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
        "enumeration": null,
        "name": "BodyLength",
        "section": null,
        "tag": 9,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the length in bytes. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:nonNegativeInteger",
            "builtin": "false",
            "description": "int field representing the length in bytes. Value must be positive.",
            "standard": "XML",
          },
          "name": "Length",
        },
        "value": 440,
      },
      Field {
        "category": null,
        "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
        "enumeration": EnumType {
          "added": undefined,
          "addedEP": undefined,
          "codeSet": "MsgTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "ExecutionReport

The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
          "group": undefined,
          "id": "35009",
          "name": "ExecutionReport",
          "sort": 9,
          "tag": 35,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "8",
        },
        "name": "MsgType",
        "section": null,
        "tag": 35,
        "type": null,
        "value": "8",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify the firm targeted to receive the message if the message is delivered by a third party i.e. the third party firm identifier would be delivered in the TargetCompID (56) field and the ultimate receiver firm ID in this field.",
        "enumeration": null,
        "name": "DeliverToCompID",
        "section": null,
        "tag": 128,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "LZJ",
      },
      Field {
        "category": null,
        "description": "Integer message sequence number.",
        "enumeration": null,
        "name": "MsgSeqNum",
        "section": null,
        "tag": 34,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing a message sequence number. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:positiveInteger",
            "builtin": "false",
            "description": "int field representing a message sequence number. Value must be positive.",
            "standard": "XML",
          },
          "name": "SeqNum",
        },
        "value": 549,
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm sending message.",
        "enumeration": null,
        "name": "SenderCompID",
        "section": null,
        "tag": 49,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "CCG",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify receiving firm.",
        "enumeration": null,
        "name": "TargetCompID",
        "section": null,
        "tag": 56,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "LEH_LZJ02",
      },
      Field {
        "category": null,
        "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
        "enumeration": null,
        "name": "SendingTime",
        "section": null,
        "tag": 52,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20100302- 22:36:15",
      },
      Field {
        "category": null,
        "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
        "enumeration": null,
        "name": "Symbol",
        "section": null,
        "tag": 55,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "IOC",
      },
      Field {
        "category": null,
        "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
        "enumeration": null,
        "name": "OrderID",
        "section": null,
        "tag": 37,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "NF 0039/03022010",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
        "enumeration": null,
        "name": "ClOrdID",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 11,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "NF 0039/03022010",
      },
      Field {
        "category": null,
        "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
        "enumeration": null,
        "name": "ExecID",
        "section": null,
        "tag": 17,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "NF 0039/03022010 001001002",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 20,
        "type": null,
        "value": "2",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "OrdStatusCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Filled",
          "group": undefined,
          "id": "39003",
          "name": "Filled",
          "sort": 3,
          "tag": 39,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "2",
        },
        "name": "OrdStatus",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 39,
        "type": null,
        "value": "2",
      },
      Field {
        "category": null,
        "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
        "enumeration": null,
        "name": "ExecType",
        "section": null,
        "tag": 150,
        "type": null,
        "value": "2",
      },
      Field {
        "category": null,
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "SideCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Buy

For Securities Financing indicates the receipt of securities or collateral.",
          "group": undefined,
          "id": "54001",
          "name": "Buy",
          "sort": 1,
          "tag": 54,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "254",
          "value": "1",
        },
        "name": "Side",
        "section": null,
        "tag": 54,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "OrderQty",
        "section": null,
        "tag": 38,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 100,
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "OrdTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Market",
          "group": undefined,
          "id": "40001",
          "name": "Market",
          "sort": 1,
          "tag": 40,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "1",
        },
        "name": "OrdType",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 40,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Specifies how long the order remains in effect. Absence of this field is interpreted as DAY. NOTE not applicable to CIV Orders.",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "TimeInForceCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Day (or session)

A buy or sell order that, if not executed expires at the end of the trading day on which it was entered.",
          "group": undefined,
          "id": "59001",
          "name": "Day",
          "sort": 1,
          "tag": 59,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "253",
          "value": "0",
        },
        "name": "TimeInForce",
        "section": null,
        "tag": 59,
        "type": null,
        "value": "0",
      },
      Field {
        "category": null,
        "description": "Price of this (last) fill.",
        "enumeration": null,
        "name": "LastPx",
        "section": null,
        "tag": 31,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
            "standard": "XML",
          },
          "name": "Price",
        },
        "value": 49.37,
      },
      Field {
        "category": null,
        "description": "Quantity (e.g. shares) bought/sold on this (last) fill.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "LastQty",
        "section": null,
        "tag": 32,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 100,
      },
      Field {
        "category": null,
        "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "CumQty",
        "section": null,
        "tag": 14,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 0,
      },
      Field {
        "category": null,
        "description": "Calculated average price of all fills on this order.

For Fixed Income trades AvgPx is always expressed as percent-of-par, regardless of the PriceType (423) of LastPx (31). I.e., AvgPx will contain an average of percent-of-par values (see LastParPx (669)) for issues traded in Yield, Spread or Discount.",
        "enumeration": null,
        "name": "AvgPx",
        "section": null,
        "tag": 6,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
            "standard": "XML",
          },
          "name": "Price",
        },
        "value": 0,
      },
      Field {
        "category": null,
        "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "LeavesQty",
        "section": null,
        "tag": 151,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 0,
      },
      Field {
        "category": null,
        "description": "Timestamp when the business transaction represented by the message occurred.",
        "enumeration": null,
        "name": "TransactTime",
        "section": null,
        "tag": 60,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20100302-22:36:16",
      },
      Field {
        "category": null,
        "description": "Free format text string

(Note: this field does not have a specified maximum length)",
        "enumeration": null,
        "name": "Text",
        "section": null,
        "tag": 58,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "Trade correction",
      },
      Field {
        "category": null,
        "description": "Reference identifier used with Trade, Trade Cancel and Trade Correct execution types.

(Prior to FIX 4.1 this field was of type int)",
        "enumeration": null,
        "name": "ExecRefID",
        "section": null,
        "tag": 19,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "NF 0039/03022010 001001001",
      },
      Field {
        "category": null,
        "description": "Account mnemonic as agreed between buy and sell sides, e.g. broker and institution or investor/intermediary and fund manager.",
        "enumeration": null,
        "name": "Account",
        "section": null,
        "tag": 1,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "ABC123ZYX",
      },
      Field {
        "category": null,
        "description": "Market of execution for last fill, or an indication of the market where an order was routed

Valid values:

See "Appendix 6-C"

In the context of ESMA RTS 1 Annex I, Table 3, Field 6 "Venue of Execution" it is required that the "venue where the transaction was executed" be identified using ISO 10383 (MIC). Additionally, ESMA requires the use of "MIC code 'XOFF' for financial instruments admitted to trading or traded on a trading venue, where the transaction on that financial instrument is not executed on a trading venue, systematic internaliser or organized trading platform outside of the Union. Use 'SINT' for financial instruments admitted to trading or traded on a trading venue, where the transaction is executed on a systematic internaliser."",
        "enumeration": null,
        "name": "LastMkt",
        "section": null,
        "tag": 30,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "false",
            "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
            "pattern": ".*",
            "standard": "XML",
          },
          "name": "Exchange",
        },
        "value": "N",
      },
      Field {
        "category": null,
        "description": "Market used to help identify a security.

Valid values:

See "Appendix 6-C"",
        "enumeration": null,
        "name": "SecurityExchange",
        "section": null,
        "tag": 207,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "false",
            "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
            "pattern": ".*",
            "standard": "XML",
          },
          "name": "Exchange",
        },
        "value": "N",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 47,
        "type": null,
        "value": "A",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 9430,
        "type": null,
        "value": "NX",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 9483,
        "type": null,
        "value": "000010",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 9578,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 9425,
        "type": null,
        "value": "5",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 9579,
        "type": null,
        "value": "0000100002",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 9704,
        "type": null,
        "value": "0000100001",
      },
      Field {
        "category": null,
        "description": "The number of ContraBroker (375) entries.",
        "enumeration": null,
        "name": "NoContraBrokers",
        "section": null,
        "tag": 382,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the number of entries in a repeating group. Value must be positive.",
          "name": "NumInGroup",
        },
        "value": 1,
      },
      Field {
        "category": null,
        "description": "Identifies contra broker. Standard NASD market-maker mnemonic is preferred.",
        "enumeration": null,
        "name": "ContraBroker",
        "section": null,
        "tag": 375,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "TOD",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Identifies the trader (e.g. "badge number") of the ContraBroker.",
        "enumeration": null,
        "name": "ContraTrader",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 337,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "0000",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Quantity traded with the ContraBroker (375).",
        "enumeration": null,
        "name": "ContraTradeQty",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 437,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 100,
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Identifes the time of the trade with the ContraBroker (375). (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
        "enumeration": null,
        "name": "ContraTradeTime",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 438,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "1736",
      },
      Field {
        "category": null,
        "description": "Broker capacity in order execution",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "LastCapacityCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Agent",
          "group": undefined,
          "id": "29001",
          "name": "Agent",
          "sort": 1,
          "tag": 29,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "1",
        },
        "name": "LastCapacity",
        "section": null,
        "tag": 29,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Indicates order settlement period. If present, SettlDate (64) overrides this field. If both SettlType (63) and SettDate (64) are omitted, the default for SettlType (63) is 0 (Regular)

Regular is defined as the default settlement period for the particular security on the exchange of execution.

In Fixed Income the contents of this field may influence the instrument definition if the SecurityID (48) is ambiguous. In the US an active Treasury offering may be re-opened, and for a time one CUSIP will apply to both the current and "when-issued" securities. Supplying a value of "7" clarifies the instrument description; any other value or the absence of this field should cause the respondent to default to the active issue.

Additionally the following patterns may be uses as well as enum values

Dx = FX tenor expression for "days", e.g. "D5", where "x" is any integer > 0

Mx = FX tenor expression for "months", e.g. "M3", where "x" is any integer > 0

Wx = FX tenor expression for "weeks", e.g. "W13", where "x" is any integer > 0

Yx = FX tenor expression for "years", e.g. "Y1", where "x" is any integer > 0

Noted that for FX the tenors expressed using Dx, Mx, Wx, and Yx values do not denote business days, but calendar days.",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "SettlTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Regular / FX Spot settlement (T+1 or T+2 depending on currency)",
          "group": undefined,
          "id": "63001",
          "name": "Regular",
          "sort": 1,
          "tag": 63,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "0",
        },
        "name": "SettlType",
        "section": null,
        "tag": 63,
        "type": null,
        "value": "0",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 9440,
        "type": null,
        "value": "001001002",
      },
      Field {
        "category": null,
        "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
        "enumeration": null,
        "name": "CheckSum",
        "section": null,
        "tag": 10,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "235",
      },
    ],
    "description": "ExecutionReport",
    "fixVersion": "FIX.4.2",
    "messageSequence": 549,
    "messageString": "8=FIX.4.29=44035=8128=LZJ34=54949=CCG56=LEH_LZJ0252=20100302- 22:36:1555=IOC37=NF 0039/0302201011=NF 0039/0302201017=NF 0039/03022010 00100100220=239=2150=254=138=10040=159=031=49.370032=10014=06=0151=060=20100302-22:36:1658=Trade correction19=NF 0039/03022010 0010010011=ABC123ZYX30=N207=N47=A9430=NX9483=0000109578=19425=59579=00001000029704=0000100001382=1375=TOD337=0000437=100438=173629=163=09440=00100100210=235",
    "messageType": "8",
    "messageTypeDescription": "The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
    "structure": [
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Hdr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message header

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
              "id": "8",
              "name": "BeginString",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be second field in message)",
              "id": "9",
              "name": "BodyLength",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be third field in message)",
              "id": "35",
              "name": "MsgType",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "49",
              "name": "SenderCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "56",
              "name": "TargetCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "34",
              "name": "MsgSeqNum",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "52",
              "name": "SendingTime",
              "presence": "required",
            },
          ],
          "id": "1024",
          "name": "StandardHeader",
          "type": "component",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "id": "1024",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "CumQty",
          "added": "FIX.2.7",
          "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
          "id": "14",
          "name": "CumQty",
          "type": "Qty",
        },
        "id": "14",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "ExecID",
          "added": "FIX.2.7",
          "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
          "id": "17",
          "name": "ExecID",
          "type": "String",
          "updated": "FIX.5.0SP1",
          "updatedEP": "95",
        },
        "id": "17",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "OrdID",
          "added": "FIX.2.7",
          "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
          "id": "37",
          "name": "OrderID",
          "type": "String",
        },
        "id": "37",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "OrdStat",
          "added": "FIX.2.7",
          "baseCategory": "SingleGeneralOrderHandling",
          "baseCategoryAbbrName": "Stat",
          "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
          "id": "39",
          "name": "OrdStatus",
          "type": "OrdStatusCodeSet",
        },
        "id": "39",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Side",
          "added": "FIX.2.7",
          "description": "Side of order (see Volume : "Glossary" for value definitions)",
          "id": "54",
          "name": "Side",
          "type": "SideCodeSet",
        },
        "id": "54",
        "presence": "required",
      },
      {
        "added": "FIX.4.1",
        "data": {
          "abbrName": "ExecTyp",
          "added": "FIX.4.1",
          "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
          "id": "150",
          "name": "ExecType",
          "type": "ExecTypeCodeSet",
          "updated": "FIX.5.0SP2",
          "updatedEP": "131",
        },
        "id": "150",
        "presence": "required",
      },
      {
        "added": "FIX.4.1",
        "data": {
          "abbrName": "LeavesQty",
          "added": "FIX.4.1",
          "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
          "id": "151",
          "name": "LeavesQty",
          "type": "Qty",
        },
        "id": "151",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Trlr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message trailer

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, always last field in message)",
              "id": "10",
              "name": "CheckSum",
              "presence": "required",
            },
          ],
          "id": "1025",
          "name": "StandardTrailer",
          "type": "component",
        },
        "id": "1025",
        "presence": "required",
      },
      {
        "added": "FIX.4.3",
        "data": {
          "abbrName": "Instrmt",
          "added": "FIX.4.3",
          "category": "Common",
          "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
          "id": "1003",
          "name": "Instrument",
          "type": "component",
        },
        "id": "1003",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
    ],
  },
]
`;

exports[` 2`] = `
[
  Message {
    "bodyLengthExpected": 154,
    "bodyLengthValid": true,
    "bodyLengthValue": 154,
    "checksumExpected": null,
    "checksumValid": false,
    "checksumValue": null,
    "data": [
      Field {
        "category": null,
        "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
        "enumeration": EnumType {
          "added": "FIX.Latest",
          "addedEP": "270",
          "codeSet": "BeginStringCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Session profile FIX.4.2",
          "group": undefined,
          "id": "8001",
          "name": "FIX42",
          "sort": 1,
          "tag": 8,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "FIX.4.2",
        },
        "name": "BeginString",
        "section": null,
        "tag": 8,
        "type": null,
        "value": "FIX.4.2",
      },
      Field {
        "category": null,
        "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
        "enumeration": null,
        "name": "BodyLength",
        "section": null,
        "tag": 9,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the length in bytes. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:nonNegativeInteger",
            "builtin": "false",
            "description": "int field representing the length in bytes. Value must be positive.",
            "standard": "XML",
          },
          "name": "Length",
        },
        "value": 154,
      },
      Field {
        "category": null,
        "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
        "enumeration": EnumType {
          "added": undefined,
          "addedEP": undefined,
          "codeSet": "MsgTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "NewOrderList

The NewOrderList Message can be used in one of two ways depending on which market conventions are being followed.",
          "group": undefined,
          "id": "35015",
          "name": "NewOrderList",
          "sort": 15,
          "tag": 35,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "E",
        },
        "name": "MsgType",
        "section": null,
        "tag": 35,
        "type": null,
        "value": "E",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm sending message.",
        "enumeration": null,
        "name": "SenderCompID",
        "section": null,
        "tag": 49,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "INST",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify receiving firm.",
        "enumeration": null,
        "name": "TargetCompID",
        "section": null,
        "tag": 56,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "BROK",
      },
      Field {
        "category": null,
        "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
        "enumeration": null,
        "name": "SendingTime",
        "section": null,
        "tag": 52,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20050908-15:51:22",
      },
      Field {
        "category": null,
        "description": "Integer message sequence number.",
        "enumeration": null,
        "name": "MsgSeqNum",
        "section": null,
        "tag": 34,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing a message sequence number. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:positiveInteger",
            "builtin": "false",
            "description": "int field representing a message sequence number. Value must be positive.",
            "standard": "XML",
          },
          "name": "SeqNum",
        },
        "value": 200,
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Unique identifier for list as assigned by institution, used to associate multiple individual orders. Uniqueness must be guaranteed within a single trading day. Firms which generate multi-day orders should consider embedding a date within the ListID field to assure uniqueness across days.",
        "enumeration": null,
        "name": "ListID",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 66,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "14",
      },
      Field {
        "category": null,
        "description": "Code to identify the type of Bid Request.",
        "enumeration": EnumType {
          "added": "FIX.4.3",
          "addedEP": undefined,
          "codeSet": "BidTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": ""Non Disclosed" style (e.g. US/European)",
          "group": undefined,
          "id": "394001",
          "name": "NonDisclosed",
          "sort": 1,
          "tag": 394,
          "type": "int",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "1",
        },
        "name": "BidType",
        "section": null,
        "tag": 394,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Total number of list order entries across all messages. Should be the sum of all NoOrders (73) in each message that has repeating list order entries related to the same ListID (66). Used to support fragmentation.

(Prior to FIX 4.2 this field was named "ListNoOrds")",
        "enumeration": null,
        "name": "TotNoOrders",
        "section": null,
        "tag": 68,
        "type": {
          "added": "FIX.2.7",
          "description": "Sequence of digits without commas or decimals and optional sign character (ASCII characters "-" and "0" - "9" ). The sign character utilizes one byte (i.e. positive int is "99999" while negative int is "-99999"). Note that int values may contain leading zeros (e.g. "00023" = "23").",
          "mappedDatatype": {
            "base": "xs:integer",
            "builtin": "true",
            "standard": "XML",
          },
          "name": "int",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "value": 2,
      },
      Field {
        "category": null,
        "description": "Indicates number of orders to be combined for average pricing and allocation.",
        "enumeration": null,
        "name": "NoOrders",
        "section": null,
        "tag": 73,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the number of entries in a repeating group. Value must be positive.",
          "name": "NumInGroup",
        },
        "value": 2,
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
        "enumeration": null,
        "name": "ClOrdID",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 11,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "order- 1",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Sequence of individual order within list (i.e. ListSeqNo of TotNoOrders (68), 2 of 25, 3 of 25, . . . )",
        "enumeration": null,
        "name": "ListSeqNo",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 67,
        "type": {
          "added": "FIX.2.7",
          "description": "Sequence of digits without commas or decimals and optional sign character (ASCII characters "-" and "0" - "9" ). The sign character utilizes one byte (i.e. positive int is "99999" while negative int is "-99999"). Note that int values may contain leading zeros (e.g. "00023" = "23").",
          "mappedDatatype": {
            "base": "xs:integer",
            "builtin": "true",
            "standard": "XML",
          },
          "name": "int",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "value": 1,
      },
      Field {
        "category": null,
        "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
        "enumeration": null,
        "name": "Symbol",
        "section": null,
        "tag": 55,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "IBM",
      },
      Field {
        "category": null,
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "SideCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Sell

For Securities Financing indicates the delivery of securities or collateral.",
          "group": undefined,
          "id": "54002",
          "name": "Sell",
          "sort": 2,
          "tag": 54,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "254",
          "value": "2",
        },
        "name": "Side",
        "section": null,
        "tag": 54,
        "type": null,
        "value": "2",
      },
      Field {
        "category": null,
        "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "OrderQty",
        "section": null,
        "tag": 38,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 2000,
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "OrdTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Market",
          "group": undefined,
          "id": "40001",
          "name": "Market",
          "sort": 1,
          "tag": 40,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "1",
        },
        "name": "OrdType",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 40,
        "type": null,
        "value": "1",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
        "enumeration": null,
        "name": "ClOrdID",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 11,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "order-2",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Sequence of individual order within list (i.e. ListSeqNo of TotNoOrders (68), 2 of 25, 3 of 25, . . . )",
        "enumeration": null,
        "name": "ListSeqNo",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 67,
        "type": {
          "added": "FIX.2.7",
          "description": "Sequence of digits without commas or decimals and optional sign character (ASCII characters "-" and "0" - "9" ). The sign character utilizes one byte (i.e. positive int is "99999" while negative int is "-99999"). Note that int values may contain leading zeros (e.g. "00023" = "23").",
          "mappedDatatype": {
            "base": "xs:integer",
            "builtin": "true",
            "standard": "XML",
          },
          "name": "int",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "value": 2,
      },
      Field {
        "category": null,
        "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
        "enumeration": null,
        "name": "Symbol",
        "section": null,
        "tag": 55,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "AOL",
      },
      Field {
        "category": null,
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "SideCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Sell

For Securities Financing indicates the delivery of securities or collateral.",
          "group": undefined,
          "id": "54002",
          "name": "Sell",
          "sort": 2,
          "tag": 54,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "254",
          "value": "2",
        },
        "name": "Side",
        "section": null,
        "tag": 54,
        "type": null,
        "value": "2",
      },
      Field {
        "category": null,
        "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "OrderQty",
        "section": null,
        "tag": 38,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 1000,
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "OrdTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Market",
          "group": undefined,
          "id": "40001",
          "name": "Market",
          "sort": 1,
          "tag": 40,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "1",
        },
        "name": "OrdType",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 40,
        "type": null,
        "value": "1",
      },
    ],
    "description": "NewOrderList",
    "fixVersion": "FIX.4.2",
    "messageSequence": 200,
    "messageString": "8=FIX.4.29=15435=E49=INST56=BROK52=20050908-15:51:2234=20066=14394=168=273=211=order- 167=155=IBM54=238=200040=111=order-267=255=AOL54=238=100040=1",
    "messageType": "E",
    "messageTypeDescription": "The NewOrderList Message can be used in one of two ways depending on which market conventions are being followed.",
    "structure": [
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Hdr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message header

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
              "id": "8",
              "name": "BeginString",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be second field in message)",
              "id": "9",
              "name": "BodyLength",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be third field in message)",
              "id": "35",
              "name": "MsgType",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "49",
              "name": "SenderCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "56",
              "name": "TargetCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "34",
              "name": "MsgSeqNum",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "52",
              "name": "SendingTime",
              "presence": "required",
            },
          ],
          "id": "1024",
          "name": "StandardHeader",
          "type": "component",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "id": "1024",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "ListID",
          "added": "FIX.2.7",
          "baseCategory": "ProgramTrading",
          "baseCategoryAbbrName": "ID",
          "description": "Unique identifier for list as assigned by institution, used to associate multiple individual orders. Uniqueness must be guaranteed within a single trading day. Firms which generate multi-day orders should consider embedding a date within the ListID field to assure uniqueness across days.",
          "id": "66",
          "name": "ListID",
          "type": "String",
        },
        "id": "66",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "TotNoOrds",
          "added": "FIX.2.7",
          "description": "Total number of list order entries across all messages. Should be the sum of all NoOrders (73) in each message that has repeating list order entries related to the same ListID (66). Used to support fragmentation.

(Prior to FIX 4.2 this field was named "ListNoOrds")",
          "id": "68",
          "name": "TotNoOrders",
          "type": "int",
        },
        "id": "68",
        "presence": "required",
      },
      {
        "added": "FIX.4.2",
        "data": {
          "abbrName": "BidTyp",
          "added": "FIX.4.2",
          "description": "Code to identify the type of Bid Request.",
          "id": "394",
          "name": "BidType",
          "type": "BidTypeCodeSet",
        },
        "id": "394",
        "presence": "required",
      },
      {
        "added": "FIX.4.4",
        "data": {
          "abbrName": "Ord",
          "added": "FIX.4.4",
          "category": "ProgramTrading",
          "componentRef": [
            {
              "added": "FIX.4.4",
              "description": "Insert here the set of "Instrument" (symbology) fields defined in "Common Components of Application Messages"",
              "id": "1003",
              "presence": "required",
            },
            {
              "added": "FIX.4.4",
              "description": "Insert here the set of "OrderQtyData" fields defined in "Common Components of Application Messages"",
              "id": "1011",
              "presence": "required",
            },
          ],
          "description": "

",
          "fieldRef": [
            {
              "added": "FIX.4.4",
              "description": "Must be the first field in the repeating group.",
              "id": "11",
              "name": "ClOrdID",
              "presence": "required",
            },
            {
              "added": "FIX.4.4",
              "description": "Order number within the list",
              "id": "67",
              "name": "ListSeqNo",
              "presence": "required",
            },
            {
              "added": "FIX.4.4",
              "description": "Note: to indicate the side of SideValue1 or SideValue2, specify Side=Undisclosed and SideValueInd=either the SideValue1 or SideValue2 indicator.",
              "id": "54",
              "name": "Side",
              "presence": "required",
            },
          ],
          "id": "2030",
          "name": "ListOrdGrp",
          "numInGroup": {
            "added": "FIX.4.4",
            "id": "73",
          },
          "type": "group",
        },
        "id": "2030",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Trlr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message trailer

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, always last field in message)",
              "id": "10",
              "name": "CheckSum",
              "presence": "required",
            },
          ],
          "id": "1025",
          "name": "StandardTrailer",
          "type": "component",
        },
        "id": "1025",
        "presence": "required",
      },
    ],
  },
]
`;

exports[` 3`] = `
[
  Message {
    "bodyLengthExpected": 28,
    "bodyLengthValid": false,
    "bodyLengthValue": 1753,
    "checksumExpected": null,
    "checksumValid": false,
    "checksumValue": null,
    "data": [
      Field {
        "category": null,
        "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
        "enumeration": EnumType {
          "added": "FIX.Latest",
          "addedEP": "270",
          "codeSet": "BeginStringCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Session profile FIX4",
          "group": undefined,
          "id": "8002",
          "name": "FIX44",
          "sort": 2,
          "tag": 8,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "FIX.4.4",
        },
        "name": "BeginString",
        "section": null,
        "tag": 8,
        "type": null,
        "value": "FIX.4.4",
      },
      Field {
        "category": null,
        "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
        "enumeration": null,
        "name": "BodyLength",
        "section": null,
        "tag": 9,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the length in bytes. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:nonNegativeInteger",
            "builtin": "false",
            "description": "int field representing the length in bytes. Value must be positive.",
            "standard": "XML",
          },
          "name": "Length",
        },
        "value": 1753,
      },
      Field {
        "category": null,
        "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
        "enumeration": EnumType {
          "added": undefined,
          "addedEP": undefined,
          "codeSet": "MsgTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "ExecutionReport

The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
          "group": undefined,
          "id": "35009",
          "name": "ExecutionReport",
          "sort": 9,
          "tag": 35,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "8",
        },
        "name": "MsgType",
        "section": null,
        "tag": 35,
        "type": null,
        "value": "8",
      },
      Field {
        "category": null,
        "description": "Sub-identifier (e.g. Clearing Account for PartyRole (452)=Clearing Firm, Locate ID # for PartyRole=Locate/Lending Firm, etc). Not required when using PartyID (448), PartyIDSource (447), and PartyRole.",
        "enumeration": null,
        "name": "PartySubID",
        "section": null,
        "tag": 523,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "S|E|B Auto-pricing",
      },
    ],
    "description": "ExecutionReport",
    "fixVersion": "FIX.4.4",
    "messageSequence": -1,
    "messageString": "8=FIX.4.49=175335=8523=S|E|B Auto-pricing",
    "messageType": "8",
    "messageTypeDescription": "The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
    "structure": [
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Hdr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message header

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
              "id": "8",
              "name": "BeginString",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be second field in message)",
              "id": "9",
              "name": "BodyLength",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be third field in message)",
              "id": "35",
              "name": "MsgType",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "49",
              "name": "SenderCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "56",
              "name": "TargetCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "34",
              "name": "MsgSeqNum",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "52",
              "name": "SendingTime",
              "presence": "required",
            },
          ],
          "id": "1024",
          "name": "StandardHeader",
          "type": "component",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "id": "1024",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "CumQty",
          "added": "FIX.2.7",
          "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
          "id": "14",
          "name": "CumQty",
          "type": "Qty",
        },
        "id": "14",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "ExecID",
          "added": "FIX.2.7",
          "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
          "id": "17",
          "name": "ExecID",
          "type": "String",
          "updated": "FIX.5.0SP1",
          "updatedEP": "95",
        },
        "id": "17",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "OrdID",
          "added": "FIX.2.7",
          "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
          "id": "37",
          "name": "OrderID",
          "type": "String",
        },
        "id": "37",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "OrdStat",
          "added": "FIX.2.7",
          "baseCategory": "SingleGeneralOrderHandling",
          "baseCategoryAbbrName": "Stat",
          "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
          "id": "39",
          "name": "OrdStatus",
          "type": "OrdStatusCodeSet",
        },
        "id": "39",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Side",
          "added": "FIX.2.7",
          "description": "Side of order (see Volume : "Glossary" for value definitions)",
          "id": "54",
          "name": "Side",
          "type": "SideCodeSet",
        },
        "id": "54",
        "presence": "required",
      },
      {
        "added": "FIX.4.1",
        "data": {
          "abbrName": "ExecTyp",
          "added": "FIX.4.1",
          "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
          "id": "150",
          "name": "ExecType",
          "type": "ExecTypeCodeSet",
          "updated": "FIX.5.0SP2",
          "updatedEP": "131",
        },
        "id": "150",
        "presence": "required",
      },
      {
        "added": "FIX.4.1",
        "data": {
          "abbrName": "LeavesQty",
          "added": "FIX.4.1",
          "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
          "id": "151",
          "name": "LeavesQty",
          "type": "Qty",
        },
        "id": "151",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Trlr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message trailer

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, always last field in message)",
              "id": "10",
              "name": "CheckSum",
              "presence": "required",
            },
          ],
          "id": "1025",
          "name": "StandardTrailer",
          "type": "component",
        },
        "id": "1025",
        "presence": "required",
      },
      {
        "added": "FIX.4.3",
        "data": {
          "abbrName": "Instrmt",
          "added": "FIX.4.3",
          "category": "Common",
          "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
          "id": "1003",
          "name": "Instrument",
          "type": "component",
        },
        "id": "1003",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
    ],
  },
]
`;

exports[`FIXParser #getBriefDescription should generate a brief description BBSS Execution 1`] = `
[
  Message {
    "bodyLengthExpected": 354,
    "bodyLengthValid": false,
    "bodyLengthValue": 451,
    "checksumExpected": "090",
    "checksumValid": false,
    "checksumValue": "116",
    "data": [
      Field {
        "category": null,
        "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
        "enumeration": EnumType {
          "added": "FIX.Latest",
          "addedEP": "270",
          "codeSet": "BeginStringCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Session profile FIX.4.2",
          "group": undefined,
          "id": "8001",
          "name": "FIX42",
          "sort": 1,
          "tag": 8,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "FIX.4.2",
        },
        "name": "BeginString",
        "section": null,
        "tag": 8,
        "type": null,
        "value": "FIX.4.2",
      },
      Field {
        "category": null,
        "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
        "enumeration": null,
        "name": "BodyLength",
        "section": null,
        "tag": 9,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the length in bytes. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:nonNegativeInteger",
            "builtin": "false",
            "description": "int field representing the length in bytes. Value must be positive.",
            "standard": "XML",
          },
          "name": "Length",
        },
        "value": 451,
      },
      Field {
        "category": null,
        "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
        "enumeration": EnumType {
          "added": undefined,
          "addedEP": undefined,
          "codeSet": "MsgTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "ExecutionReport

The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
          "group": undefined,
          "id": "35009",
          "name": "ExecutionReport",
          "sort": 9,
          "tag": 35,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "8",
        },
        "name": "MsgType",
        "section": null,
        "tag": 35,
        "type": null,
        "value": "8",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify the firm targeted to receive the message if the message is delivered by a third party i.e. the third party firm identifier would be delivered in the TargetCompID (56) field and the ultimate receiver firm ID in this field.",
        "enumeration": null,
        "name": "DeliverToCompID",
        "section": null,
        "tag": 128,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "XYZ",
      },
      Field {
        "category": null,
        "description": "Integer message sequence number.",
        "enumeration": null,
        "name": "MsgSeqNum",
        "section": null,
        "tag": 34,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing a message sequence number. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:positiveInteger",
            "builtin": "false",
            "description": "int field representing a message sequence number. Value must be positive.",
            "standard": "XML",
          },
          "name": "SeqNum",
        },
        "value": 52,
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm sending message.",
        "enumeration": null,
        "name": "SenderCompID",
        "section": null,
        "tag": 49,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "CCG",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify receiving firm.",
        "enumeration": null,
        "name": "TargetCompID",
        "section": null,
        "tag": 56,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "ABC_DEFG04",
      },
      Field {
        "category": null,
        "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
        "enumeration": null,
        "name": "SendingTime",
        "section": null,
        "tag": 52,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20090402- 18:13:13",
      },
      Field {
        "category": null,
        "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
        "enumeration": null,
        "name": "Symbol",
        "section": null,
        "tag": 55,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "PAC",
      },
      Field {
        "category": null,
        "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
        "enumeration": null,
        "name": "OrderID",
        "section": null,
        "tag": 37,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "NF 0645/04022009",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
        "enumeration": null,
        "name": "ClOrdID",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 11,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "NF 0645/04022009",
      },
      Field {
        "category": null,
        "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
        "enumeration": null,
        "name": "ExecID",
        "section": null,
        "tag": 17,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "NF 0645/04022009 001001001",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 20,
        "type": null,
        "value": "0",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "OrdStatusCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Filled",
          "group": undefined,
          "id": "39003",
          "name": "Filled",
          "sort": 3,
          "tag": 39,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "2",
        },
        "name": "OrdStatus",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 39,
        "type": null,
        "value": "2",
      },
      Field {
        "category": null,
        "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
        "enumeration": null,
        "name": "ExecType",
        "section": null,
        "tag": 150,
        "type": null,
        "value": "2",
      },
      Field {
        "category": null,
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "SideCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Buy

For Securities Financing indicates the receipt of securities or collateral.",
          "group": undefined,
          "id": "54001",
          "name": "Buy",
          "sort": 1,
          "tag": 54,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "254",
          "value": "1",
        },
        "name": "Side",
        "section": null,
        "tag": 54,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "OrderQty",
        "section": null,
        "tag": 38,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 1000,
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "OrdTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Market",
          "group": undefined,
          "id": "40001",
          "name": "Market",
          "sort": 1,
          "tag": 40,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "1",
        },
        "name": "OrdType",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 40,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Specifies how long the order remains in effect. Absence of this field is interpreted as DAY. NOTE not applicable to CIV Orders.",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "TimeInForceCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Day (or session)

A buy or sell order that, if not executed expires at the end of the trading day on which it was entered.",
          "group": undefined,
          "id": "59001",
          "name": "Day",
          "sort": 1,
          "tag": 59,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "253",
          "value": "0",
        },
        "name": "TimeInForce",
        "section": null,
        "tag": 59,
        "type": null,
        "value": "0",
      },
      Field {
        "category": null,
        "description": "Price of this (last) fill.",
        "enumeration": null,
        "name": "LastPx",
        "section": null,
        "tag": 31,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
            "standard": "XML",
          },
          "name": "Price",
        },
        "value": 17,
      },
      Field {
        "category": null,
        "description": "Quantity (e.g. shares) bought/sold on this (last) fill.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "LastQty",
        "section": null,
        "tag": 32,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 1000,
      },
      Field {
        "category": null,
        "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "CumQty",
        "section": null,
        "tag": 14,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 0,
      },
      Field {
        "category": null,
        "description": "Calculated average price of all fills on this order.

For Fixed Income trades AvgPx is always expressed as percent-of-par, regardless of the PriceType (423) of LastPx (31). I.e., AvgPx will contain an average of percent-of-par values (see LastParPx (669)) for issues traded in Yield, Spread or Discount.",
        "enumeration": null,
        "name": "AvgPx",
        "section": null,
        "tag": 6,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
            "standard": "XML",
          },
          "name": "Price",
        },
        "value": 0,
      },
      Field {
        "category": null,
        "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "LeavesQty",
        "section": null,
        "tag": 151,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 0,
      },
      Field {
        "category": null,
        "description": "Timestamp when the business transaction represented by the message occurred.",
        "enumeration": null,
        "name": "TransactTime",
        "section": null,
        "tag": 60,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20090402-18:13:11",
      },
      Field {
        "category": null,
        "description": "Free format text string

(Note: this field does not have a specified maximum length)",
        "enumeration": null,
        "name": "Text",
        "section": null,
        "tag": 58,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "Fill",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 76,
        "type": null,
        "value": "0123",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 9433,
        "type": null,
        "value": "0123",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 47,
        "type": null,
        "value": "A",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 9579,
        "type": null,
        "value": "0000100001",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 9440,
        "type": null,
        "value": "001001001",
      },
      Field {
        "category": null,
        "description": "The number of ContraBroker (375) entries.",
        "enumeration": null,
        "name": "NoContraBrokers",
        "section": null,
        "tag": 382,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the number of entries in a repeating group. Value must be positive.",
          "name": "NumInGroup",
        },
        "value": 1,
      },
      Field {
        "category": null,
        "description": "Identifies contra broker. Standard NASD market-maker mnemonic is preferred.",
        "enumeration": null,
        "name": "ContraBroker",
        "section": null,
        "tag": 375,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "SB",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Identifies the trader (e.g. "badge number") of the ContraBroker.",
        "enumeration": null,
        "name": "ContraTrader",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 337,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "0234",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Quantity traded with the ContraBroker (375).",
        "enumeration": null,
        "name": "ContraTradeQty",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 437,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 1000,
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Identifes the time of the trade with the ContraBroker (375). (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
        "enumeration": null,
        "name": "ContraTradeTime",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 438,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "1413",
      },
      Field {
        "category": null,
        "description": "Indicates order settlement period. If present, SettlDate (64) overrides this field. If both SettlType (63) and SettDate (64) are omitted, the default for SettlType (63) is 0 (Regular)

Regular is defined as the default settlement period for the particular security on the exchange of execution.

In Fixed Income the contents of this field may influence the instrument definition if the SecurityID (48) is ambiguous. In the US an active Treasury offering may be re-opened, and for a time one CUSIP will apply to both the current and "when-issued" securities. Supplying a value of "7" clarifies the instrument description; any other value or the absence of this field should cause the respondent to default to the active issue.

Additionally the following patterns may be uses as well as enum values

Dx = FX tenor expression for "days", e.g. "D5", where "x" is any integer > 0

Mx = FX tenor expression for "months", e.g. "M3", where "x" is any integer > 0

Wx = FX tenor expression for "weeks", e.g. "W13", where "x" is any integer > 0

Yx = FX tenor expression for "years", e.g. "Y1", where "x" is any integer > 0

Noted that for FX the tenors expressed using Dx, Mx, Wx, and Yx values do not denote business days, but calendar days.",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "SettlTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Regular / FX Spot settlement (T+1 or T+2 depending on currency)",
          "group": undefined,
          "id": "63001",
          "name": "Regular",
          "sort": 1,
          "tag": 63,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "0",
        },
        "name": "SettlType",
        "section": null,
        "tag": 63,
        "type": null,
        "value": "0",
      },
      Field {
        "category": null,
        "description": "Broker capacity in order execution",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "LastCapacityCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Agent",
          "group": undefined,
          "id": "29001",
          "name": "Agent",
          "sort": 1,
          "tag": 29,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "1",
        },
        "name": "LastCapacity",
        "section": null,
        "tag": 29,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Market used to help identify a security.

Valid values:

See "Appendix 6-C"",
        "enumeration": null,
        "name": "SecurityExchange",
        "section": null,
        "tag": 207,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "false",
            "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
            "pattern": ".*",
            "standard": "XML",
          },
          "name": "Exchange",
        },
        "value": "N",
      },
      Field {
        "category": null,
        "description": "Market of execution for last fill, or an indication of the market where an order was routed

Valid values:

See "Appendix 6-C"

In the context of ESMA RTS 1 Annex I, Table 3, Field 6 "Venue of Execution" it is required that the "venue where the transaction was executed" be identified using ISO 10383 (MIC). Additionally, ESMA requires the use of "MIC code 'XOFF' for financial instruments admitted to trading or traded on a trading venue, where the transaction on that financial instrument is not executed on a trading venue, systematic internaliser or organized trading platform outside of the Union. Use 'SINT' for financial instruments admitted to trading or traded on a trading venue, where the transaction is executed on a systematic internaliser."",
        "enumeration": null,
        "name": "LastMkt",
        "section": null,
        "tag": 30,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "false",
            "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
            "pattern": ".*",
            "standard": "XML",
          },
          "name": "Exchange",
        },
        "value": "N",
      },
      Field {
        "category": null,
        "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
        "enumeration": null,
        "name": "CheckSum",
        "section": null,
        "tag": 10,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "116",
      },
    ],
    "description": "ExecutionReport",
    "fixVersion": "FIX.4.2",
    "messageSequence": 52,
    "messageString": "8=FIX.4.29=45135=8128=XYZ34=5249=CCG56=ABC_DEFG0452=20090402- 18:13:1355=PAC37=NF 0645/0402200911=NF 0645/0402200917=NF 0645/04022009 00100100120=039=2150=254=138=100040=159=031=17.0032=100014=06=0151=060=20090402-18:13:1158=Fill76=01239433=012347=A9579=00001000019440=001001001382=1375=SB337=0234437=1000438=141363=029=1207=N30=N10=116",
    "messageType": "8",
    "messageTypeDescription": "The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
    "structure": [
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Hdr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message header

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
              "id": "8",
              "name": "BeginString",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be second field in message)",
              "id": "9",
              "name": "BodyLength",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be third field in message)",
              "id": "35",
              "name": "MsgType",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "49",
              "name": "SenderCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "56",
              "name": "TargetCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "34",
              "name": "MsgSeqNum",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "52",
              "name": "SendingTime",
              "presence": "required",
            },
          ],
          "id": "1024",
          "name": "StandardHeader",
          "type": "component",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "id": "1024",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "CumQty",
          "added": "FIX.2.7",
          "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
          "id": "14",
          "name": "CumQty",
          "type": "Qty",
        },
        "id": "14",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "ExecID",
          "added": "FIX.2.7",
          "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
          "id": "17",
          "name": "ExecID",
          "type": "String",
          "updated": "FIX.5.0SP1",
          "updatedEP": "95",
        },
        "id": "17",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "OrdID",
          "added": "FIX.2.7",
          "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
          "id": "37",
          "name": "OrderID",
          "type": "String",
        },
        "id": "37",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "OrdStat",
          "added": "FIX.2.7",
          "baseCategory": "SingleGeneralOrderHandling",
          "baseCategoryAbbrName": "Stat",
          "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
          "id": "39",
          "name": "OrdStatus",
          "type": "OrdStatusCodeSet",
        },
        "id": "39",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Side",
          "added": "FIX.2.7",
          "description": "Side of order (see Volume : "Glossary" for value definitions)",
          "id": "54",
          "name": "Side",
          "type": "SideCodeSet",
        },
        "id": "54",
        "presence": "required",
      },
      {
        "added": "FIX.4.1",
        "data": {
          "abbrName": "ExecTyp",
          "added": "FIX.4.1",
          "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
          "id": "150",
          "name": "ExecType",
          "type": "ExecTypeCodeSet",
          "updated": "FIX.5.0SP2",
          "updatedEP": "131",
        },
        "id": "150",
        "presence": "required",
      },
      {
        "added": "FIX.4.1",
        "data": {
          "abbrName": "LeavesQty",
          "added": "FIX.4.1",
          "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
          "id": "151",
          "name": "LeavesQty",
          "type": "Qty",
        },
        "id": "151",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Trlr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message trailer

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, always last field in message)",
              "id": "10",
              "name": "CheckSum",
              "presence": "required",
            },
          ],
          "id": "1025",
          "name": "StandardTrailer",
          "type": "component",
        },
        "id": "1025",
        "presence": "required",
      },
      {
        "added": "FIX.4.3",
        "data": {
          "abbrName": "Instrmt",
          "added": "FIX.4.3",
          "category": "Common",
          "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
          "id": "1003",
          "name": "Instrument",
          "type": "component",
        },
        "id": "1003",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
    ],
  },
]
`;

exports[`FIXParser #getBriefDescription should generate a brief description BBSS Max Quantity Order (99,999,900 shares) 1`] = `
[
  Message {
    "bodyLengthExpected": 162,
    "bodyLengthValid": true,
    "bodyLengthValue": 162,
    "checksumExpected": "069",
    "checksumValid": true,
    "checksumValue": "069",
    "data": [
      Field {
        "category": null,
        "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
        "enumeration": EnumType {
          "added": "FIX.Latest",
          "addedEP": "270",
          "codeSet": "BeginStringCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Session profile FIX.4.2",
          "group": undefined,
          "id": "8001",
          "name": "FIX42",
          "sort": 1,
          "tag": 8,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "FIX.4.2",
        },
        "name": "BeginString",
        "section": null,
        "tag": 8,
        "type": null,
        "value": "FIX.4.2",
      },
      Field {
        "category": null,
        "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
        "enumeration": null,
        "name": "BodyLength",
        "section": null,
        "tag": 9,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the length in bytes. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:nonNegativeInteger",
            "builtin": "false",
            "description": "int field representing the length in bytes. Value must be positive.",
            "standard": "XML",
          },
          "name": "Length",
        },
        "value": 162,
      },
      Field {
        "category": null,
        "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
        "enumeration": EnumType {
          "added": undefined,
          "addedEP": undefined,
          "codeSet": "MsgTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "NewOrderSingle

The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
          "group": undefined,
          "id": "35014",
          "name": "NewOrderSingle",
          "sort": 14,
          "tag": 35,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "D",
        },
        "name": "MsgType",
        "section": null,
        "tag": 35,
        "type": null,
        "value": "D",
      },
      Field {
        "category": null,
        "description": "Integer message sequence number.",
        "enumeration": null,
        "name": "MsgSeqNum",
        "section": null,
        "tag": 34,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing a message sequence number. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:positiveInteger",
            "builtin": "false",
            "description": "int field representing a message sequence number. Value must be positive.",
            "standard": "XML",
          },
          "name": "SeqNum",
        },
        "value": 3,
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm sending message.",
        "enumeration": null,
        "name": "SenderCompID",
        "section": null,
        "tag": 49,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "LEH_LZJ02",
      },
      Field {
        "category": null,
        "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
        "enumeration": null,
        "name": "SendingTime",
        "section": null,
        "tag": 52,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20100303-15:17:05",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify receiving firm.",
        "enumeration": null,
        "name": "TargetCompID",
        "section": null,
        "tag": 56,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "CCG",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify specific individual or unit intended to receive message. "ADMIN" reserved for administrative messages not intended for a specific user.",
        "enumeration": null,
        "name": "TargetSubID",
        "section": null,
        "tag": 57,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "4",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm originating message if the message was delivered by a third party i.e. the third party firm identifier would be delivered in the SenderCompID field and the firm originating the message in this field.",
        "enumeration": null,
        "name": "OnBehalfOfCompID",
        "section": null,
        "tag": 115,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "LZJ",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify specific message destination's location (i.e. geographic location and/or desk, trader)",
        "enumeration": null,
        "name": "TargetLocationID",
        "section": null,
        "tag": 143,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "ER",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
        "enumeration": null,
        "name": "ClOrdID",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 11,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "NF 0041/03032010",
      },
      Field {
        "category": null,
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "SideCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Buy

For Securities Financing indicates the receipt of securities or collateral.",
          "group": undefined,
          "id": "54001",
          "name": "Buy",
          "sort": 1,
          "tag": 54,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "254",
          "value": "1",
        },
        "name": "Side",
        "section": null,
        "tag": 54,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "OrderQty",
        "section": null,
        "tag": 38,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 99999900,
      },
      Field {
        "category": null,
        "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
        "enumeration": null,
        "name": "Symbol",
        "section": null,
        "tag": 55,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "MMM",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "OrdTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Limit",
          "group": undefined,
          "id": "40002",
          "name": "Limit",
          "sort": 2,
          "tag": 40,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "2",
        },
        "name": "OrdType",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 40,
        "type": null,
        "value": "2",
      },
      Field {
        "category": null,
        "description": "Price per unit of quantity (e.g. per share)",
        "enumeration": null,
        "name": "Price",
        "section": null,
        "tag": 44,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
            "standard": "XML",
          },
          "name": "Price",
        },
        "value": 50,
      },
      Field {
        "category": null,
        "description": "Specifies how long the order remains in effect. Absence of this field is interpreted as DAY. NOTE not applicable to CIV Orders.",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "TimeInForceCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Day (or session)

A buy or sell order that, if not executed expires at the end of the trading day on which it was entered.",
          "group": undefined,
          "id": "59001",
          "name": "Day",
          "sort": 1,
          "tag": 59,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "253",
          "value": "0",
        },
        "name": "TimeInForce",
        "section": null,
        "tag": 59,
        "type": null,
        "value": "0",
      },
      Field {
        "category": null,
        "description": "Account mnemonic as agreed between buy and sell sides, e.g. broker and institution or investor/intermediary and fund manager.",
        "enumeration": null,
        "name": "Account",
        "section": null,
        "tag": 1,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "ABC123ZYX",
      },
      Field {
        "category": null,
        "description": "Instructions for order handling on Broker trading floor",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "HandlInstCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Automated execution order, private, no Broker intervention",
          "group": undefined,
          "id": "21001",
          "name": "AutomatedExecutionNoIntervention",
          "sort": 1,
          "tag": 21,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "1",
        },
        "name": "HandlInst",
        "section": null,
        "tag": 21,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Market used to help identify a security.

Valid values:

See "Appendix 6-C"",
        "enumeration": null,
        "name": "SecurityExchange",
        "section": null,
        "tag": 207,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "false",
            "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
            "pattern": ".*",
            "standard": "XML",
          },
          "name": "Exchange",
        },
        "value": "N",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 47,
        "type": null,
        "value": "A",
      },
      Field {
        "category": null,
        "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
        "enumeration": null,
        "name": "CheckSum",
        "section": null,
        "tag": 10,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "069",
      },
    ],
    "description": "NewOrderSingle",
    "fixVersion": "FIX.4.2",
    "messageSequence": 3,
    "messageString": "8=FIX.4.29=16235=D34=349=LEH_LZJ0252=20100303-15:17:0556=CCG57=4115=LZJ143=ER11=NF 0041/0303201054=138=9999990055=MMM40=244=50.0059=01=ABC123ZYX21=1207=N47=A10=069",
    "messageType": "D",
    "messageTypeDescription": "The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
    "structure": [
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Hdr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message header

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
              "id": "8",
              "name": "BeginString",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be second field in message)",
              "id": "9",
              "name": "BodyLength",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be third field in message)",
              "id": "35",
              "name": "MsgType",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "49",
              "name": "SenderCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "56",
              "name": "TargetCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "34",
              "name": "MsgSeqNum",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "52",
              "name": "SendingTime",
              "presence": "required",
            },
          ],
          "id": "1024",
          "name": "StandardHeader",
          "type": "component",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "id": "1024",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "ClOrdID",
          "added": "FIX.2.7",
          "baseCategory": "SingleGeneralOrderHandling",
          "baseCategoryAbbrName": "ID",
          "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
          "id": "11",
          "name": "ClOrdID",
          "type": "String",
          "updated": "FIX.Latest",
          "updatedEP": "282",
        },
        "id": "11",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "OrdTyp",
          "added": "FIX.2.7",
          "baseCategory": "SingleGeneralOrderHandling",
          "baseCategoryAbbrName": "Typ",
          "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
          "id": "40",
          "name": "OrdType",
          "type": "OrdTypeCodeSet",
        },
        "id": "40",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Side",
          "added": "FIX.2.7",
          "description": "Side of order (see Volume : "Glossary" for value definitions)",
          "id": "54",
          "name": "Side",
          "type": "SideCodeSet",
        },
        "id": "54",
        "presence": "required",
      },
      {
        "added": "FIX.4.2",
        "data": {
          "abbrName": "TxnTm",
          "added": "FIX.2.7",
          "description": "Timestamp when the business transaction represented by the message occurred.",
          "id": "60",
          "name": "TransactTime",
          "type": "UTCTimestamp",
          "updated": "FIX.5.0SP1",
          "updatedEP": "94",
        },
        "id": "60",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Trlr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message trailer

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, always last field in message)",
              "id": "10",
              "name": "CheckSum",
              "presence": "required",
            },
          ],
          "id": "1025",
          "name": "StandardTrailer",
          "type": "component",
        },
        "id": "1025",
        "presence": "required",
      },
      {
        "added": "FIX.4.3",
        "data": {
          "abbrName": "Instrmt",
          "added": "FIX.4.3",
          "category": "Common",
          "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
          "id": "1003",
          "name": "Instrument",
          "type": "component",
        },
        "id": "1003",
        "presence": "required",
      },
      {
        "added": "FIX.4.3",
        "data": {
          "abbrName": "OrdQty",
          "added": "FIX.4.3",
          "category": "Common",
          "description": "The OrderQtyData component block contains the fields commonly used for indicating the amount or quantity of an order. Note that when this component block is marked as "required" in a message either one of these three fields must be used to identify the amount: OrderQty, CashOrderQty or OrderPercent (in the case of CIV).

",
          "id": "1011",
          "name": "OrderQtyData",
          "type": "component",
        },
        "id": "1011",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "221",
      },
    ],
  },
]
`;

exports[`FIXParser #getBriefDescription should generate a brief description BBSS Trade Bust of Previous Execution 1`] = `
[
  Message {
    "bodyLengthExpected": 400,
    "bodyLengthValid": false,
    "bodyLengthValue": 397,
    "checksumExpected": "146",
    "checksumValid": false,
    "checksumValue": "004",
    "data": [
      Field {
        "category": null,
        "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
        "enumeration": EnumType {
          "added": "FIX.Latest",
          "addedEP": "270",
          "codeSet": "BeginStringCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Session profile FIX.4.2",
          "group": undefined,
          "id": "8001",
          "name": "FIX42",
          "sort": 1,
          "tag": 8,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "FIX.4.2",
        },
        "name": "BeginString",
        "section": null,
        "tag": 8,
        "type": null,
        "value": "FIX.4.2",
      },
      Field {
        "category": null,
        "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
        "enumeration": null,
        "name": "BodyLength",
        "section": null,
        "tag": 9,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the length in bytes. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:nonNegativeInteger",
            "builtin": "false",
            "description": "int field representing the length in bytes. Value must be positive.",
            "standard": "XML",
          },
          "name": "Length",
        },
        "value": 397,
      },
      Field {
        "category": null,
        "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
        "enumeration": EnumType {
          "added": undefined,
          "addedEP": undefined,
          "codeSet": "MsgTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "ExecutionReport

The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
          "group": undefined,
          "id": "35009",
          "name": "ExecutionReport",
          "sort": 9,
          "tag": 35,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "8",
        },
        "name": "MsgType",
        "section": null,
        "tag": 35,
        "type": null,
        "value": "8",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify the firm targeted to receive the message if the message is delivered by a third party i.e. the third party firm identifier would be delivered in the TargetCompID (56) field and the ultimate receiver firm ID in this field.",
        "enumeration": null,
        "name": "DeliverToCompID",
        "section": null,
        "tag": 128,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "XYZ",
      },
      Field {
        "category": null,
        "description": "Integer message sequence number.",
        "enumeration": null,
        "name": "MsgSeqNum",
        "section": null,
        "tag": 34,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing a message sequence number. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:positiveInteger",
            "builtin": "false",
            "description": "int field representing a message sequence number. Value must be positive.",
            "standard": "XML",
          },
          "name": "SeqNum",
        },
        "value": 70,
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm sending message.",
        "enumeration": null,
        "name": "SenderCompID",
        "section": null,
        "tag": 49,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "CCG",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify receiving firm.",
        "enumeration": null,
        "name": "TargetCompID",
        "section": null,
        "tag": 56,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "ABC_DEFG04",
      },
      Field {
        "category": null,
        "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
        "enumeration": null,
        "name": "SendingTime",
        "section": null,
        "tag": 52,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20090402- 18:20:41",
      },
      Field {
        "category": null,
        "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
        "enumeration": null,
        "name": "Symbol",
        "section": null,
        "tag": 55,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "PAC",
      },
      Field {
        "category": null,
        "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
        "enumeration": null,
        "name": "OrderID",
        "section": null,
        "tag": 37,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "NF 0644/04022009",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
        "enumeration": null,
        "name": "ClOrdID",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 11,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "NF 0644/04022009",
      },
      Field {
        "category": null,
        "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
        "enumeration": null,
        "name": "ExecID",
        "section": null,
        "tag": 17,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "NF 0644/04022009 001001003",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 20,
        "type": null,
        "value": "1",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "OrdStatusCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Partially filled",
          "group": undefined,
          "id": "39002",
          "name": "PartiallyFilled",
          "sort": 2,
          "tag": 39,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "1",
        },
        "name": "OrdStatus",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 39,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
        "enumeration": null,
        "name": "ExecType",
        "section": null,
        "tag": 150,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "SideCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Buy

For Securities Financing indicates the receipt of securities or collateral.",
          "group": undefined,
          "id": "54001",
          "name": "Buy",
          "sort": 1,
          "tag": 54,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "254",
          "value": "1",
        },
        "name": "Side",
        "section": null,
        "tag": 54,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "OrderQty",
        "section": null,
        "tag": 38,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 100,
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "OrdTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Market",
          "group": undefined,
          "id": "40001",
          "name": "Market",
          "sort": 1,
          "tag": 40,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "1",
        },
        "name": "OrdType",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 40,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Specifies how long the order remains in effect. Absence of this field is interpreted as DAY. NOTE not applicable to CIV Orders.",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "TimeInForceCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Day (or session)

A buy or sell order that, if not executed expires at the end of the trading day on which it was entered.",
          "group": undefined,
          "id": "59001",
          "name": "Day",
          "sort": 1,
          "tag": 59,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "253",
          "value": "0",
        },
        "name": "TimeInForce",
        "section": null,
        "tag": 59,
        "type": null,
        "value": "0",
      },
      Field {
        "category": null,
        "description": "Price of this (last) fill.",
        "enumeration": null,
        "name": "LastPx",
        "section": null,
        "tag": 31,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
            "standard": "XML",
          },
          "name": "Price",
        },
        "value": 16.77,
      },
      Field {
        "category": null,
        "description": "Quantity (e.g. shares) bought/sold on this (last) fill.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "LastQty",
        "section": null,
        "tag": 32,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 100,
      },
      Field {
        "category": null,
        "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "CumQty",
        "section": null,
        "tag": 14,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 0,
      },
      Field {
        "category": null,
        "description": "Calculated average price of all fills on this order.

For Fixed Income trades AvgPx is always expressed as percent-of-par, regardless of the PriceType (423) of LastPx (31). I.e., AvgPx will contain an average of percent-of-par values (see LastParPx (669)) for issues traded in Yield, Spread or Discount.",
        "enumeration": null,
        "name": "AvgPx",
        "section": null,
        "tag": 6,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
            "standard": "XML",
          },
          "name": "Price",
        },
        "value": 0,
      },
      Field {
        "category": null,
        "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "LeavesQty",
        "section": null,
        "tag": 151,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 100,
      },
      Field {
        "category": null,
        "description": "Timestamp when the business transaction represented by the message occurred.",
        "enumeration": null,
        "name": "TransactTime",
        "section": null,
        "tag": 60,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20090402-18:20:40",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 9579,
        "type": null,
        "value": "0000100003",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 9440,
        "type": null,
        "value": "001001003",
      },
      Field {
        "category": null,
        "description": "The number of ContraBroker (375) entries.",
        "enumeration": null,
        "name": "NoContraBrokers",
        "section": null,
        "tag": 382,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the number of entries in a repeating group. Value must be positive.",
          "name": "NumInGroup",
        },
        "value": 1,
      },
      Field {
        "category": null,
        "description": "Identifies contra broker. Standard NASD market-maker mnemonic is preferred.",
        "enumeration": null,
        "name": "ContraBroker",
        "section": null,
        "tag": 375,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "BARC",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Identifies the trader (e.g. "badge number") of the ContraBroker.",
        "enumeration": null,
        "name": "ContraTrader",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 337,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "0000",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Quantity traded with the ContraBroker (375).",
        "enumeration": null,
        "name": "ContraTradeQty",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 437,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 100,
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Identifes the time of the trade with the ContraBroker (375). (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
        "enumeration": null,
        "name": "ContraTradeTime",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 438,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "1420",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 76,
        "type": null,
        "value": "8080",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 9433,
        "type": null,
        "value": "8080",
      },
      Field {
        "category": null,
        "description": "Reference identifier used with Trade, Trade Cancel and Trade Correct execution types.

(Prior to FIX 4.1 this field was of type int)",
        "enumeration": null,
        "name": "ExecRefID",
        "section": null,
        "tag": 19,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "NF 0644/04022009 001001002",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 9704,
        "type": null,
        "value": "0000100002",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 9425,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 47,
        "type": null,
        "value": "A",
      },
      Field {
        "category": null,
        "description": "Indicates order settlement period. If present, SettlDate (64) overrides this field. If both SettlType (63) and SettDate (64) are omitted, the default for SettlType (63) is 0 (Regular)

Regular is defined as the default settlement period for the particular security on the exchange of execution.

In Fixed Income the contents of this field may influence the instrument definition if the SecurityID (48) is ambiguous. In the US an active Treasury offering may be re-opened, and for a time one CUSIP will apply to both the current and "when-issued" securities. Supplying a value of "7" clarifies the instrument description; any other value or the absence of this field should cause the respondent to default to the active issue.

Additionally the following patterns may be uses as well as enum values

Dx = FX tenor expression for "days", e.g. "D5", where "x" is any integer > 0

Mx = FX tenor expression for "months", e.g. "M3", where "x" is any integer > 0

Wx = FX tenor expression for "weeks", e.g. "W13", where "x" is any integer > 0

Yx = FX tenor expression for "years", e.g. "Y1", where "x" is any integer > 0

Noted that for FX the tenors expressed using Dx, Mx, Wx, and Yx values do not denote business days, but calendar days.",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "SettlTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Regular / FX Spot settlement (T+1 or T+2 depending on currency)",
          "group": undefined,
          "id": "63001",
          "name": "Regular",
          "sort": 1,
          "tag": 63,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "0",
        },
        "name": "SettlType",
        "section": null,
        "tag": 63,
        "type": null,
        "value": "0",
      },
      Field {
        "category": null,
        "description": "Broker capacity in order execution",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "LastCapacityCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Agent",
          "group": undefined,
          "id": "29001",
          "name": "Agent",
          "sort": 1,
          "tag": 29,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "1",
        },
        "name": "LastCapacity",
        "section": null,
        "tag": 29,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Market used to help identify a security.

Valid values:

See "Appendix 6-C"",
        "enumeration": null,
        "name": "SecurityExchange",
        "section": null,
        "tag": 207,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "false",
            "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
            "pattern": ".*",
            "standard": "XML",
          },
          "name": "Exchange",
        },
        "value": "N",
      },
      Field {
        "category": null,
        "description": "Market of execution for last fill, or an indication of the market where an order was routed

Valid values:

See "Appendix 6-C"

In the context of ESMA RTS 1 Annex I, Table 3, Field 6 "Venue of Execution" it is required that the "venue where the transaction was executed" be identified using ISO 10383 (MIC). Additionally, ESMA requires the use of "MIC code 'XOFF' for financial instruments admitted to trading or traded on a trading venue, where the transaction on that financial instrument is not executed on a trading venue, systematic internaliser or organized trading platform outside of the Union. Use 'SINT' for financial instruments admitted to trading or traded on a trading venue, where the transaction is executed on a systematic internaliser."",
        "enumeration": null,
        "name": "LastMkt",
        "section": null,
        "tag": 30,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "false",
            "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
            "pattern": ".*",
            "standard": "XML",
          },
          "name": "Exchange",
        },
        "value": "N",
      },
      Field {
        "category": null,
        "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
        "enumeration": null,
        "name": "CheckSum",
        "section": null,
        "tag": 10,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "004",
      },
    ],
    "description": "ExecutionReport",
    "fixVersion": "FIX.4.2",
    "messageSequence": 70,
    "messageString": "8=FIX.4.29=39735=8128=XYZ34=7049=CCG56=ABC_DEFG0452=20090402- 18:20:4155=PAC37=NF 0644/0402200911=NF 0644/0402200917=NF 0644/04022009 00100100320=139=1150=154=138=10040=159=031=16.7732=10014=06=0151=10060=20090402-18:20:409579=00001000039440=001001003382=1375=BARC337=0000437=100438=142076=80809433=808019=NF 0644/04022009 0010010029704=00001000029425=147=A63=029=1207=N30=N10=004",
    "messageType": "8",
    "messageTypeDescription": "The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
    "structure": [
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Hdr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message header

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
              "id": "8",
              "name": "BeginString",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be second field in message)",
              "id": "9",
              "name": "BodyLength",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be third field in message)",
              "id": "35",
              "name": "MsgType",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "49",
              "name": "SenderCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "56",
              "name": "TargetCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "34",
              "name": "MsgSeqNum",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "52",
              "name": "SendingTime",
              "presence": "required",
            },
          ],
          "id": "1024",
          "name": "StandardHeader",
          "type": "component",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "id": "1024",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "CumQty",
          "added": "FIX.2.7",
          "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
          "id": "14",
          "name": "CumQty",
          "type": "Qty",
        },
        "id": "14",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "ExecID",
          "added": "FIX.2.7",
          "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
          "id": "17",
          "name": "ExecID",
          "type": "String",
          "updated": "FIX.5.0SP1",
          "updatedEP": "95",
        },
        "id": "17",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "OrdID",
          "added": "FIX.2.7",
          "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
          "id": "37",
          "name": "OrderID",
          "type": "String",
        },
        "id": "37",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "OrdStat",
          "added": "FIX.2.7",
          "baseCategory": "SingleGeneralOrderHandling",
          "baseCategoryAbbrName": "Stat",
          "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
          "id": "39",
          "name": "OrdStatus",
          "type": "OrdStatusCodeSet",
        },
        "id": "39",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Side",
          "added": "FIX.2.7",
          "description": "Side of order (see Volume : "Glossary" for value definitions)",
          "id": "54",
          "name": "Side",
          "type": "SideCodeSet",
        },
        "id": "54",
        "presence": "required",
      },
      {
        "added": "FIX.4.1",
        "data": {
          "abbrName": "ExecTyp",
          "added": "FIX.4.1",
          "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
          "id": "150",
          "name": "ExecType",
          "type": "ExecTypeCodeSet",
          "updated": "FIX.5.0SP2",
          "updatedEP": "131",
        },
        "id": "150",
        "presence": "required",
      },
      {
        "added": "FIX.4.1",
        "data": {
          "abbrName": "LeavesQty",
          "added": "FIX.4.1",
          "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
          "id": "151",
          "name": "LeavesQty",
          "type": "Qty",
        },
        "id": "151",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Trlr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message trailer

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, always last field in message)",
              "id": "10",
              "name": "CheckSum",
              "presence": "required",
            },
          ],
          "id": "1025",
          "name": "StandardTrailer",
          "type": "component",
        },
        "id": "1025",
        "presence": "required",
      },
      {
        "added": "FIX.4.3",
        "data": {
          "abbrName": "Instrmt",
          "added": "FIX.4.3",
          "category": "Common",
          "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
          "id": "1003",
          "name": "Instrument",
          "type": "component",
        },
        "id": "1003",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
    ],
  },
]
`;

exports[`FIXParser #getBriefDescription should generate a brief description CBS Direct-To-Handheld New Order Single 1`] = `
[
  Message {
    "bodyLengthExpected": 155,
    "bodyLengthValid": false,
    "bodyLengthValue": 154,
    "checksumExpected": "071",
    "checksumValid": false,
    "checksumValue": "013",
    "data": [
      Field {
        "category": null,
        "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
        "enumeration": EnumType {
          "added": "FIX.Latest",
          "addedEP": "270",
          "codeSet": "BeginStringCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Session profile FIX.4.2",
          "group": undefined,
          "id": "8001",
          "name": "FIX42",
          "sort": 1,
          "tag": 8,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "FIX.4.2",
        },
        "name": "BeginString",
        "section": null,
        "tag": 8,
        "type": null,
        "value": "FIX.4.2",
      },
      Field {
        "category": null,
        "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
        "enumeration": null,
        "name": "BodyLength",
        "section": null,
        "tag": 9,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the length in bytes. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:nonNegativeInteger",
            "builtin": "false",
            "description": "int field representing the length in bytes. Value must be positive.",
            "standard": "XML",
          },
          "name": "Length",
        },
        "value": 154,
      },
      Field {
        "category": null,
        "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
        "enumeration": EnumType {
          "added": undefined,
          "addedEP": undefined,
          "codeSet": "MsgTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "NewOrderSingle

The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
          "group": undefined,
          "id": "35014",
          "name": "NewOrderSingle",
          "sort": 14,
          "tag": 35,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "D",
        },
        "name": "MsgType",
        "section": null,
        "tag": 35,
        "type": null,
        "value": "D",
      },
      Field {
        "category": null,
        "description": "Integer message sequence number.",
        "enumeration": null,
        "name": "MsgSeqNum",
        "section": null,
        "tag": 34,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing a message sequence number. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:positiveInteger",
            "builtin": "false",
            "description": "int field representing a message sequence number. Value must be positive.",
            "standard": "XML",
          },
          "name": "SeqNum",
        },
        "value": 57,
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm sending message.",
        "enumeration": null,
        "name": "SenderCompID",
        "section": null,
        "tag": 49,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "ABC_DEFG04",
      },
      Field {
        "category": null,
        "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
        "enumeration": null,
        "name": "SendingTime",
        "section": null,
        "tag": 52,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20090402-18:15:40",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify receiving firm.",
        "enumeration": null,
        "name": "TargetCompID",
        "section": null,
        "tag": 56,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "CCG",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm originating message if the message was delivered by a third party i.e. the third party firm identifier would be delivered in the SenderCompID field and the firm originating the message in this field.",
        "enumeration": null,
        "name": "OnBehalfOfCompID",
        "section": null,
        "tag": 115,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "XYZ",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify specific message destination's location (i.e. geographic location and/or desk, trader)",
        "enumeration": null,
        "name": "TargetLocationID",
        "section": null,
        "tag": 143,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "100",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
        "enumeration": null,
        "name": "ClOrdID",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 11,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "NF 0646/04022009",
      },
      Field {
        "category": null,
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "SideCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Buy

For Securities Financing indicates the receipt of securities or collateral.",
          "group": undefined,
          "id": "54001",
          "name": "Buy",
          "sort": 1,
          "tag": 54,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "254",
          "value": "1",
        },
        "name": "Side",
        "section": null,
        "tag": 54,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "OrderQty",
        "section": null,
        "tag": 38,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 100,
      },
      Field {
        "category": null,
        "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
        "enumeration": null,
        "name": "Symbol",
        "section": null,
        "tag": 55,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "PAC",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "OrdTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Market",
          "group": undefined,
          "id": "40001",
          "name": "Market",
          "sort": 1,
          "tag": 40,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "1",
        },
        "name": "OrdType",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 40,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Specifies how long the order remains in effect. Absence of this field is interpreted as DAY. NOTE not applicable to CIV Orders.",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "TimeInForceCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Day (or session)

A buy or sell order that, if not executed expires at the end of the trading day on which it was entered.",
          "group": undefined,
          "id": "59001",
          "name": "Day",
          "sort": 1,
          "tag": 59,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "253",
          "value": "0",
        },
        "name": "TimeInForce",
        "section": null,
        "tag": 59,
        "type": null,
        "value": "0",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 47,
        "type": null,
        "value": "A",
      },
      Field {
        "category": null,
        "description": "Timestamp when the business transaction represented by the message occurred.",
        "enumeration": null,
        "name": "TransactTime",
        "section": null,
        "tag": 60,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20090402-18:15:40",
      },
      Field {
        "category": null,
        "description": "Instructions for order handling on Broker trading floor",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "HandlInstCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Automated execution order, private, no Broker intervention",
          "group": undefined,
          "id": "21001",
          "name": "AutomatedExecutionNoIntervention",
          "sort": 1,
          "tag": 21,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "1",
        },
        "name": "HandlInst",
        "section": null,
        "tag": 21,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Market used to help identify a security.

Valid values:

See "Appendix 6-C"",
        "enumeration": null,
        "name": "SecurityExchange",
        "section": null,
        "tag": 207,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "false",
            "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
            "pattern": ".*",
            "standard": "XML",
          },
          "name": "Exchange",
        },
        "value": "N",
      },
      Field {
        "category": null,
        "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
        "enumeration": null,
        "name": "CheckSum",
        "section": null,
        "tag": 10,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "013",
      },
    ],
    "description": "NewOrderSingle",
    "fixVersion": "FIX.4.2",
    "messageSequence": 57,
    "messageString": "8=FIX.4.29=15435=D34=5749=ABC_DEFG0452=20090402-18:15:4056=CCG115=XYZ143=10011=NF 0646/0402200954=138=10055=PAC40=159=047=A60=20090402-18:15:4021=1207=N10=013",
    "messageType": "D",
    "messageTypeDescription": "The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
    "structure": [
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Hdr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message header

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
              "id": "8",
              "name": "BeginString",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be second field in message)",
              "id": "9",
              "name": "BodyLength",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be third field in message)",
              "id": "35",
              "name": "MsgType",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "49",
              "name": "SenderCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "56",
              "name": "TargetCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "34",
              "name": "MsgSeqNum",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "52",
              "name": "SendingTime",
              "presence": "required",
            },
          ],
          "id": "1024",
          "name": "StandardHeader",
          "type": "component",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "id": "1024",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "ClOrdID",
          "added": "FIX.2.7",
          "baseCategory": "SingleGeneralOrderHandling",
          "baseCategoryAbbrName": "ID",
          "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
          "id": "11",
          "name": "ClOrdID",
          "type": "String",
          "updated": "FIX.Latest",
          "updatedEP": "282",
        },
        "id": "11",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "OrdTyp",
          "added": "FIX.2.7",
          "baseCategory": "SingleGeneralOrderHandling",
          "baseCategoryAbbrName": "Typ",
          "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
          "id": "40",
          "name": "OrdType",
          "type": "OrdTypeCodeSet",
        },
        "id": "40",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Side",
          "added": "FIX.2.7",
          "description": "Side of order (see Volume : "Glossary" for value definitions)",
          "id": "54",
          "name": "Side",
          "type": "SideCodeSet",
        },
        "id": "54",
        "presence": "required",
      },
      {
        "added": "FIX.4.2",
        "data": {
          "abbrName": "TxnTm",
          "added": "FIX.2.7",
          "description": "Timestamp when the business transaction represented by the message occurred.",
          "id": "60",
          "name": "TransactTime",
          "type": "UTCTimestamp",
          "updated": "FIX.5.0SP1",
          "updatedEP": "94",
        },
        "id": "60",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Trlr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message trailer

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, always last field in message)",
              "id": "10",
              "name": "CheckSum",
              "presence": "required",
            },
          ],
          "id": "1025",
          "name": "StandardTrailer",
          "type": "component",
        },
        "id": "1025",
        "presence": "required",
      },
      {
        "added": "FIX.4.3",
        "data": {
          "abbrName": "Instrmt",
          "added": "FIX.4.3",
          "category": "Common",
          "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
          "id": "1003",
          "name": "Instrument",
          "type": "component",
        },
        "id": "1003",
        "presence": "required",
      },
      {
        "added": "FIX.4.3",
        "data": {
          "abbrName": "OrdQty",
          "added": "FIX.4.3",
          "category": "Common",
          "description": "The OrderQtyData component block contains the fields commonly used for indicating the amount or quantity of an order. Note that when this component block is marked as "required" in a message either one of these three fields must be used to identify the amount: OrderQty, CashOrderQty or OrderPercent (in the case of CIV).

",
          "id": "1011",
          "name": "OrderQtyData",
          "type": "component",
        },
        "id": "1011",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "221",
      },
    ],
  },
]
`;

exports[`FIXParser #getBriefDescription should generate a brief description Cancel Replace (changing quantity) of previously reduced order 1`] = `
[
  Message {
    "bodyLengthExpected": 198,
    "bodyLengthValid": false,
    "bodyLengthValue": 197,
    "checksumExpected": "227",
    "checksumValid": false,
    "checksumValue": "172",
    "data": [
      Field {
        "category": null,
        "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
        "enumeration": EnumType {
          "added": "FIX.Latest",
          "addedEP": "270",
          "codeSet": "BeginStringCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Session profile FIX.4.2",
          "group": undefined,
          "id": "8001",
          "name": "FIX42",
          "sort": 1,
          "tag": 8,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "FIX.4.2",
        },
        "name": "BeginString",
        "section": null,
        "tag": 8,
        "type": null,
        "value": "FIX.4.2",
      },
      Field {
        "category": null,
        "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
        "enumeration": null,
        "name": "BodyLength",
        "section": null,
        "tag": 9,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the length in bytes. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:nonNegativeInteger",
            "builtin": "false",
            "description": "int field representing the length in bytes. Value must be positive.",
            "standard": "XML",
          },
          "name": "Length",
        },
        "value": 197,
      },
      Field {
        "category": null,
        "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
        "enumeration": EnumType {
          "added": undefined,
          "addedEP": undefined,
          "codeSet": "MsgTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "OrderCancelReplaceRequest

The order cancel/replace request is used to change the parameters of an existing order.

Do not use this message to cancel the remaining quantity of an outstanding order, use the Order Cancel Request message for this purpose.",
          "group": undefined,
          "id": "35017",
          "name": "OrderCancelReplaceRequest",
          "sort": 17,
          "tag": 35,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "G",
        },
        "name": "MsgType",
        "section": null,
        "tag": 35,
        "type": null,
        "value": "G",
      },
      Field {
        "category": null,
        "description": "Integer message sequence number.",
        "enumeration": null,
        "name": "MsgSeqNum",
        "section": null,
        "tag": 34,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing a message sequence number. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:positiveInteger",
            "builtin": "false",
            "description": "int field representing a message sequence number. Value must be positive.",
            "standard": "XML",
          },
          "name": "SeqNum",
        },
        "value": 131,
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm sending message.",
        "enumeration": null,
        "name": "SenderCompID",
        "section": null,
        "tag": 49,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "ABC_DEFG01",
      },
      Field {
        "category": null,
        "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
        "enumeration": null,
        "name": "SendingTime",
        "section": null,
        "tag": 52,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20090325-15:20:32",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify receiving firm.",
        "enumeration": null,
        "name": "TargetCompID",
        "section": null,
        "tag": 56,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "CCG",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm originating message if the message was delivered by a third party i.e. the third party firm identifier would be delivered in the SenderCompID field and the firm originating the message in this field.",
        "enumeration": null,
        "name": "OnBehalfOfCompID",
        "section": null,
        "tag": 115,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "XYZ",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
        "enumeration": null,
        "name": "ClOrdID",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 11,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "NF 0578/03252009",
      },
      Field {
        "category": null,
        "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
        "enumeration": null,
        "name": "OrderID",
        "section": null,
        "tag": 37,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "NF 0576/03252009",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "ClOrdID (11) of the previous order (NOT the initial order of the day) as assigned by the institution, used to identify the previous order in cancel and cancel/replace requests.",
        "enumeration": null,
        "name": "OrigClOrdID",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 41,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "NF 0576/03252009",
      },
      Field {
        "category": null,
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "SideCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Buy

For Securities Financing indicates the receipt of securities or collateral.",
          "group": undefined,
          "id": "54001",
          "name": "Buy",
          "sort": 1,
          "tag": 54,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "254",
          "value": "1",
        },
        "name": "Side",
        "section": null,
        "tag": 54,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "OrderQty",
        "section": null,
        "tag": 38,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 2000,
      },
      Field {
        "category": null,
        "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
        "enumeration": null,
        "name": "Symbol",
        "section": null,
        "tag": 55,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "CVS",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "OrdTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Limit",
          "group": undefined,
          "id": "40002",
          "name": "Limit",
          "sort": 2,
          "tag": 40,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "2",
        },
        "name": "OrdType",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 40,
        "type": null,
        "value": "2",
      },
      Field {
        "category": null,
        "description": "Price per unit of quantity (e.g. per share)",
        "enumeration": null,
        "name": "Price",
        "section": null,
        "tag": 44,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
            "standard": "XML",
          },
          "name": "Price",
        },
        "value": 25.47,
      },
      Field {
        "category": null,
        "description": "Specifies how long the order remains in effect. Absence of this field is interpreted as DAY. NOTE not applicable to CIV Orders.",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "TimeInForceCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Day (or session)

A buy or sell order that, if not executed expires at the end of the trading day on which it was entered.",
          "group": undefined,
          "id": "59001",
          "name": "Day",
          "sort": 1,
          "tag": 59,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "253",
          "value": "0",
        },
        "name": "TimeInForce",
        "section": null,
        "tag": 59,
        "type": null,
        "value": "0",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 47,
        "type": null,
        "value": "A",
      },
      Field {
        "category": null,
        "description": "Timestamp when the business transaction represented by the message occurred.",
        "enumeration": null,
        "name": "TransactTime",
        "section": null,
        "tag": 60,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20090325-15:20:32",
      },
      Field {
        "category": null,
        "description": "Instructions for order handling on Broker trading floor",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "HandlInstCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Automated execution order, private, no Broker intervention",
          "group": undefined,
          "id": "21001",
          "name": "AutomatedExecutionNoIntervention",
          "sort": 1,
          "tag": 21,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "1",
        },
        "name": "HandlInst",
        "section": null,
        "tag": 21,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Market used to help identify a security.

Valid values:

See "Appendix 6-C"",
        "enumeration": null,
        "name": "SecurityExchange",
        "section": null,
        "tag": 207,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "false",
            "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
            "pattern": ".*",
            "standard": "XML",
          },
          "name": "Exchange",
        },
        "value": "N",
      },
      Field {
        "category": null,
        "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
        "enumeration": null,
        "name": "CheckSum",
        "section": null,
        "tag": 10,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "172",
      },
    ],
    "description": "OrderCancelReplaceRequest",
    "fixVersion": "FIX.4.2",
    "messageSequence": 131,
    "messageString": "8=FIX.4.29=19735=G34=13149=ABC_DEFG0152=20090325-15:20:3256=CCG115=XYZ11=NF 0578/0325200937=NF 0576/0325200941=NF 0576/0325200954=138=200055=CVS40=244=25.4759=047=A60=20090325-15:20:3221=1207=N10=172",
    "messageType": "G",
    "messageTypeDescription": "The order cancel/replace request is used to change the parameters of an existing order.

Do not use this message to cancel the remaining quantity of an outstanding order, use the Order Cancel Request message for this purpose.",
    "structure": [
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Hdr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message header

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
              "id": "8",
              "name": "BeginString",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be second field in message)",
              "id": "9",
              "name": "BodyLength",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be third field in message)",
              "id": "35",
              "name": "MsgType",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "49",
              "name": "SenderCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "56",
              "name": "TargetCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "34",
              "name": "MsgSeqNum",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "52",
              "name": "SendingTime",
              "presence": "required",
            },
          ],
          "id": "1024",
          "name": "StandardHeader",
          "type": "component",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "id": "1024",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "ClOrdID",
          "added": "FIX.2.7",
          "baseCategory": "SingleGeneralOrderHandling",
          "baseCategoryAbbrName": "ID",
          "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
          "id": "11",
          "name": "ClOrdID",
          "type": "String",
          "updated": "FIX.Latest",
          "updatedEP": "282",
        },
        "id": "11",
        "presence": "required",
        "updated": "FIX.Latest",
        "updatedEP": "282",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "OrdTyp",
          "added": "FIX.2.7",
          "baseCategory": "SingleGeneralOrderHandling",
          "baseCategoryAbbrName": "Typ",
          "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
          "id": "40",
          "name": "OrdType",
          "type": "OrdTypeCodeSet",
        },
        "id": "40",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Side",
          "added": "FIX.2.7",
          "description": "Side of order (see Volume : "Glossary" for value definitions)",
          "id": "54",
          "name": "Side",
          "type": "SideCodeSet",
        },
        "id": "54",
        "presence": "required",
      },
      {
        "added": "FIX.4.2",
        "data": {
          "abbrName": "TxnTm",
          "added": "FIX.2.7",
          "description": "Timestamp when the business transaction represented by the message occurred.",
          "id": "60",
          "name": "TransactTime",
          "type": "UTCTimestamp",
          "updated": "FIX.5.0SP1",
          "updatedEP": "94",
        },
        "id": "60",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Trlr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message trailer

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, always last field in message)",
              "id": "10",
              "name": "CheckSum",
              "presence": "required",
            },
          ],
          "id": "1025",
          "name": "StandardTrailer",
          "type": "component",
        },
        "id": "1025",
        "presence": "required",
      },
      {
        "added": "FIX.4.3",
        "data": {
          "abbrName": "Instrmt",
          "added": "FIX.4.3",
          "category": "Common",
          "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
          "id": "1003",
          "name": "Instrument",
          "type": "component",
        },
        "id": "1003",
        "presence": "required",
      },
      {
        "added": "FIX.4.3",
        "data": {
          "abbrName": "OrdQty",
          "added": "FIX.4.3",
          "category": "Common",
          "description": "The OrderQtyData component block contains the fields commonly used for indicating the amount or quantity of an order. Note that when this component block is marked as "required" in a message either one of these three fields must be used to identify the amount: OrderQty, CashOrderQty or OrderPercent (in the case of CIV).

",
          "id": "1011",
          "name": "OrderQtyData",
          "type": "component",
        },
        "id": "1011",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "221",
      },
    ],
  },
]
`;

exports[`FIXParser #getBriefDescription should generate a brief description Closing Offset (New Order Single) 1`] = `
[
  Message {
    "bodyLengthExpected": 157,
    "bodyLengthValid": false,
    "bodyLengthValue": 156,
    "checksumExpected": "098",
    "checksumValid": false,
    "checksumValue": "050",
    "data": [
      Field {
        "category": null,
        "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
        "enumeration": EnumType {
          "added": "FIX.Latest",
          "addedEP": "270",
          "codeSet": "BeginStringCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Session profile FIX.4.2",
          "group": undefined,
          "id": "8001",
          "name": "FIX42",
          "sort": 1,
          "tag": 8,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "FIX.4.2",
        },
        "name": "BeginString",
        "section": null,
        "tag": 8,
        "type": null,
        "value": "FIX.4.2",
      },
      Field {
        "category": null,
        "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
        "enumeration": null,
        "name": "BodyLength",
        "section": null,
        "tag": 9,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the length in bytes. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:nonNegativeInteger",
            "builtin": "false",
            "description": "int field representing the length in bytes. Value must be positive.",
            "standard": "XML",
          },
          "name": "Length",
        },
        "value": 156,
      },
      Field {
        "category": null,
        "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
        "enumeration": EnumType {
          "added": undefined,
          "addedEP": undefined,
          "codeSet": "MsgTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "NewOrderSingle

The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
          "group": undefined,
          "id": "35014",
          "name": "NewOrderSingle",
          "sort": 14,
          "tag": 35,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "D",
        },
        "name": "MsgType",
        "section": null,
        "tag": 35,
        "type": null,
        "value": "D",
      },
      Field {
        "category": null,
        "description": "Integer message sequence number.",
        "enumeration": null,
        "name": "MsgSeqNum",
        "section": null,
        "tag": 34,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing a message sequence number. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:positiveInteger",
            "builtin": "false",
            "description": "int field representing a message sequence number. Value must be positive.",
            "standard": "XML",
          },
          "name": "SeqNum",
        },
        "value": 124,
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm sending message.",
        "enumeration": null,
        "name": "SenderCompID",
        "section": null,
        "tag": 49,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "ABC_DEFG04",
      },
      Field {
        "category": null,
        "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
        "enumeration": null,
        "name": "SendingTime",
        "section": null,
        "tag": 52,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20100208-18:51:42",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify receiving firm.",
        "enumeration": null,
        "name": "TargetCompID",
        "section": null,
        "tag": 56,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "CCG",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm originating message if the message was delivered by a third party i.e. the third party firm identifier would be delivered in the SenderCompID field and the firm originating the message in this field.",
        "enumeration": null,
        "name": "OnBehalfOfCompID",
        "section": null,
        "tag": 115,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "XYZ",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
        "enumeration": null,
        "name": "ClOrdID",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 11,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "NF 0015/02082010",
      },
      Field {
        "category": null,
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "SideCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Sell

For Securities Financing indicates the delivery of securities or collateral.",
          "group": undefined,
          "id": "54002",
          "name": "Sell",
          "sort": 2,
          "tag": 54,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "254",
          "value": "2",
        },
        "name": "Side",
        "section": null,
        "tag": 54,
        "type": null,
        "value": "2",
      },
      Field {
        "category": null,
        "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "OrderQty",
        "section": null,
        "tag": 38,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 1000,
      },
      Field {
        "category": null,
        "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
        "enumeration": null,
        "name": "Symbol",
        "section": null,
        "tag": 55,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "RRC",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "OrdTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Limit",
          "group": undefined,
          "id": "40002",
          "name": "Limit",
          "sort": 2,
          "tag": 40,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "2",
        },
        "name": "OrdType",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 40,
        "type": null,
        "value": "2",
      },
      Field {
        "category": null,
        "description": "Price per unit of quantity (e.g. per share)",
        "enumeration": null,
        "name": "Price",
        "section": null,
        "tag": 44,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
            "standard": "XML",
          },
          "name": "Price",
        },
        "value": 55.36,
      },
      Field {
        "category": null,
        "description": "Specifies how long the order remains in effect. Absence of this field is interpreted as DAY. NOTE not applicable to CIV Orders.",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "TimeInForceCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Day (or session)

A buy or sell order that, if not executed expires at the end of the trading day on which it was entered.",
          "group": undefined,
          "id": "59001",
          "name": "Day",
          "sort": 1,
          "tag": 59,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "253",
          "value": "0",
        },
        "name": "TimeInForce",
        "section": null,
        "tag": 59,
        "type": null,
        "value": "0",
      },
      Field {
        "category": null,
        "description": "Account mnemonic as agreed between buy and sell sides, e.g. broker and institution or investor/intermediary and fund manager.",
        "enumeration": null,
        "name": "Account",
        "section": null,
        "tag": 1,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "ABC123ZYX",
      },
      Field {
        "category": null,
        "description": "Instructions for order handling on Broker trading floor",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "HandlInstCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Automated execution order, private, no Broker intervention",
          "group": undefined,
          "id": "21001",
          "name": "AutomatedExecutionNoIntervention",
          "sort": 1,
          "tag": 21,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "1",
        },
        "name": "HandlInst",
        "section": null,
        "tag": 21,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Market used to help identify a security.

Valid values:

See "Appendix 6-C"",
        "enumeration": null,
        "name": "SecurityExchange",
        "section": null,
        "tag": 207,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "false",
            "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
            "pattern": ".*",
            "standard": "XML",
          },
          "name": "Exchange",
        },
        "value": "N",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 47,
        "type": null,
        "value": "A",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 9487,
        "type": null,
        "value": "CO",
      },
      Field {
        "category": null,
        "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
        "enumeration": null,
        "name": "CheckSum",
        "section": null,
        "tag": 10,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "050",
      },
    ],
    "description": "NewOrderSingle",
    "fixVersion": "FIX.4.2",
    "messageSequence": 124,
    "messageString": "8=FIX.4.29=15635=D34=12449=ABC_DEFG0452=20100208-18:51:4256=CCG115=XYZ11=NF 0015/0208201054=238=100055=RRC40=244=55.3659=01=ABC123ZYX21=1207=N47=A9487=CO10=050",
    "messageType": "D",
    "messageTypeDescription": "The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
    "structure": [
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Hdr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message header

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
              "id": "8",
              "name": "BeginString",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be second field in message)",
              "id": "9",
              "name": "BodyLength",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be third field in message)",
              "id": "35",
              "name": "MsgType",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "49",
              "name": "SenderCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "56",
              "name": "TargetCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "34",
              "name": "MsgSeqNum",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "52",
              "name": "SendingTime",
              "presence": "required",
            },
          ],
          "id": "1024",
          "name": "StandardHeader",
          "type": "component",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "id": "1024",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "ClOrdID",
          "added": "FIX.2.7",
          "baseCategory": "SingleGeneralOrderHandling",
          "baseCategoryAbbrName": "ID",
          "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
          "id": "11",
          "name": "ClOrdID",
          "type": "String",
          "updated": "FIX.Latest",
          "updatedEP": "282",
        },
        "id": "11",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "OrdTyp",
          "added": "FIX.2.7",
          "baseCategory": "SingleGeneralOrderHandling",
          "baseCategoryAbbrName": "Typ",
          "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
          "id": "40",
          "name": "OrdType",
          "type": "OrdTypeCodeSet",
        },
        "id": "40",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Side",
          "added": "FIX.2.7",
          "description": "Side of order (see Volume : "Glossary" for value definitions)",
          "id": "54",
          "name": "Side",
          "type": "SideCodeSet",
        },
        "id": "54",
        "presence": "required",
      },
      {
        "added": "FIX.4.2",
        "data": {
          "abbrName": "TxnTm",
          "added": "FIX.2.7",
          "description": "Timestamp when the business transaction represented by the message occurred.",
          "id": "60",
          "name": "TransactTime",
          "type": "UTCTimestamp",
          "updated": "FIX.5.0SP1",
          "updatedEP": "94",
        },
        "id": "60",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Trlr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message trailer

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, always last field in message)",
              "id": "10",
              "name": "CheckSum",
              "presence": "required",
            },
          ],
          "id": "1025",
          "name": "StandardTrailer",
          "type": "component",
        },
        "id": "1025",
        "presence": "required",
      },
      {
        "added": "FIX.4.3",
        "data": {
          "abbrName": "Instrmt",
          "added": "FIX.4.3",
          "category": "Common",
          "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
          "id": "1003",
          "name": "Instrument",
          "type": "component",
        },
        "id": "1003",
        "presence": "required",
      },
      {
        "added": "FIX.4.3",
        "data": {
          "abbrName": "OrdQty",
          "added": "FIX.4.3",
          "category": "Common",
          "description": "The OrderQtyData component block contains the fields commonly used for indicating the amount or quantity of an order. Note that when this component block is marked as "required" in a message either one of these three fields must be used to identify the amount: OrderQty, CashOrderQty or OrderPercent (in the case of CIV).

",
          "id": "1011",
          "name": "OrderQtyData",
          "type": "component",
        },
        "id": "1011",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "221",
      },
    ],
  },
]
`;

exports[`FIXParser #getBriefDescription should generate a brief description Dot Reserve Order Type (Max Floor) 1`] = `
[
  Message {
    "bodyLengthExpected": 154,
    "bodyLengthValid": true,
    "bodyLengthValue": 154,
    "checksumExpected": "121",
    "checksumValid": true,
    "checksumValue": "121",
    "data": [
      Field {
        "category": null,
        "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
        "enumeration": EnumType {
          "added": "FIX.Latest",
          "addedEP": "270",
          "codeSet": "BeginStringCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Session profile FIX.4.2",
          "group": undefined,
          "id": "8001",
          "name": "FIX42",
          "sort": 1,
          "tag": 8,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "FIX.4.2",
        },
        "name": "BeginString",
        "section": null,
        "tag": 8,
        "type": null,
        "value": "FIX.4.2",
      },
      Field {
        "category": null,
        "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
        "enumeration": null,
        "name": "BodyLength",
        "section": null,
        "tag": 9,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the length in bytes. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:nonNegativeInteger",
            "builtin": "false",
            "description": "int field representing the length in bytes. Value must be positive.",
            "standard": "XML",
          },
          "name": "Length",
        },
        "value": 154,
      },
      Field {
        "category": null,
        "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
        "enumeration": EnumType {
          "added": undefined,
          "addedEP": undefined,
          "codeSet": "MsgTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "NewOrderSingle

The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
          "group": undefined,
          "id": "35014",
          "name": "NewOrderSingle",
          "sort": 14,
          "tag": 35,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "D",
        },
        "name": "MsgType",
        "section": null,
        "tag": 35,
        "type": null,
        "value": "D",
      },
      Field {
        "category": null,
        "description": "Integer message sequence number.",
        "enumeration": null,
        "name": "MsgSeqNum",
        "section": null,
        "tag": 34,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing a message sequence number. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:positiveInteger",
            "builtin": "false",
            "description": "int field representing a message sequence number. Value must be positive.",
            "standard": "XML",
          },
          "name": "SeqNum",
        },
        "value": 578,
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm sending message.",
        "enumeration": null,
        "name": "SenderCompID",
        "section": null,
        "tag": 49,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "LEH_LZJ02",
      },
      Field {
        "category": null,
        "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
        "enumeration": null,
        "name": "SendingTime",
        "section": null,
        "tag": 52,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20100302-22:50:34",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify receiving firm.",
        "enumeration": null,
        "name": "TargetCompID",
        "section": null,
        "tag": 56,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "CCG",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm originating message if the message was delivered by a third party i.e. the third party firm identifier would be delivered in the SenderCompID field and the firm originating the message in this field.",
        "enumeration": null,
        "name": "OnBehalfOfCompID",
        "section": null,
        "tag": 115,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "LZJ",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
        "enumeration": null,
        "name": "ClOrdID",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 11,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "NF 0040/03022010",
      },
      Field {
        "category": null,
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "SideCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Buy

For Securities Financing indicates the receipt of securities or collateral.",
          "group": undefined,
          "id": "54001",
          "name": "Buy",
          "sort": 1,
          "tag": 54,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "254",
          "value": "1",
        },
        "name": "Side",
        "section": null,
        "tag": 54,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "OrderQty",
        "section": null,
        "tag": 38,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 1000,
      },
      Field {
        "category": null,
        "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
        "enumeration": null,
        "name": "Symbol",
        "section": null,
        "tag": 55,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "IOC",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "OrdTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Limit",
          "group": undefined,
          "id": "40002",
          "name": "Limit",
          "sort": 2,
          "tag": 40,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "2",
        },
        "name": "OrdType",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 40,
        "type": null,
        "value": "2",
      },
      Field {
        "category": null,
        "description": "Price per unit of quantity (e.g. per share)",
        "enumeration": null,
        "name": "Price",
        "section": null,
        "tag": 44,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
            "standard": "XML",
          },
          "name": "Price",
        },
        "value": 49.38,
      },
      Field {
        "category": null,
        "description": "Specifies how long the order remains in effect. Absence of this field is interpreted as DAY. NOTE not applicable to CIV Orders.",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "TimeInForceCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Day (or session)

A buy or sell order that, if not executed expires at the end of the trading day on which it was entered.",
          "group": undefined,
          "id": "59001",
          "name": "Day",
          "sort": 1,
          "tag": 59,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "253",
          "value": "0",
        },
        "name": "TimeInForce",
        "section": null,
        "tag": 59,
        "type": null,
        "value": "0",
      },
      Field {
        "category": null,
        "description": "Account mnemonic as agreed between buy and sell sides, e.g. broker and institution or investor/intermediary and fund manager.",
        "enumeration": null,
        "name": "Account",
        "section": null,
        "tag": 1,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "ABC123ZYX",
      },
      Field {
        "category": null,
        "description": "Instructions for order handling on Broker trading floor",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "HandlInstCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Automated execution order, private, no Broker intervention",
          "group": undefined,
          "id": "21001",
          "name": "AutomatedExecutionNoIntervention",
          "sort": 1,
          "tag": 21,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "1",
        },
        "name": "HandlInst",
        "section": null,
        "tag": 21,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Market used to help identify a security.

Valid values:

See "Appendix 6-C"",
        "enumeration": null,
        "name": "SecurityExchange",
        "section": null,
        "tag": 207,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "false",
            "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
            "pattern": ".*",
            "standard": "XML",
          },
          "name": "Exchange",
        },
        "value": "N",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 47,
        "type": null,
        "value": "A",
      },
      Field {
        "category": null,
        "description": "The quantity to be displayed . Required for reserve orders. On orders specifies the qty to be displayed, on execution reports the currently displayed quantity.",
        "enumeration": null,
        "name": "MaxFloor",
        "section": null,
        "tag": 111,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 0,
      },
      Field {
        "category": null,
        "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
        "enumeration": null,
        "name": "CheckSum",
        "section": null,
        "tag": 10,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "121",
      },
    ],
    "description": "NewOrderSingle",
    "fixVersion": "FIX.4.2",
    "messageSequence": 578,
    "messageString": "8=FIX.4.29=15435=D34=57849=LEH_LZJ0252=20100302-22:50:3456=CCG115=LZJ11=NF 0040/0302201054=138=100055=IOC40=244=49.3859=01=ABC123ZYX21=1207=N47=A111=010=121",
    "messageType": "D",
    "messageTypeDescription": "The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
    "structure": [
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Hdr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message header

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
              "id": "8",
              "name": "BeginString",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be second field in message)",
              "id": "9",
              "name": "BodyLength",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be third field in message)",
              "id": "35",
              "name": "MsgType",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "49",
              "name": "SenderCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "56",
              "name": "TargetCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "34",
              "name": "MsgSeqNum",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "52",
              "name": "SendingTime",
              "presence": "required",
            },
          ],
          "id": "1024",
          "name": "StandardHeader",
          "type": "component",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "id": "1024",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "ClOrdID",
          "added": "FIX.2.7",
          "baseCategory": "SingleGeneralOrderHandling",
          "baseCategoryAbbrName": "ID",
          "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
          "id": "11",
          "name": "ClOrdID",
          "type": "String",
          "updated": "FIX.Latest",
          "updatedEP": "282",
        },
        "id": "11",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "OrdTyp",
          "added": "FIX.2.7",
          "baseCategory": "SingleGeneralOrderHandling",
          "baseCategoryAbbrName": "Typ",
          "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
          "id": "40",
          "name": "OrdType",
          "type": "OrdTypeCodeSet",
        },
        "id": "40",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Side",
          "added": "FIX.2.7",
          "description": "Side of order (see Volume : "Glossary" for value definitions)",
          "id": "54",
          "name": "Side",
          "type": "SideCodeSet",
        },
        "id": "54",
        "presence": "required",
      },
      {
        "added": "FIX.4.2",
        "data": {
          "abbrName": "TxnTm",
          "added": "FIX.2.7",
          "description": "Timestamp when the business transaction represented by the message occurred.",
          "id": "60",
          "name": "TransactTime",
          "type": "UTCTimestamp",
          "updated": "FIX.5.0SP1",
          "updatedEP": "94",
        },
        "id": "60",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Trlr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message trailer

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, always last field in message)",
              "id": "10",
              "name": "CheckSum",
              "presence": "required",
            },
          ],
          "id": "1025",
          "name": "StandardTrailer",
          "type": "component",
        },
        "id": "1025",
        "presence": "required",
      },
      {
        "added": "FIX.4.3",
        "data": {
          "abbrName": "Instrmt",
          "added": "FIX.4.3",
          "category": "Common",
          "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
          "id": "1003",
          "name": "Instrument",
          "type": "component",
        },
        "id": "1003",
        "presence": "required",
      },
      {
        "added": "FIX.4.3",
        "data": {
          "abbrName": "OrdQty",
          "added": "FIX.4.3",
          "category": "Common",
          "description": "The OrderQtyData component block contains the fields commonly used for indicating the amount or quantity of an order. Note that when this component block is marked as "required" in a message either one of these three fields must be used to identify the amount: OrderQty, CashOrderQty or OrderPercent (in the case of CIV).

",
          "id": "1011",
          "name": "OrderQtyData",
          "type": "component",
        },
        "id": "1011",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "221",
      },
    ],
  },
]
`;

exports[`FIXParser #getBriefDescription should generate a brief description Execution Filling the Order 1`] = `
[
  Message {
    "bodyLengthExpected": 381,
    "bodyLengthValid": false,
    "bodyLengthValue": 379,
    "checksumExpected": "017",
    "checksumValid": false,
    "checksumValue": "186",
    "data": [
      Field {
        "category": null,
        "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
        "enumeration": EnumType {
          "added": "FIX.Latest",
          "addedEP": "270",
          "codeSet": "BeginStringCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Session profile FIX.4.2",
          "group": undefined,
          "id": "8001",
          "name": "FIX42",
          "sort": 1,
          "tag": 8,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "FIX.4.2",
        },
        "name": "BeginString",
        "section": null,
        "tag": 8,
        "type": null,
        "value": "FIX.4.2",
      },
      Field {
        "category": null,
        "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
        "enumeration": null,
        "name": "BodyLength",
        "section": null,
        "tag": 9,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the length in bytes. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:nonNegativeInteger",
            "builtin": "false",
            "description": "int field representing the length in bytes. Value must be positive.",
            "standard": "XML",
          },
          "name": "Length",
        },
        "value": 379,
      },
      Field {
        "category": null,
        "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
        "enumeration": EnumType {
          "added": undefined,
          "addedEP": undefined,
          "codeSet": "MsgTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "ExecutionReport

The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
          "group": undefined,
          "id": "35009",
          "name": "ExecutionReport",
          "sort": 9,
          "tag": 35,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "8",
        },
        "name": "MsgType",
        "section": null,
        "tag": 35,
        "type": null,
        "value": "8",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify the firm targeted to receive the message if the message is delivered by a third party i.e. the third party firm identifier would be delivered in the TargetCompID (56) field and the ultimate receiver firm ID in this field.",
        "enumeration": null,
        "name": "DeliverToCompID",
        "section": null,
        "tag": 128,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "XYZ",
      },
      Field {
        "category": null,
        "description": "Integer message sequence number.",
        "enumeration": null,
        "name": "MsgSeqNum",
        "section": null,
        "tag": 34,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing a message sequence number. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:positiveInteger",
            "builtin": "false",
            "description": "int field representing a message sequence number. Value must be positive.",
            "standard": "XML",
          },
          "name": "SeqNum",
        },
        "value": 28,
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm sending message.",
        "enumeration": null,
        "name": "SenderCompID",
        "section": null,
        "tag": 49,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "CCG",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify receiving firm.",
        "enumeration": null,
        "name": "TargetCompID",
        "section": null,
        "tag": 56,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "ABC_DEFG01",
      },
      Field {
        "category": null,
        "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
        "enumeration": null,
        "name": "SendingTime",
        "section": null,
        "tag": 52,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20090325- 14:28:10",
      },
      Field {
        "category": null,
        "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
        "enumeration": null,
        "name": "Symbol",
        "section": null,
        "tag": 55,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "CVS",
      },
      Field {
        "category": null,
        "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
        "enumeration": null,
        "name": "OrderID",
        "section": null,
        "tag": 37,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "NF 0568/03252009",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
        "enumeration": null,
        "name": "ClOrdID",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 11,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "NF 0568/03252009",
      },
      Field {
        "category": null,
        "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
        "enumeration": null,
        "name": "ExecID",
        "section": null,
        "tag": 17,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "NF 0568/03252009 002002002",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 20,
        "type": null,
        "value": "0",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "OrdStatusCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Filled",
          "group": undefined,
          "id": "39003",
          "name": "Filled",
          "sort": 3,
          "tag": 39,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "2",
        },
        "name": "OrdStatus",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 39,
        "type": null,
        "value": "2",
      },
      Field {
        "category": null,
        "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
        "enumeration": null,
        "name": "ExecType",
        "section": null,
        "tag": 150,
        "type": null,
        "value": "2",
      },
      Field {
        "category": null,
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "SideCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Sell

For Securities Financing indicates the delivery of securities or collateral.",
          "group": undefined,
          "id": "54002",
          "name": "Sell",
          "sort": 2,
          "tag": 54,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "254",
          "value": "2",
        },
        "name": "Side",
        "section": null,
        "tag": 54,
        "type": null,
        "value": "2",
      },
      Field {
        "category": null,
        "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "OrderQty",
        "section": null,
        "tag": 38,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 500,
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "OrdTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Market",
          "group": undefined,
          "id": "40001",
          "name": "Market",
          "sort": 1,
          "tag": 40,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "1",
        },
        "name": "OrdType",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 40,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Specifies how long the order remains in effect. Absence of this field is interpreted as DAY. NOTE not applicable to CIV Orders.",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "TimeInForceCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Day (or session)

A buy or sell order that, if not executed expires at the end of the trading day on which it was entered.",
          "group": undefined,
          "id": "59001",
          "name": "Day",
          "sort": 1,
          "tag": 59,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "253",
          "value": "0",
        },
        "name": "TimeInForce",
        "section": null,
        "tag": 59,
        "type": null,
        "value": "0",
      },
      Field {
        "category": null,
        "description": "Price of this (last) fill.",
        "enumeration": null,
        "name": "LastPx",
        "section": null,
        "tag": 31,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
            "standard": "XML",
          },
          "name": "Price",
        },
        "value": 25.28,
      },
      Field {
        "category": null,
        "description": "Quantity (e.g. shares) bought/sold on this (last) fill.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "LastQty",
        "section": null,
        "tag": 32,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 400,
      },
      Field {
        "category": null,
        "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "CumQty",
        "section": null,
        "tag": 14,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 0,
      },
      Field {
        "category": null,
        "description": "Calculated average price of all fills on this order.

For Fixed Income trades AvgPx is always expressed as percent-of-par, regardless of the PriceType (423) of LastPx (31). I.e., AvgPx will contain an average of percent-of-par values (see LastParPx (669)) for issues traded in Yield, Spread or Discount.",
        "enumeration": null,
        "name": "AvgPx",
        "section": null,
        "tag": 6,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
            "standard": "XML",
          },
          "name": "Price",
        },
        "value": 0,
      },
      Field {
        "category": null,
        "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "LeavesQty",
        "section": null,
        "tag": 151,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 0,
      },
      Field {
        "category": null,
        "description": "Timestamp when the business transaction represented by the message occurred.",
        "enumeration": null,
        "name": "TransactTime",
        "section": null,
        "tag": 60,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20090325-14:28:12",
      },
      Field {
        "category": null,
        "description": "Free format text string

(Note: this field does not have a specified maximum length)",
        "enumeration": null,
        "name": "Text",
        "section": null,
        "tag": 58,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "Fill",
      },
      Field {
        "category": null,
        "description": "Market of execution for last fill, or an indication of the market where an order was routed

Valid values:

See "Appendix 6-C"

In the context of ESMA RTS 1 Annex I, Table 3, Field 6 "Venue of Execution" it is required that the "venue where the transaction was executed" be identified using ISO 10383 (MIC). Additionally, ESMA requires the use of "MIC code 'XOFF' for financial instruments admitted to trading or traded on a trading venue, where the transaction on that financial instrument is not executed on a trading venue, systematic internaliser or organized trading platform outside of the Union. Use 'SINT' for financial instruments admitted to trading or traded on a trading venue, where the transaction is executed on a systematic internaliser."",
        "enumeration": null,
        "name": "LastMkt",
        "section": null,
        "tag": 30,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "false",
            "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
            "pattern": ".*",
            "standard": "XML",
          },
          "name": "Exchange",
        },
        "value": "N",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 76,
        "type": null,
        "value": "0034",
      },
      Field {
        "category": null,
        "description": "Market used to help identify a security.

Valid values:

See "Appendix 6-C"",
        "enumeration": null,
        "name": "SecurityExchange",
        "section": null,
        "tag": 207,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "false",
            "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
            "pattern": ".*",
            "standard": "XML",
          },
          "name": "Exchange",
        },
        "value": "N",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 47,
        "type": null,
        "value": "A",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 9430,
        "type": null,
        "value": "NX",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 9483,
        "type": null,
        "value": "000007",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 9578,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "The number of ContraBroker (375) entries.",
        "enumeration": null,
        "name": "NoContraBrokers",
        "section": null,
        "tag": 382,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the number of entries in a repeating group. Value must be positive.",
          "name": "NumInGroup",
        },
        "value": 1,
      },
      Field {
        "category": null,
        "description": "Identifies contra broker. Standard NASD market-maker mnemonic is preferred.",
        "enumeration": null,
        "name": "ContraBroker",
        "section": null,
        "tag": 375,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "TOD",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Identifies the trader (e.g. "badge number") of the ContraBroker.",
        "enumeration": null,
        "name": "ContraTrader",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 337,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "0000",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Quantity traded with the ContraBroker (375).",
        "enumeration": null,
        "name": "ContraTradeQty",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 437,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 400,
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Identifes the time of the trade with the ContraBroker (375). (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
        "enumeration": null,
        "name": "ContraTradeTime",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 438,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "1134",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 9579,
        "type": null,
        "value": "0000200002",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 9433,
        "type": null,
        "value": "0034",
      },
      Field {
        "category": null,
        "description": "Broker capacity in order execution",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "LastCapacityCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Agent",
          "group": undefined,
          "id": "29001",
          "name": "Agent",
          "sort": 1,
          "tag": 29,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "1",
        },
        "name": "LastCapacity",
        "section": null,
        "tag": 29,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Indicates order settlement period. If present, SettlDate (64) overrides this field. If both SettlType (63) and SettDate (64) are omitted, the default for SettlType (63) is 0 (Regular)

Regular is defined as the default settlement period for the particular security on the exchange of execution.

In Fixed Income the contents of this field may influence the instrument definition if the SecurityID (48) is ambiguous. In the US an active Treasury offering may be re-opened, and for a time one CUSIP will apply to both the current and "when-issued" securities. Supplying a value of "7" clarifies the instrument description; any other value or the absence of this field should cause the respondent to default to the active issue.

Additionally the following patterns may be uses as well as enum values

Dx = FX tenor expression for "days", e.g. "D5", where "x" is any integer > 0

Mx = FX tenor expression for "months", e.g. "M3", where "x" is any integer > 0

Wx = FX tenor expression for "weeks", e.g. "W13", where "x" is any integer > 0

Yx = FX tenor expression for "years", e.g. "Y1", where "x" is any integer > 0

Noted that for FX the tenors expressed using Dx, Mx, Wx, and Yx values do not denote business days, but calendar days.",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "SettlTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Regular / FX Spot settlement (T+1 or T+2 depending on currency)",
          "group": undefined,
          "id": "63001",
          "name": "Regular",
          "sort": 1,
          "tag": 63,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "0",
        },
        "name": "SettlType",
        "section": null,
        "tag": 63,
        "type": null,
        "value": "0",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 9440,
        "type": null,
        "value": "002002002",
      },
      Field {
        "category": null,
        "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
        "enumeration": null,
        "name": "CheckSum",
        "section": null,
        "tag": 10,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "186",
      },
    ],
    "description": "ExecutionReport",
    "fixVersion": "FIX.4.2",
    "messageSequence": 28,
    "messageString": "8=FIX.4.29=37935=8128=XYZ34=2849=CCG56=ABC_DEFG0152=20090325- 14:28:1055=CVS37=NF 0568/0325200911=NF 0568/0325200917=NF 0568/03252009 00200200220=039=2150=254=238=50040=159=031=25.280032=40014=06=0151=060=20090325-14:28:1258=Fill30=N76=0034207=N47=A9430=NX9483=0000079578=1382=1375=TOD337=0000437=400438=11349579=00002000029433=003429=163=09440=00200200210=186",
    "messageType": "8",
    "messageTypeDescription": "The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
    "structure": [
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Hdr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message header

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
              "id": "8",
              "name": "BeginString",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be second field in message)",
              "id": "9",
              "name": "BodyLength",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be third field in message)",
              "id": "35",
              "name": "MsgType",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "49",
              "name": "SenderCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "56",
              "name": "TargetCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "34",
              "name": "MsgSeqNum",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "52",
              "name": "SendingTime",
              "presence": "required",
            },
          ],
          "id": "1024",
          "name": "StandardHeader",
          "type": "component",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "id": "1024",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "CumQty",
          "added": "FIX.2.7",
          "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
          "id": "14",
          "name": "CumQty",
          "type": "Qty",
        },
        "id": "14",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "ExecID",
          "added": "FIX.2.7",
          "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
          "id": "17",
          "name": "ExecID",
          "type": "String",
          "updated": "FIX.5.0SP1",
          "updatedEP": "95",
        },
        "id": "17",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "OrdID",
          "added": "FIX.2.7",
          "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
          "id": "37",
          "name": "OrderID",
          "type": "String",
        },
        "id": "37",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "OrdStat",
          "added": "FIX.2.7",
          "baseCategory": "SingleGeneralOrderHandling",
          "baseCategoryAbbrName": "Stat",
          "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
          "id": "39",
          "name": "OrdStatus",
          "type": "OrdStatusCodeSet",
        },
        "id": "39",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Side",
          "added": "FIX.2.7",
          "description": "Side of order (see Volume : "Glossary" for value definitions)",
          "id": "54",
          "name": "Side",
          "type": "SideCodeSet",
        },
        "id": "54",
        "presence": "required",
      },
      {
        "added": "FIX.4.1",
        "data": {
          "abbrName": "ExecTyp",
          "added": "FIX.4.1",
          "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
          "id": "150",
          "name": "ExecType",
          "type": "ExecTypeCodeSet",
          "updated": "FIX.5.0SP2",
          "updatedEP": "131",
        },
        "id": "150",
        "presence": "required",
      },
      {
        "added": "FIX.4.1",
        "data": {
          "abbrName": "LeavesQty",
          "added": "FIX.4.1",
          "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
          "id": "151",
          "name": "LeavesQty",
          "type": "Qty",
        },
        "id": "151",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Trlr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message trailer

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, always last field in message)",
              "id": "10",
              "name": "CheckSum",
              "presence": "required",
            },
          ],
          "id": "1025",
          "name": "StandardTrailer",
          "type": "component",
        },
        "id": "1025",
        "presence": "required",
      },
      {
        "added": "FIX.4.3",
        "data": {
          "abbrName": "Instrmt",
          "added": "FIX.4.3",
          "category": "Common",
          "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
          "id": "1003",
          "name": "Instrument",
          "type": "component",
        },
        "id": "1003",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
    ],
  },
]
`;

exports[`FIXParser #getBriefDescription should generate a brief description MatchPoint (Execution Report) 1`] = `
[
  Message {
    "bodyLengthExpected": 269,
    "bodyLengthValid": false,
    "bodyLengthValue": 258,
    "checksumExpected": "050",
    "checksumValid": false,
    "checksumValue": "088",
    "data": [
      Field {
        "category": null,
        "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
        "enumeration": EnumType {
          "added": "FIX.Latest",
          "addedEP": "270",
          "codeSet": "BeginStringCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Session profile FIX.4.2",
          "group": undefined,
          "id": "8001",
          "name": "FIX42",
          "sort": 1,
          "tag": 8,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "FIX.4.2",
        },
        "name": "BeginString",
        "section": null,
        "tag": 8,
        "type": null,
        "value": "FIX.4.2",
      },
      Field {
        "category": null,
        "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
        "enumeration": null,
        "name": "BodyLength",
        "section": null,
        "tag": 9,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the length in bytes. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:nonNegativeInteger",
            "builtin": "false",
            "description": "int field representing the length in bytes. Value must be positive.",
            "standard": "XML",
          },
          "name": "Length",
        },
        "value": 258,
      },
      Field {
        "category": null,
        "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
        "enumeration": EnumType {
          "added": undefined,
          "addedEP": undefined,
          "codeSet": "MsgTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "ExecutionReport

The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
          "group": undefined,
          "id": "35009",
          "name": "ExecutionReport",
          "sort": 9,
          "tag": 35,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "8",
        },
        "name": "MsgType",
        "section": null,
        "tag": 35,
        "type": null,
        "value": "8",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify specific message originator (desk, trader, etc.)",
        "enumeration": null,
        "name": "SenderSubID",
        "section": null,
        "tag": 50,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "ARCA",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify the firm targeted to receive the message if the message is delivered by a third party i.e. the third party firm identifier would be delivered in the TargetCompID (56) field and the ultimate receiver firm ID in this field.",
        "enumeration": null,
        "name": "DeliverToCompID",
        "section": null,
        "tag": 128,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "XYZ",
      },
      Field {
        "category": null,
        "description": "Integer message sequence number.",
        "enumeration": null,
        "name": "MsgSeqNum",
        "section": null,
        "tag": 34,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing a message sequence number. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:positiveInteger",
            "builtin": "false",
            "description": "int field representing a message sequence number. Value must be positive.",
            "standard": "XML",
          },
          "name": "SeqNum",
        },
        "value": 87,
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm sending message.",
        "enumeration": null,
        "name": "SenderCompID",
        "section": null,
        "tag": 49,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "CCG",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify receiving firm.",
        "enumeration": null,
        "name": "TargetCompID",
        "section": null,
        "tag": 56,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "ABC_DEFG04",
      },
      Field {
        "category": null,
        "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
        "enumeration": null,
        "name": "SendingTime",
        "section": null,
        "tag": 52,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20091216-18:00:24",
      },
      Field {
        "category": null,
        "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
        "enumeration": null,
        "name": "Symbol",
        "section": null,
        "tag": 55,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "MMM",
      },
      Field {
        "category": null,
        "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
        "enumeration": null,
        "name": "OrderID",
        "section": null,
        "tag": 37,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "0000002",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
        "enumeration": null,
        "name": "ClOrdID",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 11,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "NF 0921/12162009",
      },
      Field {
        "category": null,
        "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
        "enumeration": null,
        "name": "ExecID",
        "section": null,
        "tag": 17,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "2000005",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 20,
        "type": null,
        "value": "0",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "OrdStatusCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Filled",
          "group": undefined,
          "id": "39003",
          "name": "Filled",
          "sort": 3,
          "tag": 39,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "2",
        },
        "name": "OrdStatus",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 39,
        "type": null,
        "value": "2",
      },
      Field {
        "category": null,
        "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
        "enumeration": null,
        "name": "ExecType",
        "section": null,
        "tag": 150,
        "type": null,
        "value": "2",
      },
      Field {
        "category": null,
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "SideCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Sell

For Securities Financing indicates the delivery of securities or collateral.",
          "group": undefined,
          "id": "54002",
          "name": "Sell",
          "sort": 2,
          "tag": 54,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "254",
          "value": "2",
        },
        "name": "Side",
        "section": null,
        "tag": 54,
        "type": null,
        "value": "2",
      },
      Field {
        "category": null,
        "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "OrderQty",
        "section": null,
        "tag": 38,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 1000,
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "OrdTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Market",
          "group": undefined,
          "id": "40001",
          "name": "Market",
          "sort": 1,
          "tag": 40,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "1",
        },
        "name": "OrdType",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 40,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Specifies how long the order remains in effect. Absence of this field is interpreted as DAY. NOTE not applicable to CIV Orders.",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "TimeInForceCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Day (or session)

A buy or sell order that, if not executed expires at the end of the trading day on which it was entered.",
          "group": undefined,
          "id": "59001",
          "name": "Day",
          "sort": 1,
          "tag": 59,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "253",
          "value": "0",
        },
        "name": "TimeInForce",
        "section": null,
        "tag": 59,
        "type": null,
        "value": "0",
      },
      Field {
        "category": null,
        "description": "Price of this (last) fill.",
        "enumeration": null,
        "name": "LastPx",
        "section": null,
        "tag": 31,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
            "standard": "XML",
          },
          "name": "Price",
        },
        "value": 82.245,
      },
      Field {
        "category": null,
        "description": "Quantity (e.g. shares) bought/sold on this (last) fill.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "LastQty",
        "section": null,
        "tag": 32,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 1000,
      },
      Field {
        "category": null,
        "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "CumQty",
        "section": null,
        "tag": 14,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 1000,
      },
      Field {
        "category": null,
        "description": "Calculated average price of all fills on this order.

For Fixed Income trades AvgPx is always expressed as percent-of-par, regardless of the PriceType (423) of LastPx (31). I.e., AvgPx will contain an average of percent-of-par values (see LastParPx (669)) for issues traded in Yield, Spread or Discount.",
        "enumeration": null,
        "name": "AvgPx",
        "section": null,
        "tag": 6,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
            "standard": "XML",
          },
          "name": "Price",
        },
        "value": 82.245,
      },
      Field {
        "category": null,
        "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "LeavesQty",
        "section": null,
        "tag": 151,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 0,
      },
      Field {
        "category": null,
        "description": "Timestamp when the business transaction represented by the message occurred.",
        "enumeration": null,
        "name": "TransactTime",
        "section": null,
        "tag": 60,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20091216-18:00:25",
      },
      Field {
        "category": null,
        "description": "Free format text string

(Note: this field does not have a specified maximum length)",
        "enumeration": null,
        "name": "Text",
        "section": null,
        "tag": 58,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "Fill",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Permits order originators to tie together groups of orders in which trades resulting from orders are associated for a specific purpose, for example the calculation of average execution price for a customer or to associate lists submitted to a broker as waves of a larger program trade.",
        "enumeration": null,
        "name": "ClOrdLinkID",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 583,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "91XYZ",
      },
      Field {
        "category": null,
        "description": "Market of execution for last fill, or an indication of the market where an order was routed

Valid values:

See "Appendix 6-C"

In the context of ESMA RTS 1 Annex I, Table 3, Field 6 "Venue of Execution" it is required that the "venue where the transaction was executed" be identified using ISO 10383 (MIC). Additionally, ESMA requires the use of "MIC code 'XOFF' for financial instruments admitted to trading or traded on a trading venue, where the transaction on that financial instrument is not executed on a trading venue, systematic internaliser or organized trading platform outside of the Union. Use 'SINT' for financial instruments admitted to trading or traded on a trading venue, where the transaction is executed on a systematic internaliser."",
        "enumeration": null,
        "name": "LastMkt",
        "section": null,
        "tag": 30,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "false",
            "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
            "pattern": ".*",
            "standard": "XML",
          },
          "name": "Exchange",
        },
        "value": "MP",
      },
      Field {
        "category": null,
        "description": "Market used to help identify a security.

Valid values:

See "Appendix 6-C"",
        "enumeration": null,
        "name": "SecurityExchange",
        "section": null,
        "tag": 207,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "false",
            "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
            "pattern": ".*",
            "standard": "XML",
          },
          "name": "Exchange",
        },
        "value": "N",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 9426,
        "type": null,
        "value": "N/MP",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 9570,
        "type": null,
        "value": "N/MP",
      },
      Field {
        "category": null,
        "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
        "enumeration": null,
        "name": "CheckSum",
        "section": null,
        "tag": 10,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "088",
      },
    ],
    "description": "ExecutionReport",
    "fixVersion": "FIX.4.2",
    "messageSequence": 87,
    "messageString": "8=FIX.4.29=25835=850=ARCA128=XYZ34=8749=CCG56=ABC_DEFG0452=20091216-18:00:2455=MMM37=000000211=NF 0921/1216200917=200000520=039=2150=254=238=100040=159=031=82.24532=100014=10006=82.245151=060=20091216-18:00:2558=Fill583=91XYZ30=MP207=N9426=N/MP9570=N/MP10=088",
    "messageType": "8",
    "messageTypeDescription": "The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
    "structure": [
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Hdr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message header

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
              "id": "8",
              "name": "BeginString",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be second field in message)",
              "id": "9",
              "name": "BodyLength",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be third field in message)",
              "id": "35",
              "name": "MsgType",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "49",
              "name": "SenderCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "56",
              "name": "TargetCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "34",
              "name": "MsgSeqNum",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "52",
              "name": "SendingTime",
              "presence": "required",
            },
          ],
          "id": "1024",
          "name": "StandardHeader",
          "type": "component",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "id": "1024",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "CumQty",
          "added": "FIX.2.7",
          "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
          "id": "14",
          "name": "CumQty",
          "type": "Qty",
        },
        "id": "14",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "ExecID",
          "added": "FIX.2.7",
          "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
          "id": "17",
          "name": "ExecID",
          "type": "String",
          "updated": "FIX.5.0SP1",
          "updatedEP": "95",
        },
        "id": "17",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "OrdID",
          "added": "FIX.2.7",
          "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
          "id": "37",
          "name": "OrderID",
          "type": "String",
        },
        "id": "37",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "OrdStat",
          "added": "FIX.2.7",
          "baseCategory": "SingleGeneralOrderHandling",
          "baseCategoryAbbrName": "Stat",
          "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
          "id": "39",
          "name": "OrdStatus",
          "type": "OrdStatusCodeSet",
        },
        "id": "39",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Side",
          "added": "FIX.2.7",
          "description": "Side of order (see Volume : "Glossary" for value definitions)",
          "id": "54",
          "name": "Side",
          "type": "SideCodeSet",
        },
        "id": "54",
        "presence": "required",
      },
      {
        "added": "FIX.4.1",
        "data": {
          "abbrName": "ExecTyp",
          "added": "FIX.4.1",
          "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
          "id": "150",
          "name": "ExecType",
          "type": "ExecTypeCodeSet",
          "updated": "FIX.5.0SP2",
          "updatedEP": "131",
        },
        "id": "150",
        "presence": "required",
      },
      {
        "added": "FIX.4.1",
        "data": {
          "abbrName": "LeavesQty",
          "added": "FIX.4.1",
          "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
          "id": "151",
          "name": "LeavesQty",
          "type": "Qty",
        },
        "id": "151",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Trlr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message trailer

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, always last field in message)",
              "id": "10",
              "name": "CheckSum",
              "presence": "required",
            },
          ],
          "id": "1025",
          "name": "StandardTrailer",
          "type": "component",
        },
        "id": "1025",
        "presence": "required",
      },
      {
        "added": "FIX.4.3",
        "data": {
          "abbrName": "Instrmt",
          "added": "FIX.4.3",
          "category": "Common",
          "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
          "id": "1003",
          "name": "Instrument",
          "type": "component",
        },
        "id": "1003",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
    ],
  },
]
`;

exports[`FIXParser #getBriefDescription should generate a brief description MatchPoint (New Order Single) 1`] = `
[
  Message {
    "bodyLengthExpected": 154,
    "bodyLengthValid": false,
    "bodyLengthValue": 153,
    "checksumExpected": "034",
    "checksumValid": false,
    "checksumValue": "172",
    "data": [
      Field {
        "category": null,
        "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
        "enumeration": EnumType {
          "added": "FIX.Latest",
          "addedEP": "270",
          "codeSet": "BeginStringCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Session profile FIX.4.2",
          "group": undefined,
          "id": "8001",
          "name": "FIX42",
          "sort": 1,
          "tag": 8,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "FIX.4.2",
        },
        "name": "BeginString",
        "section": null,
        "tag": 8,
        "type": null,
        "value": "FIX.4.2",
      },
      Field {
        "category": null,
        "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
        "enumeration": null,
        "name": "BodyLength",
        "section": null,
        "tag": 9,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the length in bytes. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:nonNegativeInteger",
            "builtin": "false",
            "description": "int field representing the length in bytes. Value must be positive.",
            "standard": "XML",
          },
          "name": "Length",
        },
        "value": 153,
      },
      Field {
        "category": null,
        "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
        "enumeration": EnumType {
          "added": undefined,
          "addedEP": undefined,
          "codeSet": "MsgTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "NewOrderSingle

The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
          "group": undefined,
          "id": "35014",
          "name": "NewOrderSingle",
          "sort": 14,
          "tag": 35,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "D",
        },
        "name": "MsgType",
        "section": null,
        "tag": 35,
        "type": null,
        "value": "D",
      },
      Field {
        "category": null,
        "description": "Integer message sequence number.",
        "enumeration": null,
        "name": "MsgSeqNum",
        "section": null,
        "tag": 34,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing a message sequence number. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:positiveInteger",
            "builtin": "false",
            "description": "int field representing a message sequence number. Value must be positive.",
            "standard": "XML",
          },
          "name": "SeqNum",
        },
        "value": 11,
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm sending message.",
        "enumeration": null,
        "name": "SenderCompID",
        "section": null,
        "tag": 49,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "ABC_DEFG04",
      },
      Field {
        "category": null,
        "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
        "enumeration": null,
        "name": "SendingTime",
        "section": null,
        "tag": 52,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20091216-17:23:52",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify receiving firm.",
        "enumeration": null,
        "name": "TargetCompID",
        "section": null,
        "tag": 56,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "CCG",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify specific individual or unit intended to receive message. "ADMIN" reserved for administrative messages not intended for a specific user.",
        "enumeration": null,
        "name": "TargetSubID",
        "section": null,
        "tag": 57,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "ARCA",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm originating message if the message was delivered by a third party i.e. the third party firm identifier would be delivered in the SenderCompID field and the firm originating the message in this field.",
        "enumeration": null,
        "name": "OnBehalfOfCompID",
        "section": null,
        "tag": 115,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "XYZ",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify the firm targeted to receive the message if the message is delivered by a third party i.e. the third party firm identifier would be delivered in the TargetCompID (56) field and the ultimate receiver firm ID in this field.",
        "enumeration": null,
        "name": "DeliverToCompID",
        "section": null,
        "tag": 128,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "MP",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
        "enumeration": null,
        "name": "ClOrdID",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 11,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "NF 0921/12162009",
      },
      Field {
        "category": null,
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "SideCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Sell

For Securities Financing indicates the delivery of securities or collateral.",
          "group": undefined,
          "id": "54002",
          "name": "Sell",
          "sort": 2,
          "tag": 54,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "254",
          "value": "2",
        },
        "name": "Side",
        "section": null,
        "tag": 54,
        "type": null,
        "value": "2",
      },
      Field {
        "category": null,
        "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "OrderQty",
        "section": null,
        "tag": 38,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 1000,
      },
      Field {
        "category": null,
        "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
        "enumeration": null,
        "name": "Symbol",
        "section": null,
        "tag": 55,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "MMM",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "OrdTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Market",
          "group": undefined,
          "id": "40001",
          "name": "Market",
          "sort": 1,
          "tag": 40,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "1",
        },
        "name": "OrdType",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 40,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Specifies how long the order remains in effect. Absence of this field is interpreted as DAY. NOTE not applicable to CIV Orders.",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "TimeInForceCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Day (or session)

A buy or sell order that, if not executed expires at the end of the trading day on which it was entered.",
          "group": undefined,
          "id": "59001",
          "name": "Day",
          "sort": 1,
          "tag": 59,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "253",
          "value": "0",
        },
        "name": "TimeInForce",
        "section": null,
        "tag": 59,
        "type": null,
        "value": "0",
      },
      Field {
        "category": null,
        "description": "Account mnemonic as agreed between buy and sell sides, e.g. broker and institution or investor/intermediary and fund manager.",
        "enumeration": null,
        "name": "Account",
        "section": null,
        "tag": 1,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "ABC123ZYX",
      },
      Field {
        "category": null,
        "description": "Instructions for order handling on Broker trading floor",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "HandlInstCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Automated execution order, private, no Broker intervention",
          "group": undefined,
          "id": "21001",
          "name": "AutomatedExecutionNoIntervention",
          "sort": 1,
          "tag": 21,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "1",
        },
        "name": "HandlInst",
        "section": null,
        "tag": 21,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Market used to help identify a security.

Valid values:

See "Appendix 6-C"",
        "enumeration": null,
        "name": "SecurityExchange",
        "section": null,
        "tag": 207,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "false",
            "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
            "pattern": ".*",
            "standard": "XML",
          },
          "name": "Exchange",
        },
        "value": "N",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 47,
        "type": null,
        "value": "A",
      },
      Field {
        "category": null,
        "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
        "enumeration": null,
        "name": "CheckSum",
        "section": null,
        "tag": 10,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "172",
      },
    ],
    "description": "NewOrderSingle",
    "fixVersion": "FIX.4.2",
    "messageSequence": 11,
    "messageString": "8=FIX.4.29=15335=D34=1149=ABC_DEFG0452=20091216-17:23:5256=CCG57=ARCA115=XYZ128=MP11=NF 0921/1216200954=238=100055=MMM40=159=01=ABC123ZYX21=1207=N47=A10=172",
    "messageType": "D",
    "messageTypeDescription": "The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
    "structure": [
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Hdr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message header

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
              "id": "8",
              "name": "BeginString",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be second field in message)",
              "id": "9",
              "name": "BodyLength",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be third field in message)",
              "id": "35",
              "name": "MsgType",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "49",
              "name": "SenderCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "56",
              "name": "TargetCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "34",
              "name": "MsgSeqNum",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "52",
              "name": "SendingTime",
              "presence": "required",
            },
          ],
          "id": "1024",
          "name": "StandardHeader",
          "type": "component",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "id": "1024",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "ClOrdID",
          "added": "FIX.2.7",
          "baseCategory": "SingleGeneralOrderHandling",
          "baseCategoryAbbrName": "ID",
          "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
          "id": "11",
          "name": "ClOrdID",
          "type": "String",
          "updated": "FIX.Latest",
          "updatedEP": "282",
        },
        "id": "11",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "OrdTyp",
          "added": "FIX.2.7",
          "baseCategory": "SingleGeneralOrderHandling",
          "baseCategoryAbbrName": "Typ",
          "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
          "id": "40",
          "name": "OrdType",
          "type": "OrdTypeCodeSet",
        },
        "id": "40",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Side",
          "added": "FIX.2.7",
          "description": "Side of order (see Volume : "Glossary" for value definitions)",
          "id": "54",
          "name": "Side",
          "type": "SideCodeSet",
        },
        "id": "54",
        "presence": "required",
      },
      {
        "added": "FIX.4.2",
        "data": {
          "abbrName": "TxnTm",
          "added": "FIX.2.7",
          "description": "Timestamp when the business transaction represented by the message occurred.",
          "id": "60",
          "name": "TransactTime",
          "type": "UTCTimestamp",
          "updated": "FIX.5.0SP1",
          "updatedEP": "94",
        },
        "id": "60",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Trlr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message trailer

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, always last field in message)",
              "id": "10",
              "name": "CheckSum",
              "presence": "required",
            },
          ],
          "id": "1025",
          "name": "StandardTrailer",
          "type": "component",
        },
        "id": "1025",
        "presence": "required",
      },
      {
        "added": "FIX.4.3",
        "data": {
          "abbrName": "Instrmt",
          "added": "FIX.4.3",
          "category": "Common",
          "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
          "id": "1003",
          "name": "Instrument",
          "type": "component",
        },
        "id": "1003",
        "presence": "required",
      },
      {
        "added": "FIX.4.3",
        "data": {
          "abbrName": "OrdQty",
          "added": "FIX.4.3",
          "category": "Common",
          "description": "The OrderQtyData component block contains the fields commonly used for indicating the amount or quantity of an order. Note that when this component block is marked as "required" in a message either one of these three fields must be used to identify the amount: OrderQty, CashOrderQty or OrderPercent (in the case of CIV).

",
          "id": "1011",
          "name": "OrderQtyData",
          "type": "component",
        },
        "id": "1011",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "221",
      },
    ],
  },
]
`;

exports[`FIXParser #getBriefDescription should generate a brief description Multiple messages 1`] = `
[
  Message {
    "bodyLengthExpected": 61,
    "bodyLengthValid": true,
    "bodyLengthValue": 61,
    "checksumExpected": "003",
    "checksumValid": true,
    "checksumValue": "003",
    "data": [
      Field {
        "category": null,
        "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
        "enumeration": null,
        "name": "BeginString",
        "section": null,
        "tag": 8,
        "type": null,
        "value": "FIX.4.1",
      },
      Field {
        "category": null,
        "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
        "enumeration": null,
        "name": "BodyLength",
        "section": null,
        "tag": 9,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the length in bytes. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:nonNegativeInteger",
            "builtin": "false",
            "description": "int field representing the length in bytes. Value must be positive.",
            "standard": "XML",
          },
          "name": "Length",
        },
        "value": 61,
      },
      Field {
        "category": null,
        "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
        "enumeration": EnumType {
          "added": undefined,
          "addedEP": undefined,
          "codeSet": "MsgTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Logon

The logon message authenticates a user establishing a connection to a remote system. The logon message must be the first message sent by the application requesting to initiate a FIX session.",
          "group": undefined,
          "id": "35011",
          "name": "Logon",
          "sort": 11,
          "tag": 35,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "A",
        },
        "name": "MsgType",
        "section": null,
        "tag": 35,
        "type": null,
        "value": "A",
      },
      Field {
        "category": null,
        "description": "Integer message sequence number.",
        "enumeration": null,
        "name": "MsgSeqNum",
        "section": null,
        "tag": 34,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing a message sequence number. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:positiveInteger",
            "builtin": "false",
            "description": "int field representing a message sequence number. Value must be positive.",
            "standard": "XML",
          },
          "name": "SeqNum",
        },
        "value": 1,
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm sending message.",
        "enumeration": null,
        "name": "SenderCompID",
        "section": null,
        "tag": 49,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "EXEC",
      },
      Field {
        "category": null,
        "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
        "enumeration": null,
        "name": "SendingTime",
        "section": null,
        "tag": 52,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20121105-23:24:06",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify receiving firm.",
        "enumeration": null,
        "name": "TargetCompID",
        "section": null,
        "tag": 56,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "BANZAI",
      },
      Field {
        "category": null,
        "description": "Method of encryption.",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "EncryptMethodCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "None / Other",
          "group": undefined,
          "id": "98001",
          "name": "None",
          "sort": 1,
          "tag": 98,
          "type": "int",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "0",
        },
        "name": "EncryptMethod",
        "section": null,
        "tag": 98,
        "type": null,
        "value": "0",
      },
      Field {
        "category": null,
        "description": "Heartbeat interval (seconds)",
        "enumeration": null,
        "name": "HeartBtInt",
        "section": null,
        "tag": 108,
        "type": {
          "added": "FIX.2.7",
          "description": "Sequence of digits without commas or decimals and optional sign character (ASCII characters "-" and "0" - "9" ). The sign character utilizes one byte (i.e. positive int is "99999" while negative int is "-99999"). Note that int values may contain leading zeros (e.g. "00023" = "23").",
          "mappedDatatype": {
            "base": "xs:integer",
            "builtin": "true",
            "standard": "XML",
          },
          "name": "int",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "value": 30,
      },
      Field {
        "category": null,
        "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
        "enumeration": null,
        "name": "CheckSum",
        "section": null,
        "tag": 10,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "003",
      },
    ],
    "description": "Logon",
    "fixVersion": "FIX.4.1",
    "messageSequence": 1,
    "messageString": "8=FIX.4.19=6135=A34=149=EXEC52=20121105-23:24:0656=BANZAI98=0108=3010=003",
    "messageType": "A",
    "messageTypeDescription": "The logon message authenticates a user establishing a connection to a remote system. The logon message must be the first message sent by the application requesting to initiate a FIX session.",
    "structure": [
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Hdr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message header

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
              "id": "8",
              "name": "BeginString",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be second field in message)",
              "id": "9",
              "name": "BodyLength",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be third field in message)",
              "id": "35",
              "name": "MsgType",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "49",
              "name": "SenderCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "56",
              "name": "TargetCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "34",
              "name": "MsgSeqNum",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "52",
              "name": "SendingTime",
              "presence": "required",
            },
          ],
          "id": "1024",
          "name": "StandardHeader",
          "type": "component",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "id": "1024",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "EncryptMethod",
          "added": "FIX.2.7",
          "description": "Method of encryption.",
          "id": "98",
          "name": "EncryptMethod",
          "type": "EncryptMethodCodeSet",
        },
        "id": "98",
        "presence": "required",
      },
      {
        "added": "FIX.3.0",
        "data": {
          "abbrName": "HeartBtInt",
          "added": "FIX.3.0",
          "description": "Heartbeat interval (seconds)",
          "id": "108",
          "name": "HeartBtInt",
          "type": "int",
        },
        "id": "108",
        "presence": "required",
      },
      {
        "added": "FIX.4.4",
        "addedEP": "-1",
        "data": {
          "abbrName": "DefApplVerID",
          "added": "FIX.4.4",
          "addedEP": "16",
          "description": "Specifies the service pack release being applied, by default, to message at the session level. Enumerated field with values assigned at time of service pack release. Uses same values as ApplVerID",
          "id": "1137",
          "name": "DefaultApplVerID",
          "type": "ApplVerIDCodeSet",
        },
        "id": "1137",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Trlr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message trailer

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, always last field in message)",
              "id": "10",
              "name": "CheckSum",
              "presence": "required",
            },
          ],
          "id": "1025",
          "name": "StandardTrailer",
          "type": "component",
        },
        "id": "1025",
        "presence": "required",
      },
    ],
  },
  Message {
    "bodyLengthExpected": 61,
    "bodyLengthValid": true,
    "bodyLengthValue": 61,
    "checksumExpected": "003",
    "checksumValid": true,
    "checksumValue": "003",
    "data": [
      Field {
        "category": null,
        "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
        "enumeration": null,
        "name": "BeginString",
        "section": null,
        "tag": 8,
        "type": null,
        "value": "FIX.4.1",
      },
      Field {
        "category": null,
        "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
        "enumeration": null,
        "name": "BodyLength",
        "section": null,
        "tag": 9,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the length in bytes. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:nonNegativeInteger",
            "builtin": "false",
            "description": "int field representing the length in bytes. Value must be positive.",
            "standard": "XML",
          },
          "name": "Length",
        },
        "value": 61,
      },
      Field {
        "category": null,
        "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
        "enumeration": EnumType {
          "added": undefined,
          "addedEP": undefined,
          "codeSet": "MsgTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Logon

The logon message authenticates a user establishing a connection to a remote system. The logon message must be the first message sent by the application requesting to initiate a FIX session.",
          "group": undefined,
          "id": "35011",
          "name": "Logon",
          "sort": 11,
          "tag": 35,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "A",
        },
        "name": "MsgType",
        "section": null,
        "tag": 35,
        "type": null,
        "value": "A",
      },
      Field {
        "category": null,
        "description": "Integer message sequence number.",
        "enumeration": null,
        "name": "MsgSeqNum",
        "section": null,
        "tag": 34,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing a message sequence number. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:positiveInteger",
            "builtin": "false",
            "description": "int field representing a message sequence number. Value must be positive.",
            "standard": "XML",
          },
          "name": "SeqNum",
        },
        "value": 1,
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm sending message.",
        "enumeration": null,
        "name": "SenderCompID",
        "section": null,
        "tag": 49,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "BANZAI",
      },
      Field {
        "category": null,
        "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
        "enumeration": null,
        "name": "SendingTime",
        "section": null,
        "tag": 52,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20121105-23:24:06",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify receiving firm.",
        "enumeration": null,
        "name": "TargetCompID",
        "section": null,
        "tag": 56,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "EXEC",
      },
      Field {
        "category": null,
        "description": "Method of encryption.",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "EncryptMethodCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "None / Other",
          "group": undefined,
          "id": "98001",
          "name": "None",
          "sort": 1,
          "tag": 98,
          "type": "int",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "0",
        },
        "name": "EncryptMethod",
        "section": null,
        "tag": 98,
        "type": null,
        "value": "0",
      },
      Field {
        "category": null,
        "description": "Heartbeat interval (seconds)",
        "enumeration": null,
        "name": "HeartBtInt",
        "section": null,
        "tag": 108,
        "type": {
          "added": "FIX.2.7",
          "description": "Sequence of digits without commas or decimals and optional sign character (ASCII characters "-" and "0" - "9" ). The sign character utilizes one byte (i.e. positive int is "99999" while negative int is "-99999"). Note that int values may contain leading zeros (e.g. "00023" = "23").",
          "mappedDatatype": {
            "base": "xs:integer",
            "builtin": "true",
            "standard": "XML",
          },
          "name": "int",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "value": 30,
      },
      Field {
        "category": null,
        "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
        "enumeration": null,
        "name": "CheckSum",
        "section": null,
        "tag": 10,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "003",
      },
    ],
    "description": "Logon",
    "fixVersion": "FIX.4.1",
    "messageSequence": 1,
    "messageString": "8=FIX.4.19=6135=A34=149=BANZAI52=20121105-23:24:0656=EXEC98=0108=3010=003",
    "messageType": "A",
    "messageTypeDescription": "The logon message authenticates a user establishing a connection to a remote system. The logon message must be the first message sent by the application requesting to initiate a FIX session.",
    "structure": [
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Hdr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message header

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
              "id": "8",
              "name": "BeginString",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be second field in message)",
              "id": "9",
              "name": "BodyLength",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be third field in message)",
              "id": "35",
              "name": "MsgType",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "49",
              "name": "SenderCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "56",
              "name": "TargetCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "34",
              "name": "MsgSeqNum",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "52",
              "name": "SendingTime",
              "presence": "required",
            },
          ],
          "id": "1024",
          "name": "StandardHeader",
          "type": "component",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "id": "1024",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "EncryptMethod",
          "added": "FIX.2.7",
          "description": "Method of encryption.",
          "id": "98",
          "name": "EncryptMethod",
          "type": "EncryptMethodCodeSet",
        },
        "id": "98",
        "presence": "required",
      },
      {
        "added": "FIX.3.0",
        "data": {
          "abbrName": "HeartBtInt",
          "added": "FIX.3.0",
          "description": "Heartbeat interval (seconds)",
          "id": "108",
          "name": "HeartBtInt",
          "type": "int",
        },
        "id": "108",
        "presence": "required",
      },
      {
        "added": "FIX.4.4",
        "addedEP": "-1",
        "data": {
          "abbrName": "DefApplVerID",
          "added": "FIX.4.4",
          "addedEP": "16",
          "description": "Specifies the service pack release being applied, by default, to message at the session level. Enumerated field with values assigned at time of service pack release. Uses same values as ApplVerID",
          "id": "1137",
          "name": "DefaultApplVerID",
          "type": "ApplVerIDCodeSet",
        },
        "id": "1137",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Trlr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message trailer

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, always last field in message)",
              "id": "10",
              "name": "CheckSum",
              "presence": "required",
            },
          ],
          "id": "1025",
          "name": "StandardTrailer",
          "type": "component",
        },
        "id": "1025",
        "presence": "required",
      },
    ],
  },
  Message {
    "bodyLengthExpected": 49,
    "bodyLengthValid": true,
    "bodyLengthValue": 49,
    "checksumExpected": "228",
    "checksumValid": true,
    "checksumValue": "228",
    "data": [
      Field {
        "category": null,
        "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
        "enumeration": null,
        "name": "BeginString",
        "section": null,
        "tag": 8,
        "type": null,
        "value": "FIX.4.1",
      },
      Field {
        "category": null,
        "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
        "enumeration": null,
        "name": "BodyLength",
        "section": null,
        "tag": 9,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the length in bytes. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:nonNegativeInteger",
            "builtin": "false",
            "description": "int field representing the length in bytes. Value must be positive.",
            "standard": "XML",
          },
          "name": "Length",
        },
        "value": 49,
      },
      Field {
        "category": null,
        "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
        "enumeration": EnumType {
          "added": undefined,
          "addedEP": undefined,
          "codeSet": "MsgTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Heartbeat

The Heartbeat monitors the status of the communication link and identifies when the last of a string of messages was not received.",
          "group": undefined,
          "id": "35001",
          "name": "Heartbeat",
          "sort": 1,
          "tag": 35,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "0",
        },
        "name": "MsgType",
        "section": null,
        "tag": 35,
        "type": null,
        "value": "0",
      },
      Field {
        "category": null,
        "description": "Integer message sequence number.",
        "enumeration": null,
        "name": "MsgSeqNum",
        "section": null,
        "tag": 34,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing a message sequence number. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:positiveInteger",
            "builtin": "false",
            "description": "int field representing a message sequence number. Value must be positive.",
            "standard": "XML",
          },
          "name": "SeqNum",
        },
        "value": 2,
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm sending message.",
        "enumeration": null,
        "name": "SenderCompID",
        "section": null,
        "tag": 49,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "BANZAI",
      },
      Field {
        "category": null,
        "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
        "enumeration": null,
        "name": "SendingTime",
        "section": null,
        "tag": 52,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20121105-23:24:37",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify receiving firm.",
        "enumeration": null,
        "name": "TargetCompID",
        "section": null,
        "tag": 56,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "EXEC",
      },
      Field {
        "category": null,
        "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
        "enumeration": null,
        "name": "CheckSum",
        "section": null,
        "tag": 10,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "228",
      },
    ],
    "description": "Heartbeat",
    "fixVersion": "FIX.4.1",
    "messageSequence": 2,
    "messageString": "8=FIX.4.19=4935=034=249=BANZAI52=20121105-23:24:3756=EXEC10=228",
    "messageType": "0",
    "messageTypeDescription": "The Heartbeat monitors the status of the communication link and identifies when the last of a string of messages was not received.",
    "structure": [
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Hdr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message header

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
              "id": "8",
              "name": "BeginString",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be second field in message)",
              "id": "9",
              "name": "BodyLength",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be third field in message)",
              "id": "35",
              "name": "MsgType",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "49",
              "name": "SenderCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "56",
              "name": "TargetCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "34",
              "name": "MsgSeqNum",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "52",
              "name": "SendingTime",
              "presence": "required",
            },
          ],
          "id": "1024",
          "name": "StandardHeader",
          "type": "component",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "id": "1024",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Trlr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message trailer

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, always last field in message)",
              "id": "10",
              "name": "CheckSum",
              "presence": "required",
            },
          ],
          "id": "1025",
          "name": "StandardTrailer",
          "type": "component",
        },
        "id": "1025",
        "presence": "required",
      },
    ],
  },
  Message {
    "bodyLengthExpected": 49,
    "bodyLengthValid": true,
    "bodyLengthValue": 49,
    "checksumExpected": "228",
    "checksumValid": true,
    "checksumValue": "228",
    "data": [
      Field {
        "category": null,
        "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
        "enumeration": null,
        "name": "BeginString",
        "section": null,
        "tag": 8,
        "type": null,
        "value": "FIX.4.1",
      },
      Field {
        "category": null,
        "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
        "enumeration": null,
        "name": "BodyLength",
        "section": null,
        "tag": 9,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the length in bytes. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:nonNegativeInteger",
            "builtin": "false",
            "description": "int field representing the length in bytes. Value must be positive.",
            "standard": "XML",
          },
          "name": "Length",
        },
        "value": 49,
      },
      Field {
        "category": null,
        "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
        "enumeration": EnumType {
          "added": undefined,
          "addedEP": undefined,
          "codeSet": "MsgTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Heartbeat

The Heartbeat monitors the status of the communication link and identifies when the last of a string of messages was not received.",
          "group": undefined,
          "id": "35001",
          "name": "Heartbeat",
          "sort": 1,
          "tag": 35,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "0",
        },
        "name": "MsgType",
        "section": null,
        "tag": 35,
        "type": null,
        "value": "0",
      },
      Field {
        "category": null,
        "description": "Integer message sequence number.",
        "enumeration": null,
        "name": "MsgSeqNum",
        "section": null,
        "tag": 34,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing a message sequence number. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:positiveInteger",
            "builtin": "false",
            "description": "int field representing a message sequence number. Value must be positive.",
            "standard": "XML",
          },
          "name": "SeqNum",
        },
        "value": 2,
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm sending message.",
        "enumeration": null,
        "name": "SenderCompID",
        "section": null,
        "tag": 49,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "EXEC",
      },
      Field {
        "category": null,
        "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
        "enumeration": null,
        "name": "SendingTime",
        "section": null,
        "tag": 52,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20121105-23:24:37",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify receiving firm.",
        "enumeration": null,
        "name": "TargetCompID",
        "section": null,
        "tag": 56,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "BANZAI",
      },
      Field {
        "category": null,
        "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
        "enumeration": null,
        "name": "CheckSum",
        "section": null,
        "tag": 10,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "228",
      },
    ],
    "description": "Heartbeat",
    "fixVersion": "FIX.4.1",
    "messageSequence": 2,
    "messageString": "8=FIX.4.19=4935=034=249=EXEC52=20121105-23:24:3756=BANZAI10=228",
    "messageType": "0",
    "messageTypeDescription": "The Heartbeat monitors the status of the communication link and identifies when the last of a string of messages was not received.",
    "structure": [
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Hdr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message header

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
              "id": "8",
              "name": "BeginString",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be second field in message)",
              "id": "9",
              "name": "BodyLength",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be third field in message)",
              "id": "35",
              "name": "MsgType",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "49",
              "name": "SenderCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "56",
              "name": "TargetCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "34",
              "name": "MsgSeqNum",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "52",
              "name": "SendingTime",
              "presence": "required",
            },
          ],
          "id": "1024",
          "name": "StandardHeader",
          "type": "component",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "id": "1024",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Trlr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message trailer

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, always last field in message)",
              "id": "10",
              "name": "CheckSum",
              "presence": "required",
            },
          ],
          "id": "1025",
          "name": "StandardTrailer",
          "type": "component",
        },
        "id": "1025",
        "presence": "required",
      },
    ],
  },
  Message {
    "bodyLengthExpected": 103,
    "bodyLengthValid": true,
    "bodyLengthValue": 103,
    "checksumExpected": "062",
    "checksumValid": true,
    "checksumValue": "062",
    "data": [
      Field {
        "category": null,
        "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
        "enumeration": null,
        "name": "BeginString",
        "section": null,
        "tag": 8,
        "type": null,
        "value": "FIX.4.1",
      },
      Field {
        "category": null,
        "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
        "enumeration": null,
        "name": "BodyLength",
        "section": null,
        "tag": 9,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the length in bytes. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:nonNegativeInteger",
            "builtin": "false",
            "description": "int field representing the length in bytes. Value must be positive.",
            "standard": "XML",
          },
          "name": "Length",
        },
        "value": 103,
      },
      Field {
        "category": null,
        "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
        "enumeration": EnumType {
          "added": undefined,
          "addedEP": undefined,
          "codeSet": "MsgTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "NewOrderSingle

The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
          "group": undefined,
          "id": "35014",
          "name": "NewOrderSingle",
          "sort": 14,
          "tag": 35,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "D",
        },
        "name": "MsgType",
        "section": null,
        "tag": 35,
        "type": null,
        "value": "D",
      },
      Field {
        "category": null,
        "description": "Integer message sequence number.",
        "enumeration": null,
        "name": "MsgSeqNum",
        "section": null,
        "tag": 34,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing a message sequence number. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:positiveInteger",
            "builtin": "false",
            "description": "int field representing a message sequence number. Value must be positive.",
            "standard": "XML",
          },
          "name": "SeqNum",
        },
        "value": 3,
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm sending message.",
        "enumeration": null,
        "name": "SenderCompID",
        "section": null,
        "tag": 49,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "BANZAI",
      },
      Field {
        "category": null,
        "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
        "enumeration": null,
        "name": "SendingTime",
        "section": null,
        "tag": 52,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20121105-23:24:42",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify receiving firm.",
        "enumeration": null,
        "name": "TargetCompID",
        "section": null,
        "tag": 56,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "EXEC",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
        "enumeration": null,
        "name": "ClOrdID",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 11,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "1352157882577",
      },
      Field {
        "category": null,
        "description": "Instructions for order handling on Broker trading floor",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "HandlInstCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Automated execution order, private, no Broker intervention",
          "group": undefined,
          "id": "21001",
          "name": "AutomatedExecutionNoIntervention",
          "sort": 1,
          "tag": 21,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "1",
        },
        "name": "HandlInst",
        "section": null,
        "tag": 21,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "OrderQty",
        "section": null,
        "tag": 38,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 10000,
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "OrdTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Market",
          "group": undefined,
          "id": "40001",
          "name": "Market",
          "sort": 1,
          "tag": 40,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "1",
        },
        "name": "OrdType",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 40,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "SideCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Buy

For Securities Financing indicates the receipt of securities or collateral.",
          "group": undefined,
          "id": "54001",
          "name": "Buy",
          "sort": 1,
          "tag": 54,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "254",
          "value": "1",
        },
        "name": "Side",
        "section": null,
        "tag": 54,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
        "enumeration": null,
        "name": "Symbol",
        "section": null,
        "tag": 55,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "MSFT",
      },
      Field {
        "category": null,
        "description": "Specifies how long the order remains in effect. Absence of this field is interpreted as DAY. NOTE not applicable to CIV Orders.",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "TimeInForceCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Day (or session)

A buy or sell order that, if not executed expires at the end of the trading day on which it was entered.",
          "group": undefined,
          "id": "59001",
          "name": "Day",
          "sort": 1,
          "tag": 59,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "253",
          "value": "0",
        },
        "name": "TimeInForce",
        "section": null,
        "tag": 59,
        "type": null,
        "value": "0",
      },
      Field {
        "category": null,
        "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
        "enumeration": null,
        "name": "CheckSum",
        "section": null,
        "tag": 10,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "062",
      },
    ],
    "description": "NewOrderSingle",
    "fixVersion": "FIX.4.1",
    "messageSequence": 3,
    "messageString": "8=FIX.4.19=10335=D34=349=BANZAI52=20121105-23:24:4256=EXEC11=135215788257721=138=1000040=154=155=MSFT59=010=062",
    "messageType": "D",
    "messageTypeDescription": "The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
    "structure": [
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Hdr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message header

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
              "id": "8",
              "name": "BeginString",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be second field in message)",
              "id": "9",
              "name": "BodyLength",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be third field in message)",
              "id": "35",
              "name": "MsgType",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "49",
              "name": "SenderCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "56",
              "name": "TargetCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "34",
              "name": "MsgSeqNum",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "52",
              "name": "SendingTime",
              "presence": "required",
            },
          ],
          "id": "1024",
          "name": "StandardHeader",
          "type": "component",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "id": "1024",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "ClOrdID",
          "added": "FIX.2.7",
          "baseCategory": "SingleGeneralOrderHandling",
          "baseCategoryAbbrName": "ID",
          "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
          "id": "11",
          "name": "ClOrdID",
          "type": "String",
          "updated": "FIX.Latest",
          "updatedEP": "282",
        },
        "id": "11",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "OrdTyp",
          "added": "FIX.2.7",
          "baseCategory": "SingleGeneralOrderHandling",
          "baseCategoryAbbrName": "Typ",
          "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
          "id": "40",
          "name": "OrdType",
          "type": "OrdTypeCodeSet",
        },
        "id": "40",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Side",
          "added": "FIX.2.7",
          "description": "Side of order (see Volume : "Glossary" for value definitions)",
          "id": "54",
          "name": "Side",
          "type": "SideCodeSet",
        },
        "id": "54",
        "presence": "required",
      },
      {
        "added": "FIX.4.2",
        "data": {
          "abbrName": "TxnTm",
          "added": "FIX.2.7",
          "description": "Timestamp when the business transaction represented by the message occurred.",
          "id": "60",
          "name": "TransactTime",
          "type": "UTCTimestamp",
          "updated": "FIX.5.0SP1",
          "updatedEP": "94",
        },
        "id": "60",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Trlr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message trailer

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, always last field in message)",
              "id": "10",
              "name": "CheckSum",
              "presence": "required",
            },
          ],
          "id": "1025",
          "name": "StandardTrailer",
          "type": "component",
        },
        "id": "1025",
        "presence": "required",
      },
      {
        "added": "FIX.4.3",
        "data": {
          "abbrName": "Instrmt",
          "added": "FIX.4.3",
          "category": "Common",
          "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
          "id": "1003",
          "name": "Instrument",
          "type": "component",
        },
        "id": "1003",
        "presence": "required",
      },
      {
        "added": "FIX.4.3",
        "data": {
          "abbrName": "OrdQty",
          "added": "FIX.4.3",
          "category": "Common",
          "description": "The OrderQtyData component block contains the fields commonly used for indicating the amount or quantity of an order. Note that when this component block is marked as "required" in a message either one of these three fields must be used to identify the amount: OrderQty, CashOrderQty or OrderPercent (in the case of CIV).

",
          "id": "1011",
          "name": "OrderQtyData",
          "type": "component",
        },
        "id": "1011",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "221",
      },
    ],
  },
  Message {
    "bodyLengthExpected": 139,
    "bodyLengthValid": true,
    "bodyLengthValue": 139,
    "checksumExpected": "059",
    "checksumValid": true,
    "checksumValue": "059",
    "data": [
      Field {
        "category": null,
        "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
        "enumeration": null,
        "name": "BeginString",
        "section": null,
        "tag": 8,
        "type": null,
        "value": "FIX.4.1",
      },
      Field {
        "category": null,
        "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
        "enumeration": null,
        "name": "BodyLength",
        "section": null,
        "tag": 9,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the length in bytes. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:nonNegativeInteger",
            "builtin": "false",
            "description": "int field representing the length in bytes. Value must be positive.",
            "standard": "XML",
          },
          "name": "Length",
        },
        "value": 139,
      },
      Field {
        "category": null,
        "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
        "enumeration": EnumType {
          "added": undefined,
          "addedEP": undefined,
          "codeSet": "MsgTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "ExecutionReport

The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
          "group": undefined,
          "id": "35009",
          "name": "ExecutionReport",
          "sort": 9,
          "tag": 35,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "8",
        },
        "name": "MsgType",
        "section": null,
        "tag": 35,
        "type": null,
        "value": "8",
      },
      Field {
        "category": null,
        "description": "Integer message sequence number.",
        "enumeration": null,
        "name": "MsgSeqNum",
        "section": null,
        "tag": 34,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing a message sequence number. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:positiveInteger",
            "builtin": "false",
            "description": "int field representing a message sequence number. Value must be positive.",
            "standard": "XML",
          },
          "name": "SeqNum",
        },
        "value": 3,
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm sending message.",
        "enumeration": null,
        "name": "SenderCompID",
        "section": null,
        "tag": 49,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "EXEC",
      },
      Field {
        "category": null,
        "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
        "enumeration": null,
        "name": "SendingTime",
        "section": null,
        "tag": 52,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20121105-23:24:42",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify receiving firm.",
        "enumeration": null,
        "name": "TargetCompID",
        "section": null,
        "tag": 56,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "BANZAI",
      },
      Field {
        "category": null,
        "description": "Calculated average price of all fills on this order.

For Fixed Income trades AvgPx is always expressed as percent-of-par, regardless of the PriceType (423) of LastPx (31). I.e., AvgPx will contain an average of percent-of-par values (see LastParPx (669)) for issues traded in Yield, Spread or Discount.",
        "enumeration": null,
        "name": "AvgPx",
        "section": null,
        "tag": 6,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
            "standard": "XML",
          },
          "name": "Price",
        },
        "value": 0,
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
        "enumeration": null,
        "name": "ClOrdID",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 11,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "1352157882577",
      },
      Field {
        "category": null,
        "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "CumQty",
        "section": null,
        "tag": 14,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 0,
      },
      Field {
        "category": null,
        "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
        "enumeration": null,
        "name": "ExecID",
        "section": null,
        "tag": 17,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "1",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 20,
        "type": null,
        "value": "0",
      },
      Field {
        "category": null,
        "description": "Price of this (last) fill.",
        "enumeration": null,
        "name": "LastPx",
        "section": null,
        "tag": 31,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
            "standard": "XML",
          },
          "name": "Price",
        },
        "value": 0,
      },
      Field {
        "category": null,
        "description": "Quantity (e.g. shares) bought/sold on this (last) fill.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "LastQty",
        "section": null,
        "tag": 32,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 0,
      },
      Field {
        "category": null,
        "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
        "enumeration": null,
        "name": "OrderID",
        "section": null,
        "tag": 37,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "OrderQty",
        "section": null,
        "tag": 38,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 10000,
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "OrdStatusCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "New",
          "group": undefined,
          "id": "39001",
          "name": "New",
          "sort": 1,
          "tag": 39,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "0",
        },
        "name": "OrdStatus",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 39,
        "type": null,
        "value": "0",
      },
      Field {
        "category": null,
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "SideCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Buy

For Securities Financing indicates the receipt of securities or collateral.",
          "group": undefined,
          "id": "54001",
          "name": "Buy",
          "sort": 1,
          "tag": 54,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "254",
          "value": "1",
        },
        "name": "Side",
        "section": null,
        "tag": 54,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
        "enumeration": null,
        "name": "Symbol",
        "section": null,
        "tag": 55,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "MSFT",
      },
      Field {
        "category": null,
        "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
        "enumeration": null,
        "name": "ExecType",
        "section": null,
        "tag": 150,
        "type": null,
        "value": "2",
      },
      Field {
        "category": null,
        "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "LeavesQty",
        "section": null,
        "tag": 151,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 0,
      },
      Field {
        "category": null,
        "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
        "enumeration": null,
        "name": "CheckSum",
        "section": null,
        "tag": 10,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "059",
      },
    ],
    "description": "ExecutionReport",
    "fixVersion": "FIX.4.1",
    "messageSequence": 3,
    "messageString": "8=FIX.4.19=13935=834=349=EXEC52=20121105-23:24:4256=BANZAI6=011=135215788257714=017=120=031=032=037=138=1000039=054=155=MSFT150=2151=010=059",
    "messageType": "8",
    "messageTypeDescription": "The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
    "structure": [
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Hdr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message header

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
              "id": "8",
              "name": "BeginString",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be second field in message)",
              "id": "9",
              "name": "BodyLength",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be third field in message)",
              "id": "35",
              "name": "MsgType",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "49",
              "name": "SenderCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "56",
              "name": "TargetCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "34",
              "name": "MsgSeqNum",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "52",
              "name": "SendingTime",
              "presence": "required",
            },
          ],
          "id": "1024",
          "name": "StandardHeader",
          "type": "component",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "id": "1024",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "CumQty",
          "added": "FIX.2.7",
          "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
          "id": "14",
          "name": "CumQty",
          "type": "Qty",
        },
        "id": "14",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "ExecID",
          "added": "FIX.2.7",
          "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
          "id": "17",
          "name": "ExecID",
          "type": "String",
          "updated": "FIX.5.0SP1",
          "updatedEP": "95",
        },
        "id": "17",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "OrdID",
          "added": "FIX.2.7",
          "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
          "id": "37",
          "name": "OrderID",
          "type": "String",
        },
        "id": "37",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "OrdStat",
          "added": "FIX.2.7",
          "baseCategory": "SingleGeneralOrderHandling",
          "baseCategoryAbbrName": "Stat",
          "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
          "id": "39",
          "name": "OrdStatus",
          "type": "OrdStatusCodeSet",
        },
        "id": "39",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Side",
          "added": "FIX.2.7",
          "description": "Side of order (see Volume : "Glossary" for value definitions)",
          "id": "54",
          "name": "Side",
          "type": "SideCodeSet",
        },
        "id": "54",
        "presence": "required",
      },
      {
        "added": "FIX.4.1",
        "data": {
          "abbrName": "ExecTyp",
          "added": "FIX.4.1",
          "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
          "id": "150",
          "name": "ExecType",
          "type": "ExecTypeCodeSet",
          "updated": "FIX.5.0SP2",
          "updatedEP": "131",
        },
        "id": "150",
        "presence": "required",
      },
      {
        "added": "FIX.4.1",
        "data": {
          "abbrName": "LeavesQty",
          "added": "FIX.4.1",
          "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
          "id": "151",
          "name": "LeavesQty",
          "type": "Qty",
        },
        "id": "151",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Trlr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message trailer

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, always last field in message)",
              "id": "10",
              "name": "CheckSum",
              "presence": "required",
            },
          ],
          "id": "1025",
          "name": "StandardTrailer",
          "type": "component",
        },
        "id": "1025",
        "presence": "required",
      },
      {
        "added": "FIX.4.3",
        "data": {
          "abbrName": "Instrmt",
          "added": "FIX.4.3",
          "category": "Common",
          "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
          "id": "1003",
          "name": "Instrument",
          "type": "component",
        },
        "id": "1003",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
    ],
  },
  Message {
    "bodyLengthExpected": 153,
    "bodyLengthValid": true,
    "bodyLengthValue": 153,
    "checksumExpected": "230",
    "checksumValid": true,
    "checksumValue": "230",
    "data": [
      Field {
        "category": null,
        "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
        "enumeration": null,
        "name": "BeginString",
        "section": null,
        "tag": 8,
        "type": null,
        "value": "FIX.4.1",
      },
      Field {
        "category": null,
        "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
        "enumeration": null,
        "name": "BodyLength",
        "section": null,
        "tag": 9,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the length in bytes. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:nonNegativeInteger",
            "builtin": "false",
            "description": "int field representing the length in bytes. Value must be positive.",
            "standard": "XML",
          },
          "name": "Length",
        },
        "value": 153,
      },
      Field {
        "category": null,
        "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
        "enumeration": EnumType {
          "added": undefined,
          "addedEP": undefined,
          "codeSet": "MsgTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "ExecutionReport

The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
          "group": undefined,
          "id": "35009",
          "name": "ExecutionReport",
          "sort": 9,
          "tag": 35,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "8",
        },
        "name": "MsgType",
        "section": null,
        "tag": 35,
        "type": null,
        "value": "8",
      },
      Field {
        "category": null,
        "description": "Integer message sequence number.",
        "enumeration": null,
        "name": "MsgSeqNum",
        "section": null,
        "tag": 34,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing a message sequence number. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:positiveInteger",
            "builtin": "false",
            "description": "int field representing a message sequence number. Value must be positive.",
            "standard": "XML",
          },
          "name": "SeqNum",
        },
        "value": 4,
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm sending message.",
        "enumeration": null,
        "name": "SenderCompID",
        "section": null,
        "tag": 49,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "EXEC",
      },
      Field {
        "category": null,
        "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
        "enumeration": null,
        "name": "SendingTime",
        "section": null,
        "tag": 52,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20121105-23:24:42",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify receiving firm.",
        "enumeration": null,
        "name": "TargetCompID",
        "section": null,
        "tag": 56,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "BANZAI",
      },
      Field {
        "category": null,
        "description": "Calculated average price of all fills on this order.

For Fixed Income trades AvgPx is always expressed as percent-of-par, regardless of the PriceType (423) of LastPx (31). I.e., AvgPx will contain an average of percent-of-par values (see LastParPx (669)) for issues traded in Yield, Spread or Discount.",
        "enumeration": null,
        "name": "AvgPx",
        "section": null,
        "tag": 6,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
            "standard": "XML",
          },
          "name": "Price",
        },
        "value": 12.3,
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
        "enumeration": null,
        "name": "ClOrdID",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 11,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "1352157882577",
      },
      Field {
        "category": null,
        "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "CumQty",
        "section": null,
        "tag": 14,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 10000,
      },
      Field {
        "category": null,
        "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
        "enumeration": null,
        "name": "ExecID",
        "section": null,
        "tag": 17,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "2",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 20,
        "type": null,
        "value": "0",
      },
      Field {
        "category": null,
        "description": "Price of this (last) fill.",
        "enumeration": null,
        "name": "LastPx",
        "section": null,
        "tag": 31,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
            "standard": "XML",
          },
          "name": "Price",
        },
        "value": 12.3,
      },
      Field {
        "category": null,
        "description": "Quantity (e.g. shares) bought/sold on this (last) fill.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "LastQty",
        "section": null,
        "tag": 32,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 10000,
      },
      Field {
        "category": null,
        "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
        "enumeration": null,
        "name": "OrderID",
        "section": null,
        "tag": 37,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "2",
      },
      Field {
        "category": null,
        "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "OrderQty",
        "section": null,
        "tag": 38,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 10000,
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "OrdStatusCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Filled",
          "group": undefined,
          "id": "39003",
          "name": "Filled",
          "sort": 3,
          "tag": 39,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "2",
        },
        "name": "OrdStatus",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 39,
        "type": null,
        "value": "2",
      },
      Field {
        "category": null,
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "SideCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Buy

For Securities Financing indicates the receipt of securities or collateral.",
          "group": undefined,
          "id": "54001",
          "name": "Buy",
          "sort": 1,
          "tag": 54,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "254",
          "value": "1",
        },
        "name": "Side",
        "section": null,
        "tag": 54,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
        "enumeration": null,
        "name": "Symbol",
        "section": null,
        "tag": 55,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "MSFT",
      },
      Field {
        "category": null,
        "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
        "enumeration": null,
        "name": "ExecType",
        "section": null,
        "tag": 150,
        "type": null,
        "value": "2",
      },
      Field {
        "category": null,
        "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "LeavesQty",
        "section": null,
        "tag": 151,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 0,
      },
      Field {
        "category": null,
        "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
        "enumeration": null,
        "name": "CheckSum",
        "section": null,
        "tag": 10,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "230",
      },
    ],
    "description": "ExecutionReport",
    "fixVersion": "FIX.4.1",
    "messageSequence": 4,
    "messageString": "8=FIX.4.19=15335=834=449=EXEC52=20121105-23:24:4256=BANZAI6=12.311=135215788257714=1000017=220=031=12.332=1000037=238=1000039=254=155=MSFT150=2151=010=230",
    "messageType": "8",
    "messageTypeDescription": "The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
    "structure": [
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Hdr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message header

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
              "id": "8",
              "name": "BeginString",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be second field in message)",
              "id": "9",
              "name": "BodyLength",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be third field in message)",
              "id": "35",
              "name": "MsgType",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "49",
              "name": "SenderCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "56",
              "name": "TargetCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "34",
              "name": "MsgSeqNum",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "52",
              "name": "SendingTime",
              "presence": "required",
            },
          ],
          "id": "1024",
          "name": "StandardHeader",
          "type": "component",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "id": "1024",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "CumQty",
          "added": "FIX.2.7",
          "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
          "id": "14",
          "name": "CumQty",
          "type": "Qty",
        },
        "id": "14",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "ExecID",
          "added": "FIX.2.7",
          "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
          "id": "17",
          "name": "ExecID",
          "type": "String",
          "updated": "FIX.5.0SP1",
          "updatedEP": "95",
        },
        "id": "17",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "OrdID",
          "added": "FIX.2.7",
          "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
          "id": "37",
          "name": "OrderID",
          "type": "String",
        },
        "id": "37",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "OrdStat",
          "added": "FIX.2.7",
          "baseCategory": "SingleGeneralOrderHandling",
          "baseCategoryAbbrName": "Stat",
          "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
          "id": "39",
          "name": "OrdStatus",
          "type": "OrdStatusCodeSet",
        },
        "id": "39",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Side",
          "added": "FIX.2.7",
          "description": "Side of order (see Volume : "Glossary" for value definitions)",
          "id": "54",
          "name": "Side",
          "type": "SideCodeSet",
        },
        "id": "54",
        "presence": "required",
      },
      {
        "added": "FIX.4.1",
        "data": {
          "abbrName": "ExecTyp",
          "added": "FIX.4.1",
          "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
          "id": "150",
          "name": "ExecType",
          "type": "ExecTypeCodeSet",
          "updated": "FIX.5.0SP2",
          "updatedEP": "131",
        },
        "id": "150",
        "presence": "required",
      },
      {
        "added": "FIX.4.1",
        "data": {
          "abbrName": "LeavesQty",
          "added": "FIX.4.1",
          "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
          "id": "151",
          "name": "LeavesQty",
          "type": "Qty",
        },
        "id": "151",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Trlr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message trailer

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, always last field in message)",
              "id": "10",
              "name": "CheckSum",
              "presence": "required",
            },
          ],
          "id": "1025",
          "name": "StandardTrailer",
          "type": "component",
        },
        "id": "1025",
        "presence": "required",
      },
      {
        "added": "FIX.4.3",
        "data": {
          "abbrName": "Instrmt",
          "added": "FIX.4.3",
          "category": "Common",
          "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
          "id": "1003",
          "name": "Instrument",
          "type": "component",
        },
        "id": "1003",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
    ],
  },
  Message {
    "bodyLengthExpected": 103,
    "bodyLengthValid": true,
    "bodyLengthValue": 103,
    "checksumExpected": "047",
    "checksumValid": true,
    "checksumValue": "047",
    "data": [
      Field {
        "category": null,
        "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
        "enumeration": null,
        "name": "BeginString",
        "section": null,
        "tag": 8,
        "type": null,
        "value": "FIX.4.1",
      },
      Field {
        "category": null,
        "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
        "enumeration": null,
        "name": "BodyLength",
        "section": null,
        "tag": 9,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the length in bytes. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:nonNegativeInteger",
            "builtin": "false",
            "description": "int field representing the length in bytes. Value must be positive.",
            "standard": "XML",
          },
          "name": "Length",
        },
        "value": 103,
      },
      Field {
        "category": null,
        "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
        "enumeration": EnumType {
          "added": undefined,
          "addedEP": undefined,
          "codeSet": "MsgTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "NewOrderSingle

The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
          "group": undefined,
          "id": "35014",
          "name": "NewOrderSingle",
          "sort": 14,
          "tag": 35,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "D",
        },
        "name": "MsgType",
        "section": null,
        "tag": 35,
        "type": null,
        "value": "D",
      },
      Field {
        "category": null,
        "description": "Integer message sequence number.",
        "enumeration": null,
        "name": "MsgSeqNum",
        "section": null,
        "tag": 34,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing a message sequence number. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:positiveInteger",
            "builtin": "false",
            "description": "int field representing a message sequence number. Value must be positive.",
            "standard": "XML",
          },
          "name": "SeqNum",
        },
        "value": 4,
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm sending message.",
        "enumeration": null,
        "name": "SenderCompID",
        "section": null,
        "tag": 49,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "BANZAI",
      },
      Field {
        "category": null,
        "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
        "enumeration": null,
        "name": "SendingTime",
        "section": null,
        "tag": 52,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20121105-23:24:55",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify receiving firm.",
        "enumeration": null,
        "name": "TargetCompID",
        "section": null,
        "tag": 56,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "EXEC",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
        "enumeration": null,
        "name": "ClOrdID",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 11,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "1352157895032",
      },
      Field {
        "category": null,
        "description": "Instructions for order handling on Broker trading floor",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "HandlInstCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Automated execution order, private, no Broker intervention",
          "group": undefined,
          "id": "21001",
          "name": "AutomatedExecutionNoIntervention",
          "sort": 1,
          "tag": 21,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "1",
        },
        "name": "HandlInst",
        "section": null,
        "tag": 21,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "OrderQty",
        "section": null,
        "tag": 38,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 10000,
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "OrdTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Market",
          "group": undefined,
          "id": "40001",
          "name": "Market",
          "sort": 1,
          "tag": 40,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "1",
        },
        "name": "OrdType",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 40,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "SideCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Buy

For Securities Financing indicates the receipt of securities or collateral.",
          "group": undefined,
          "id": "54001",
          "name": "Buy",
          "sort": 1,
          "tag": 54,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "254",
          "value": "1",
        },
        "name": "Side",
        "section": null,
        "tag": 54,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
        "enumeration": null,
        "name": "Symbol",
        "section": null,
        "tag": 55,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "ORCL",
      },
      Field {
        "category": null,
        "description": "Specifies how long the order remains in effect. Absence of this field is interpreted as DAY. NOTE not applicable to CIV Orders.",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "TimeInForceCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Day (or session)

A buy or sell order that, if not executed expires at the end of the trading day on which it was entered.",
          "group": undefined,
          "id": "59001",
          "name": "Day",
          "sort": 1,
          "tag": 59,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "253",
          "value": "0",
        },
        "name": "TimeInForce",
        "section": null,
        "tag": 59,
        "type": null,
        "value": "0",
      },
      Field {
        "category": null,
        "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
        "enumeration": null,
        "name": "CheckSum",
        "section": null,
        "tag": 10,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "047",
      },
    ],
    "description": "NewOrderSingle",
    "fixVersion": "FIX.4.1",
    "messageSequence": 4,
    "messageString": "8=FIX.4.19=10335=D34=449=BANZAI52=20121105-23:24:5556=EXEC11=135215789503221=138=1000040=154=155=ORCL59=010=047",
    "messageType": "D",
    "messageTypeDescription": "The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
    "structure": [
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Hdr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message header

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
              "id": "8",
              "name": "BeginString",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be second field in message)",
              "id": "9",
              "name": "BodyLength",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be third field in message)",
              "id": "35",
              "name": "MsgType",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "49",
              "name": "SenderCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "56",
              "name": "TargetCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "34",
              "name": "MsgSeqNum",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "52",
              "name": "SendingTime",
              "presence": "required",
            },
          ],
          "id": "1024",
          "name": "StandardHeader",
          "type": "component",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "id": "1024",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "ClOrdID",
          "added": "FIX.2.7",
          "baseCategory": "SingleGeneralOrderHandling",
          "baseCategoryAbbrName": "ID",
          "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
          "id": "11",
          "name": "ClOrdID",
          "type": "String",
          "updated": "FIX.Latest",
          "updatedEP": "282",
        },
        "id": "11",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "OrdTyp",
          "added": "FIX.2.7",
          "baseCategory": "SingleGeneralOrderHandling",
          "baseCategoryAbbrName": "Typ",
          "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
          "id": "40",
          "name": "OrdType",
          "type": "OrdTypeCodeSet",
        },
        "id": "40",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Side",
          "added": "FIX.2.7",
          "description": "Side of order (see Volume : "Glossary" for value definitions)",
          "id": "54",
          "name": "Side",
          "type": "SideCodeSet",
        },
        "id": "54",
        "presence": "required",
      },
      {
        "added": "FIX.4.2",
        "data": {
          "abbrName": "TxnTm",
          "added": "FIX.2.7",
          "description": "Timestamp when the business transaction represented by the message occurred.",
          "id": "60",
          "name": "TransactTime",
          "type": "UTCTimestamp",
          "updated": "FIX.5.0SP1",
          "updatedEP": "94",
        },
        "id": "60",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Trlr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message trailer

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, always last field in message)",
              "id": "10",
              "name": "CheckSum",
              "presence": "required",
            },
          ],
          "id": "1025",
          "name": "StandardTrailer",
          "type": "component",
        },
        "id": "1025",
        "presence": "required",
      },
      {
        "added": "FIX.4.3",
        "data": {
          "abbrName": "Instrmt",
          "added": "FIX.4.3",
          "category": "Common",
          "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
          "id": "1003",
          "name": "Instrument",
          "type": "component",
        },
        "id": "1003",
        "presence": "required",
      },
      {
        "added": "FIX.4.3",
        "data": {
          "abbrName": "OrdQty",
          "added": "FIX.4.3",
          "category": "Common",
          "description": "The OrderQtyData component block contains the fields commonly used for indicating the amount or quantity of an order. Note that when this component block is marked as "required" in a message either one of these three fields must be used to identify the amount: OrderQty, CashOrderQty or OrderPercent (in the case of CIV).

",
          "id": "1011",
          "name": "OrderQtyData",
          "type": "component",
        },
        "id": "1011",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "221",
      },
    ],
  },
  Message {
    "bodyLengthExpected": 139,
    "bodyLengthValid": true,
    "bodyLengthValue": 139,
    "checksumExpected": "049",
    "checksumValid": true,
    "checksumValue": "049",
    "data": [
      Field {
        "category": null,
        "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
        "enumeration": null,
        "name": "BeginString",
        "section": null,
        "tag": 8,
        "type": null,
        "value": "FIX.4.1",
      },
      Field {
        "category": null,
        "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
        "enumeration": null,
        "name": "BodyLength",
        "section": null,
        "tag": 9,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the length in bytes. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:nonNegativeInteger",
            "builtin": "false",
            "description": "int field representing the length in bytes. Value must be positive.",
            "standard": "XML",
          },
          "name": "Length",
        },
        "value": 139,
      },
      Field {
        "category": null,
        "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
        "enumeration": EnumType {
          "added": undefined,
          "addedEP": undefined,
          "codeSet": "MsgTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "ExecutionReport

The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
          "group": undefined,
          "id": "35009",
          "name": "ExecutionReport",
          "sort": 9,
          "tag": 35,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "8",
        },
        "name": "MsgType",
        "section": null,
        "tag": 35,
        "type": null,
        "value": "8",
      },
      Field {
        "category": null,
        "description": "Integer message sequence number.",
        "enumeration": null,
        "name": "MsgSeqNum",
        "section": null,
        "tag": 34,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing a message sequence number. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:positiveInteger",
            "builtin": "false",
            "description": "int field representing a message sequence number. Value must be positive.",
            "standard": "XML",
          },
          "name": "SeqNum",
        },
        "value": 5,
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm sending message.",
        "enumeration": null,
        "name": "SenderCompID",
        "section": null,
        "tag": 49,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "EXEC",
      },
      Field {
        "category": null,
        "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
        "enumeration": null,
        "name": "SendingTime",
        "section": null,
        "tag": 52,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20121105-23:24:55",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify receiving firm.",
        "enumeration": null,
        "name": "TargetCompID",
        "section": null,
        "tag": 56,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "BANZAI",
      },
      Field {
        "category": null,
        "description": "Calculated average price of all fills on this order.

For Fixed Income trades AvgPx is always expressed as percent-of-par, regardless of the PriceType (423) of LastPx (31). I.e., AvgPx will contain an average of percent-of-par values (see LastParPx (669)) for issues traded in Yield, Spread or Discount.",
        "enumeration": null,
        "name": "AvgPx",
        "section": null,
        "tag": 6,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
            "standard": "XML",
          },
          "name": "Price",
        },
        "value": 0,
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
        "enumeration": null,
        "name": "ClOrdID",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 11,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "1352157895032",
      },
      Field {
        "category": null,
        "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "CumQty",
        "section": null,
        "tag": 14,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 0,
      },
      Field {
        "category": null,
        "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
        "enumeration": null,
        "name": "ExecID",
        "section": null,
        "tag": 17,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "3",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 20,
        "type": null,
        "value": "0",
      },
      Field {
        "category": null,
        "description": "Price of this (last) fill.",
        "enumeration": null,
        "name": "LastPx",
        "section": null,
        "tag": 31,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
            "standard": "XML",
          },
          "name": "Price",
        },
        "value": 0,
      },
      Field {
        "category": null,
        "description": "Quantity (e.g. shares) bought/sold on this (last) fill.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "LastQty",
        "section": null,
        "tag": 32,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 0,
      },
      Field {
        "category": null,
        "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
        "enumeration": null,
        "name": "OrderID",
        "section": null,
        "tag": 37,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "3",
      },
      Field {
        "category": null,
        "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "OrderQty",
        "section": null,
        "tag": 38,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 10000,
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "OrdStatusCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "New",
          "group": undefined,
          "id": "39001",
          "name": "New",
          "sort": 1,
          "tag": 39,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "0",
        },
        "name": "OrdStatus",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 39,
        "type": null,
        "value": "0",
      },
      Field {
        "category": null,
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "SideCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Buy

For Securities Financing indicates the receipt of securities or collateral.",
          "group": undefined,
          "id": "54001",
          "name": "Buy",
          "sort": 1,
          "tag": 54,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "254",
          "value": "1",
        },
        "name": "Side",
        "section": null,
        "tag": 54,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
        "enumeration": null,
        "name": "Symbol",
        "section": null,
        "tag": 55,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "ORCL",
      },
      Field {
        "category": null,
        "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
        "enumeration": null,
        "name": "ExecType",
        "section": null,
        "tag": 150,
        "type": null,
        "value": "2",
      },
      Field {
        "category": null,
        "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "LeavesQty",
        "section": null,
        "tag": 151,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 0,
      },
      Field {
        "category": null,
        "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
        "enumeration": null,
        "name": "CheckSum",
        "section": null,
        "tag": 10,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "049",
      },
    ],
    "description": "ExecutionReport",
    "fixVersion": "FIX.4.1",
    "messageSequence": 5,
    "messageString": "8=FIX.4.19=13935=834=549=EXEC52=20121105-23:24:5556=BANZAI6=011=135215789503214=017=320=031=032=037=338=1000039=054=155=ORCL150=2151=010=049",
    "messageType": "8",
    "messageTypeDescription": "The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
    "structure": [
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Hdr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message header

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
              "id": "8",
              "name": "BeginString",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be second field in message)",
              "id": "9",
              "name": "BodyLength",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be third field in message)",
              "id": "35",
              "name": "MsgType",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "49",
              "name": "SenderCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "56",
              "name": "TargetCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "34",
              "name": "MsgSeqNum",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "52",
              "name": "SendingTime",
              "presence": "required",
            },
          ],
          "id": "1024",
          "name": "StandardHeader",
          "type": "component",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "id": "1024",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "CumQty",
          "added": "FIX.2.7",
          "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
          "id": "14",
          "name": "CumQty",
          "type": "Qty",
        },
        "id": "14",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "ExecID",
          "added": "FIX.2.7",
          "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
          "id": "17",
          "name": "ExecID",
          "type": "String",
          "updated": "FIX.5.0SP1",
          "updatedEP": "95",
        },
        "id": "17",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "OrdID",
          "added": "FIX.2.7",
          "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
          "id": "37",
          "name": "OrderID",
          "type": "String",
        },
        "id": "37",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "OrdStat",
          "added": "FIX.2.7",
          "baseCategory": "SingleGeneralOrderHandling",
          "baseCategoryAbbrName": "Stat",
          "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
          "id": "39",
          "name": "OrdStatus",
          "type": "OrdStatusCodeSet",
        },
        "id": "39",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Side",
          "added": "FIX.2.7",
          "description": "Side of order (see Volume : "Glossary" for value definitions)",
          "id": "54",
          "name": "Side",
          "type": "SideCodeSet",
        },
        "id": "54",
        "presence": "required",
      },
      {
        "added": "FIX.4.1",
        "data": {
          "abbrName": "ExecTyp",
          "added": "FIX.4.1",
          "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
          "id": "150",
          "name": "ExecType",
          "type": "ExecTypeCodeSet",
          "updated": "FIX.5.0SP2",
          "updatedEP": "131",
        },
        "id": "150",
        "presence": "required",
      },
      {
        "added": "FIX.4.1",
        "data": {
          "abbrName": "LeavesQty",
          "added": "FIX.4.1",
          "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
          "id": "151",
          "name": "LeavesQty",
          "type": "Qty",
        },
        "id": "151",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Trlr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message trailer

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, always last field in message)",
              "id": "10",
              "name": "CheckSum",
              "presence": "required",
            },
          ],
          "id": "1025",
          "name": "StandardTrailer",
          "type": "component",
        },
        "id": "1025",
        "presence": "required",
      },
      {
        "added": "FIX.4.3",
        "data": {
          "abbrName": "Instrmt",
          "added": "FIX.4.3",
          "category": "Common",
          "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
          "id": "1003",
          "name": "Instrument",
          "type": "component",
        },
        "id": "1003",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
    ],
  },
  Message {
    "bodyLengthExpected": 153,
    "bodyLengthValid": true,
    "bodyLengthValue": 153,
    "checksumExpected": "220",
    "checksumValid": true,
    "checksumValue": "220",
    "data": [
      Field {
        "category": null,
        "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
        "enumeration": null,
        "name": "BeginString",
        "section": null,
        "tag": 8,
        "type": null,
        "value": "FIX.4.1",
      },
      Field {
        "category": null,
        "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
        "enumeration": null,
        "name": "BodyLength",
        "section": null,
        "tag": 9,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the length in bytes. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:nonNegativeInteger",
            "builtin": "false",
            "description": "int field representing the length in bytes. Value must be positive.",
            "standard": "XML",
          },
          "name": "Length",
        },
        "value": 153,
      },
      Field {
        "category": null,
        "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
        "enumeration": EnumType {
          "added": undefined,
          "addedEP": undefined,
          "codeSet": "MsgTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "ExecutionReport

The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
          "group": undefined,
          "id": "35009",
          "name": "ExecutionReport",
          "sort": 9,
          "tag": 35,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "8",
        },
        "name": "MsgType",
        "section": null,
        "tag": 35,
        "type": null,
        "value": "8",
      },
      Field {
        "category": null,
        "description": "Integer message sequence number.",
        "enumeration": null,
        "name": "MsgSeqNum",
        "section": null,
        "tag": 34,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing a message sequence number. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:positiveInteger",
            "builtin": "false",
            "description": "int field representing a message sequence number. Value must be positive.",
            "standard": "XML",
          },
          "name": "SeqNum",
        },
        "value": 6,
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm sending message.",
        "enumeration": null,
        "name": "SenderCompID",
        "section": null,
        "tag": 49,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "EXEC",
      },
      Field {
        "category": null,
        "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
        "enumeration": null,
        "name": "SendingTime",
        "section": null,
        "tag": 52,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20121105-23:24:55",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify receiving firm.",
        "enumeration": null,
        "name": "TargetCompID",
        "section": null,
        "tag": 56,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "BANZAI",
      },
      Field {
        "category": null,
        "description": "Calculated average price of all fills on this order.

For Fixed Income trades AvgPx is always expressed as percent-of-par, regardless of the PriceType (423) of LastPx (31). I.e., AvgPx will contain an average of percent-of-par values (see LastParPx (669)) for issues traded in Yield, Spread or Discount.",
        "enumeration": null,
        "name": "AvgPx",
        "section": null,
        "tag": 6,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
            "standard": "XML",
          },
          "name": "Price",
        },
        "value": 12.3,
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
        "enumeration": null,
        "name": "ClOrdID",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 11,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "1352157895032",
      },
      Field {
        "category": null,
        "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "CumQty",
        "section": null,
        "tag": 14,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 10000,
      },
      Field {
        "category": null,
        "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
        "enumeration": null,
        "name": "ExecID",
        "section": null,
        "tag": 17,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "4",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 20,
        "type": null,
        "value": "0",
      },
      Field {
        "category": null,
        "description": "Price of this (last) fill.",
        "enumeration": null,
        "name": "LastPx",
        "section": null,
        "tag": 31,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
            "standard": "XML",
          },
          "name": "Price",
        },
        "value": 12.3,
      },
      Field {
        "category": null,
        "description": "Quantity (e.g. shares) bought/sold on this (last) fill.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "LastQty",
        "section": null,
        "tag": 32,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 10000,
      },
      Field {
        "category": null,
        "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
        "enumeration": null,
        "name": "OrderID",
        "section": null,
        "tag": 37,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "4",
      },
      Field {
        "category": null,
        "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "OrderQty",
        "section": null,
        "tag": 38,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 10000,
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "OrdStatusCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Filled",
          "group": undefined,
          "id": "39003",
          "name": "Filled",
          "sort": 3,
          "tag": 39,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "2",
        },
        "name": "OrdStatus",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 39,
        "type": null,
        "value": "2",
      },
      Field {
        "category": null,
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "SideCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Buy

For Securities Financing indicates the receipt of securities or collateral.",
          "group": undefined,
          "id": "54001",
          "name": "Buy",
          "sort": 1,
          "tag": 54,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "254",
          "value": "1",
        },
        "name": "Side",
        "section": null,
        "tag": 54,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
        "enumeration": null,
        "name": "Symbol",
        "section": null,
        "tag": 55,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "ORCL",
      },
      Field {
        "category": null,
        "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
        "enumeration": null,
        "name": "ExecType",
        "section": null,
        "tag": 150,
        "type": null,
        "value": "2",
      },
      Field {
        "category": null,
        "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "LeavesQty",
        "section": null,
        "tag": 151,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 0,
      },
      Field {
        "category": null,
        "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
        "enumeration": null,
        "name": "CheckSum",
        "section": null,
        "tag": 10,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "220",
      },
    ],
    "description": "ExecutionReport",
    "fixVersion": "FIX.4.1",
    "messageSequence": 6,
    "messageString": "8=FIX.4.19=15335=834=649=EXEC52=20121105-23:24:5556=BANZAI6=12.311=135215789503214=1000017=420=031=12.332=1000037=438=1000039=254=155=ORCL150=2151=010=220",
    "messageType": "8",
    "messageTypeDescription": "The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
    "structure": [
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Hdr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message header

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
              "id": "8",
              "name": "BeginString",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be second field in message)",
              "id": "9",
              "name": "BodyLength",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be third field in message)",
              "id": "35",
              "name": "MsgType",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "49",
              "name": "SenderCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "56",
              "name": "TargetCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "34",
              "name": "MsgSeqNum",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "52",
              "name": "SendingTime",
              "presence": "required",
            },
          ],
          "id": "1024",
          "name": "StandardHeader",
          "type": "component",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "id": "1024",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "CumQty",
          "added": "FIX.2.7",
          "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
          "id": "14",
          "name": "CumQty",
          "type": "Qty",
        },
        "id": "14",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "ExecID",
          "added": "FIX.2.7",
          "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
          "id": "17",
          "name": "ExecID",
          "type": "String",
          "updated": "FIX.5.0SP1",
          "updatedEP": "95",
        },
        "id": "17",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "OrdID",
          "added": "FIX.2.7",
          "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
          "id": "37",
          "name": "OrderID",
          "type": "String",
        },
        "id": "37",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "OrdStat",
          "added": "FIX.2.7",
          "baseCategory": "SingleGeneralOrderHandling",
          "baseCategoryAbbrName": "Stat",
          "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
          "id": "39",
          "name": "OrdStatus",
          "type": "OrdStatusCodeSet",
        },
        "id": "39",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Side",
          "added": "FIX.2.7",
          "description": "Side of order (see Volume : "Glossary" for value definitions)",
          "id": "54",
          "name": "Side",
          "type": "SideCodeSet",
        },
        "id": "54",
        "presence": "required",
      },
      {
        "added": "FIX.4.1",
        "data": {
          "abbrName": "ExecTyp",
          "added": "FIX.4.1",
          "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
          "id": "150",
          "name": "ExecType",
          "type": "ExecTypeCodeSet",
          "updated": "FIX.5.0SP2",
          "updatedEP": "131",
        },
        "id": "150",
        "presence": "required",
      },
      {
        "added": "FIX.4.1",
        "data": {
          "abbrName": "LeavesQty",
          "added": "FIX.4.1",
          "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
          "id": "151",
          "name": "LeavesQty",
          "type": "Qty",
        },
        "id": "151",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Trlr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message trailer

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, always last field in message)",
              "id": "10",
              "name": "CheckSum",
              "presence": "required",
            },
          ],
          "id": "1025",
          "name": "StandardTrailer",
          "type": "component",
        },
        "id": "1025",
        "presence": "required",
      },
      {
        "added": "FIX.4.3",
        "data": {
          "abbrName": "Instrmt",
          "added": "FIX.4.3",
          "category": "Common",
          "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
          "id": "1003",
          "name": "Instrument",
          "type": "component",
        },
        "id": "1003",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
    ],
  },
  Message {
    "bodyLengthExpected": 108,
    "bodyLengthValid": true,
    "bodyLengthValue": 108,
    "checksumExpected": "003",
    "checksumValid": true,
    "checksumValue": "003",
    "data": [
      Field {
        "category": null,
        "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
        "enumeration": null,
        "name": "BeginString",
        "section": null,
        "tag": 8,
        "type": null,
        "value": "FIX.4.1",
      },
      Field {
        "category": null,
        "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
        "enumeration": null,
        "name": "BodyLength",
        "section": null,
        "tag": 9,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the length in bytes. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:nonNegativeInteger",
            "builtin": "false",
            "description": "int field representing the length in bytes. Value must be positive.",
            "standard": "XML",
          },
          "name": "Length",
        },
        "value": 108,
      },
      Field {
        "category": null,
        "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
        "enumeration": EnumType {
          "added": undefined,
          "addedEP": undefined,
          "codeSet": "MsgTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "NewOrderSingle

The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
          "group": undefined,
          "id": "35014",
          "name": "NewOrderSingle",
          "sort": 14,
          "tag": 35,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "D",
        },
        "name": "MsgType",
        "section": null,
        "tag": 35,
        "type": null,
        "value": "D",
      },
      Field {
        "category": null,
        "description": "Integer message sequence number.",
        "enumeration": null,
        "name": "MsgSeqNum",
        "section": null,
        "tag": 34,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing a message sequence number. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:positiveInteger",
            "builtin": "false",
            "description": "int field representing a message sequence number. Value must be positive.",
            "standard": "XML",
          },
          "name": "SeqNum",
        },
        "value": 5,
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm sending message.",
        "enumeration": null,
        "name": "SenderCompID",
        "section": null,
        "tag": 49,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "BANZAI",
      },
      Field {
        "category": null,
        "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
        "enumeration": null,
        "name": "SendingTime",
        "section": null,
        "tag": 52,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20121105-23:25:12",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify receiving firm.",
        "enumeration": null,
        "name": "TargetCompID",
        "section": null,
        "tag": 56,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "EXEC",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
        "enumeration": null,
        "name": "ClOrdID",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 11,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "1352157912357",
      },
      Field {
        "category": null,
        "description": "Instructions for order handling on Broker trading floor",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "HandlInstCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Automated execution order, private, no Broker intervention",
          "group": undefined,
          "id": "21001",
          "name": "AutomatedExecutionNoIntervention",
          "sort": 1,
          "tag": 21,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "1",
        },
        "name": "HandlInst",
        "section": null,
        "tag": 21,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "OrderQty",
        "section": null,
        "tag": 38,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 10000,
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "OrdTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Limit",
          "group": undefined,
          "id": "40002",
          "name": "Limit",
          "sort": 2,
          "tag": 40,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "2",
        },
        "name": "OrdType",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 40,
        "type": null,
        "value": "2",
      },
      Field {
        "category": null,
        "description": "Price per unit of quantity (e.g. per share)",
        "enumeration": null,
        "name": "Price",
        "section": null,
        "tag": 44,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
            "standard": "XML",
          },
          "name": "Price",
        },
        "value": 10,
      },
      Field {
        "category": null,
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "SideCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Buy

For Securities Financing indicates the receipt of securities or collateral.",
          "group": undefined,
          "id": "54001",
          "name": "Buy",
          "sort": 1,
          "tag": 54,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "254",
          "value": "1",
        },
        "name": "Side",
        "section": null,
        "tag": 54,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
        "enumeration": null,
        "name": "Symbol",
        "section": null,
        "tag": 55,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "SPY",
      },
      Field {
        "category": null,
        "description": "Specifies how long the order remains in effect. Absence of this field is interpreted as DAY. NOTE not applicable to CIV Orders.",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "TimeInForceCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Day (or session)

A buy or sell order that, if not executed expires at the end of the trading day on which it was entered.",
          "group": undefined,
          "id": "59001",
          "name": "Day",
          "sort": 1,
          "tag": 59,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "253",
          "value": "0",
        },
        "name": "TimeInForce",
        "section": null,
        "tag": 59,
        "type": null,
        "value": "0",
      },
      Field {
        "category": null,
        "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
        "enumeration": null,
        "name": "CheckSum",
        "section": null,
        "tag": 10,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "003",
      },
    ],
    "description": "NewOrderSingle",
    "fixVersion": "FIX.4.1",
    "messageSequence": 5,
    "messageString": "8=FIX.4.19=10835=D34=549=BANZAI52=20121105-23:25:1256=EXEC11=135215791235721=138=1000040=244=1054=155=SPY59=010=003",
    "messageType": "D",
    "messageTypeDescription": "The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
    "structure": [
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Hdr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message header

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
              "id": "8",
              "name": "BeginString",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be second field in message)",
              "id": "9",
              "name": "BodyLength",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be third field in message)",
              "id": "35",
              "name": "MsgType",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "49",
              "name": "SenderCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "56",
              "name": "TargetCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "34",
              "name": "MsgSeqNum",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "52",
              "name": "SendingTime",
              "presence": "required",
            },
          ],
          "id": "1024",
          "name": "StandardHeader",
          "type": "component",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "id": "1024",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "ClOrdID",
          "added": "FIX.2.7",
          "baseCategory": "SingleGeneralOrderHandling",
          "baseCategoryAbbrName": "ID",
          "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
          "id": "11",
          "name": "ClOrdID",
          "type": "String",
          "updated": "FIX.Latest",
          "updatedEP": "282",
        },
        "id": "11",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "OrdTyp",
          "added": "FIX.2.7",
          "baseCategory": "SingleGeneralOrderHandling",
          "baseCategoryAbbrName": "Typ",
          "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
          "id": "40",
          "name": "OrdType",
          "type": "OrdTypeCodeSet",
        },
        "id": "40",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Side",
          "added": "FIX.2.7",
          "description": "Side of order (see Volume : "Glossary" for value definitions)",
          "id": "54",
          "name": "Side",
          "type": "SideCodeSet",
        },
        "id": "54",
        "presence": "required",
      },
      {
        "added": "FIX.4.2",
        "data": {
          "abbrName": "TxnTm",
          "added": "FIX.2.7",
          "description": "Timestamp when the business transaction represented by the message occurred.",
          "id": "60",
          "name": "TransactTime",
          "type": "UTCTimestamp",
          "updated": "FIX.5.0SP1",
          "updatedEP": "94",
        },
        "id": "60",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Trlr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message trailer

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, always last field in message)",
              "id": "10",
              "name": "CheckSum",
              "presence": "required",
            },
          ],
          "id": "1025",
          "name": "StandardTrailer",
          "type": "component",
        },
        "id": "1025",
        "presence": "required",
      },
      {
        "added": "FIX.4.3",
        "data": {
          "abbrName": "Instrmt",
          "added": "FIX.4.3",
          "category": "Common",
          "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
          "id": "1003",
          "name": "Instrument",
          "type": "component",
        },
        "id": "1003",
        "presence": "required",
      },
      {
        "added": "FIX.4.3",
        "data": {
          "abbrName": "OrdQty",
          "added": "FIX.4.3",
          "category": "Common",
          "description": "The OrderQtyData component block contains the fields commonly used for indicating the amount or quantity of an order. Note that when this component block is marked as "required" in a message either one of these three fields must be used to identify the amount: OrderQty, CashOrderQty or OrderPercent (in the case of CIV).

",
          "id": "1011",
          "name": "OrderQtyData",
          "type": "component",
        },
        "id": "1011",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "221",
      },
    ],
  },
  Message {
    "bodyLengthExpected": 138,
    "bodyLengthValid": true,
    "bodyLengthValue": 138,
    "checksumExpected": "252",
    "checksumValid": true,
    "checksumValue": "252",
    "data": [
      Field {
        "category": null,
        "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
        "enumeration": null,
        "name": "BeginString",
        "section": null,
        "tag": 8,
        "type": null,
        "value": "FIX.4.1",
      },
      Field {
        "category": null,
        "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
        "enumeration": null,
        "name": "BodyLength",
        "section": null,
        "tag": 9,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the length in bytes. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:nonNegativeInteger",
            "builtin": "false",
            "description": "int field representing the length in bytes. Value must be positive.",
            "standard": "XML",
          },
          "name": "Length",
        },
        "value": 138,
      },
      Field {
        "category": null,
        "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
        "enumeration": EnumType {
          "added": undefined,
          "addedEP": undefined,
          "codeSet": "MsgTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "ExecutionReport

The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
          "group": undefined,
          "id": "35009",
          "name": "ExecutionReport",
          "sort": 9,
          "tag": 35,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "8",
        },
        "name": "MsgType",
        "section": null,
        "tag": 35,
        "type": null,
        "value": "8",
      },
      Field {
        "category": null,
        "description": "Integer message sequence number.",
        "enumeration": null,
        "name": "MsgSeqNum",
        "section": null,
        "tag": 34,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing a message sequence number. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:positiveInteger",
            "builtin": "false",
            "description": "int field representing a message sequence number. Value must be positive.",
            "standard": "XML",
          },
          "name": "SeqNum",
        },
        "value": 7,
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm sending message.",
        "enumeration": null,
        "name": "SenderCompID",
        "section": null,
        "tag": 49,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "EXEC",
      },
      Field {
        "category": null,
        "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
        "enumeration": null,
        "name": "SendingTime",
        "section": null,
        "tag": 52,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20121105-23:25:12",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify receiving firm.",
        "enumeration": null,
        "name": "TargetCompID",
        "section": null,
        "tag": 56,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "BANZAI",
      },
      Field {
        "category": null,
        "description": "Calculated average price of all fills on this order.

For Fixed Income trades AvgPx is always expressed as percent-of-par, regardless of the PriceType (423) of LastPx (31). I.e., AvgPx will contain an average of percent-of-par values (see LastParPx (669)) for issues traded in Yield, Spread or Discount.",
        "enumeration": null,
        "name": "AvgPx",
        "section": null,
        "tag": 6,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
            "standard": "XML",
          },
          "name": "Price",
        },
        "value": 0,
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
        "enumeration": null,
        "name": "ClOrdID",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 11,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "1352157912357",
      },
      Field {
        "category": null,
        "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "CumQty",
        "section": null,
        "tag": 14,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 0,
      },
      Field {
        "category": null,
        "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
        "enumeration": null,
        "name": "ExecID",
        "section": null,
        "tag": 17,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "5",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 20,
        "type": null,
        "value": "0",
      },
      Field {
        "category": null,
        "description": "Price of this (last) fill.",
        "enumeration": null,
        "name": "LastPx",
        "section": null,
        "tag": 31,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
            "standard": "XML",
          },
          "name": "Price",
        },
        "value": 0,
      },
      Field {
        "category": null,
        "description": "Quantity (e.g. shares) bought/sold on this (last) fill.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "LastQty",
        "section": null,
        "tag": 32,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 0,
      },
      Field {
        "category": null,
        "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
        "enumeration": null,
        "name": "OrderID",
        "section": null,
        "tag": 37,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "5",
      },
      Field {
        "category": null,
        "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "OrderQty",
        "section": null,
        "tag": 38,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 10000,
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "OrdStatusCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "New",
          "group": undefined,
          "id": "39001",
          "name": "New",
          "sort": 1,
          "tag": 39,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "0",
        },
        "name": "OrdStatus",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 39,
        "type": null,
        "value": "0",
      },
      Field {
        "category": null,
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "SideCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Buy

For Securities Financing indicates the receipt of securities or collateral.",
          "group": undefined,
          "id": "54001",
          "name": "Buy",
          "sort": 1,
          "tag": 54,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "254",
          "value": "1",
        },
        "name": "Side",
        "section": null,
        "tag": 54,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
        "enumeration": null,
        "name": "Symbol",
        "section": null,
        "tag": 55,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "SPY",
      },
      Field {
        "category": null,
        "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
        "enumeration": null,
        "name": "ExecType",
        "section": null,
        "tag": 150,
        "type": null,
        "value": "2",
      },
      Field {
        "category": null,
        "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "LeavesQty",
        "section": null,
        "tag": 151,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 0,
      },
      Field {
        "category": null,
        "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
        "enumeration": null,
        "name": "CheckSum",
        "section": null,
        "tag": 10,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "252",
      },
    ],
    "description": "ExecutionReport",
    "fixVersion": "FIX.4.1",
    "messageSequence": 7,
    "messageString": "8=FIX.4.19=13835=834=749=EXEC52=20121105-23:25:1256=BANZAI6=011=135215791235714=017=520=031=032=037=538=1000039=054=155=SPY150=2151=010=252",
    "messageType": "8",
    "messageTypeDescription": "The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
    "structure": [
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Hdr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message header

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
              "id": "8",
              "name": "BeginString",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be second field in message)",
              "id": "9",
              "name": "BodyLength",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be third field in message)",
              "id": "35",
              "name": "MsgType",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "49",
              "name": "SenderCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "56",
              "name": "TargetCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "34",
              "name": "MsgSeqNum",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "52",
              "name": "SendingTime",
              "presence": "required",
            },
          ],
          "id": "1024",
          "name": "StandardHeader",
          "type": "component",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "id": "1024",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "CumQty",
          "added": "FIX.2.7",
          "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
          "id": "14",
          "name": "CumQty",
          "type": "Qty",
        },
        "id": "14",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "ExecID",
          "added": "FIX.2.7",
          "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
          "id": "17",
          "name": "ExecID",
          "type": "String",
          "updated": "FIX.5.0SP1",
          "updatedEP": "95",
        },
        "id": "17",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "OrdID",
          "added": "FIX.2.7",
          "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
          "id": "37",
          "name": "OrderID",
          "type": "String",
        },
        "id": "37",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "OrdStat",
          "added": "FIX.2.7",
          "baseCategory": "SingleGeneralOrderHandling",
          "baseCategoryAbbrName": "Stat",
          "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
          "id": "39",
          "name": "OrdStatus",
          "type": "OrdStatusCodeSet",
        },
        "id": "39",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Side",
          "added": "FIX.2.7",
          "description": "Side of order (see Volume : "Glossary" for value definitions)",
          "id": "54",
          "name": "Side",
          "type": "SideCodeSet",
        },
        "id": "54",
        "presence": "required",
      },
      {
        "added": "FIX.4.1",
        "data": {
          "abbrName": "ExecTyp",
          "added": "FIX.4.1",
          "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
          "id": "150",
          "name": "ExecType",
          "type": "ExecTypeCodeSet",
          "updated": "FIX.5.0SP2",
          "updatedEP": "131",
        },
        "id": "150",
        "presence": "required",
      },
      {
        "added": "FIX.4.1",
        "data": {
          "abbrName": "LeavesQty",
          "added": "FIX.4.1",
          "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
          "id": "151",
          "name": "LeavesQty",
          "type": "Qty",
        },
        "id": "151",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Trlr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message trailer

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, always last field in message)",
              "id": "10",
              "name": "CheckSum",
              "presence": "required",
            },
          ],
          "id": "1025",
          "name": "StandardTrailer",
          "type": "component",
        },
        "id": "1025",
        "presence": "required",
      },
      {
        "added": "FIX.4.3",
        "data": {
          "abbrName": "Instrmt",
          "added": "FIX.4.3",
          "category": "Common",
          "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
          "id": "1003",
          "name": "Instrument",
          "type": "component",
        },
        "id": "1003",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
    ],
  },
  Message {
    "bodyLengthExpected": 104,
    "bodyLengthValid": true,
    "bodyLengthValue": 104,
    "checksumExpected": "198",
    "checksumValid": true,
    "checksumValue": "198",
    "data": [
      Field {
        "category": null,
        "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
        "enumeration": null,
        "name": "BeginString",
        "section": null,
        "tag": 8,
        "type": null,
        "value": "FIX.4.1",
      },
      Field {
        "category": null,
        "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
        "enumeration": null,
        "name": "BodyLength",
        "section": null,
        "tag": 9,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the length in bytes. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:nonNegativeInteger",
            "builtin": "false",
            "description": "int field representing the length in bytes. Value must be positive.",
            "standard": "XML",
          },
          "name": "Length",
        },
        "value": 104,
      },
      Field {
        "category": null,
        "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
        "enumeration": EnumType {
          "added": undefined,
          "addedEP": undefined,
          "codeSet": "MsgTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "OrderCancelRequest

The order cancel request message requests the cancellation of all of the remaining quantity of an existing order. Note that the Order Cancel/Replace Request should be used to partially cancel (reduce) an order).",
          "group": undefined,
          "id": "35016",
          "name": "OrderCancelRequest",
          "sort": 16,
          "tag": 35,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "F",
        },
        "name": "MsgType",
        "section": null,
        "tag": 35,
        "type": null,
        "value": "F",
      },
      Field {
        "category": null,
        "description": "Integer message sequence number.",
        "enumeration": null,
        "name": "MsgSeqNum",
        "section": null,
        "tag": 34,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing a message sequence number. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:positiveInteger",
            "builtin": "false",
            "description": "int field representing a message sequence number. Value must be positive.",
            "standard": "XML",
          },
          "name": "SeqNum",
        },
        "value": 6,
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm sending message.",
        "enumeration": null,
        "name": "SenderCompID",
        "section": null,
        "tag": 49,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "BANZAI",
      },
      Field {
        "category": null,
        "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
        "enumeration": null,
        "name": "SendingTime",
        "section": null,
        "tag": 52,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20121105-23:25:16",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify receiving firm.",
        "enumeration": null,
        "name": "TargetCompID",
        "section": null,
        "tag": 56,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "EXEC",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
        "enumeration": null,
        "name": "ClOrdID",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 11,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "1352157916437",
      },
      Field {
        "category": null,
        "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "OrderQty",
        "section": null,
        "tag": 38,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 10000,
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "ClOrdID (11) of the previous order (NOT the initial order of the day) as assigned by the institution, used to identify the previous order in cancel and cancel/replace requests.",
        "enumeration": null,
        "name": "OrigClOrdID",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 41,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "1352157912357",
      },
      Field {
        "category": null,
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "SideCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Buy

For Securities Financing indicates the receipt of securities or collateral.",
          "group": undefined,
          "id": "54001",
          "name": "Buy",
          "sort": 1,
          "tag": 54,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "254",
          "value": "1",
        },
        "name": "Side",
        "section": null,
        "tag": 54,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
        "enumeration": null,
        "name": "Symbol",
        "section": null,
        "tag": 55,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "SPY",
      },
      Field {
        "category": null,
        "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
        "enumeration": null,
        "name": "CheckSum",
        "section": null,
        "tag": 10,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "198",
      },
    ],
    "description": "OrderCancelRequest",
    "fixVersion": "FIX.4.1",
    "messageSequence": 6,
    "messageString": "8=FIX.4.19=10435=F34=649=BANZAI52=20121105-23:25:1656=EXEC11=135215791643738=1000041=135215791235754=155=SPY10=198",
    "messageType": "F",
    "messageTypeDescription": "The order cancel request message requests the cancellation of all of the remaining quantity of an existing order. Note that the Order Cancel/Replace Request should be used to partially cancel (reduce) an order).",
    "structure": [
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Hdr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message header

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
              "id": "8",
              "name": "BeginString",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be second field in message)",
              "id": "9",
              "name": "BodyLength",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be third field in message)",
              "id": "35",
              "name": "MsgType",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "49",
              "name": "SenderCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "56",
              "name": "TargetCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "34",
              "name": "MsgSeqNum",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "52",
              "name": "SendingTime",
              "presence": "required",
            },
          ],
          "id": "1024",
          "name": "StandardHeader",
          "type": "component",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "id": "1024",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "ClOrdID",
          "added": "FIX.2.7",
          "baseCategory": "SingleGeneralOrderHandling",
          "baseCategoryAbbrName": "ID",
          "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
          "id": "11",
          "name": "ClOrdID",
          "type": "String",
          "updated": "FIX.Latest",
          "updatedEP": "282",
        },
        "id": "11",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Side",
          "added": "FIX.2.7",
          "description": "Side of order (see Volume : "Glossary" for value definitions)",
          "id": "54",
          "name": "Side",
          "type": "SideCodeSet",
        },
        "id": "54",
        "presence": "required",
      },
      {
        "added": "FIX.4.2",
        "data": {
          "abbrName": "TxnTm",
          "added": "FIX.2.7",
          "description": "Timestamp when the business transaction represented by the message occurred.",
          "id": "60",
          "name": "TransactTime",
          "type": "UTCTimestamp",
          "updated": "FIX.5.0SP1",
          "updatedEP": "94",
        },
        "id": "60",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Trlr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message trailer

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, always last field in message)",
              "id": "10",
              "name": "CheckSum",
              "presence": "required",
            },
          ],
          "id": "1025",
          "name": "StandardTrailer",
          "type": "component",
        },
        "id": "1025",
        "presence": "required",
      },
      {
        "added": "FIX.4.3",
        "data": {
          "abbrName": "Instrmt",
          "added": "FIX.4.3",
          "category": "Common",
          "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
          "id": "1003",
          "name": "Instrument",
          "type": "component",
        },
        "id": "1003",
        "presence": "required",
      },
    ],
  },
  Message {
    "bodyLengthExpected": 82,
    "bodyLengthValid": true,
    "bodyLengthValue": 82,
    "checksumExpected": "000",
    "checksumValid": true,
    "checksumValue": "000",
    "data": [
      Field {
        "category": null,
        "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
        "enumeration": null,
        "name": "BeginString",
        "section": null,
        "tag": 8,
        "type": null,
        "value": "FIX.4.1",
      },
      Field {
        "category": null,
        "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
        "enumeration": null,
        "name": "BodyLength",
        "section": null,
        "tag": 9,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the length in bytes. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:nonNegativeInteger",
            "builtin": "false",
            "description": "int field representing the length in bytes. Value must be positive.",
            "standard": "XML",
          },
          "name": "Length",
        },
        "value": 82,
      },
      Field {
        "category": null,
        "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
        "enumeration": EnumType {
          "added": undefined,
          "addedEP": undefined,
          "codeSet": "MsgTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Reject

The reject message should be issued when a message is received but cannot be properly processed due to a session-level rule violation. An example of when a reject may be appropriate would be the receipt of a message with invalid basic data which successfully passes de-encryption, CheckSum and BodyLength checks.",
          "group": undefined,
          "id": "35004",
          "name": "Reject",
          "sort": 4,
          "tag": 35,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "3",
        },
        "name": "MsgType",
        "section": null,
        "tag": 35,
        "type": null,
        "value": "3",
      },
      Field {
        "category": null,
        "description": "Integer message sequence number.",
        "enumeration": null,
        "name": "MsgSeqNum",
        "section": null,
        "tag": 34,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing a message sequence number. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:positiveInteger",
            "builtin": "false",
            "description": "int field representing a message sequence number. Value must be positive.",
            "standard": "XML",
          },
          "name": "SeqNum",
        },
        "value": 8,
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm sending message.",
        "enumeration": null,
        "name": "SenderCompID",
        "section": null,
        "tag": 49,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "EXEC",
      },
      Field {
        "category": null,
        "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
        "enumeration": null,
        "name": "SendingTime",
        "section": null,
        "tag": 52,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20121105-23:25:16",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify receiving firm.",
        "enumeration": null,
        "name": "TargetCompID",
        "section": null,
        "tag": 56,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "BANZAI",
      },
      Field {
        "category": null,
        "description": "Reference message sequence number",
        "enumeration": null,
        "name": "RefSeqNum",
        "section": null,
        "tag": 45,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing a message sequence number. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:positiveInteger",
            "builtin": "false",
            "description": "int field representing a message sequence number. Value must be positive.",
            "standard": "XML",
          },
          "name": "SeqNum",
        },
        "value": 6,
      },
      Field {
        "category": null,
        "description": "Free format text string

(Note: this field does not have a specified maximum length)",
        "enumeration": null,
        "name": "Text",
        "section": null,
        "tag": 58,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "Unsupported message type",
      },
      Field {
        "category": null,
        "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
        "enumeration": null,
        "name": "CheckSum",
        "section": null,
        "tag": 10,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "000",
      },
    ],
    "description": "Reject",
    "fixVersion": "FIX.4.1",
    "messageSequence": 8,
    "messageString": "8=FIX.4.19=8235=334=849=EXEC52=20121105-23:25:1656=BANZAI45=658=Unsupported message type10=000",
    "messageType": "3",
    "messageTypeDescription": "The reject message should be issued when a message is received but cannot be properly processed due to a session-level rule violation. An example of when a reject may be appropriate would be the receipt of a message with invalid basic data which successfully passes de-encryption, CheckSum and BodyLength checks.",
    "structure": [
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Hdr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message header

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
              "id": "8",
              "name": "BeginString",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be second field in message)",
              "id": "9",
              "name": "BodyLength",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be third field in message)",
              "id": "35",
              "name": "MsgType",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "49",
              "name": "SenderCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "56",
              "name": "TargetCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "34",
              "name": "MsgSeqNum",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "52",
              "name": "SendingTime",
              "presence": "required",
            },
          ],
          "id": "1024",
          "name": "StandardHeader",
          "type": "component",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "id": "1024",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "RefSeqNum",
          "added": "FIX.2.7",
          "description": "Reference message sequence number",
          "id": "45",
          "name": "RefSeqNum",
          "type": "SeqNum",
        },
        "id": "45",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Trlr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message trailer

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, always last field in message)",
              "id": "10",
              "name": "CheckSum",
              "presence": "required",
            },
          ],
          "id": "1025",
          "name": "StandardTrailer",
          "type": "component",
        },
        "id": "1025",
        "presence": "required",
      },
    ],
  },
  Message {
    "bodyLengthExpected": 104,
    "bodyLengthValid": true,
    "bodyLengthValue": 104,
    "checksumExpected": "197",
    "checksumValid": true,
    "checksumValue": "197",
    "data": [
      Field {
        "category": null,
        "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
        "enumeration": null,
        "name": "BeginString",
        "section": null,
        "tag": 8,
        "type": null,
        "value": "FIX.4.1",
      },
      Field {
        "category": null,
        "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
        "enumeration": null,
        "name": "BodyLength",
        "section": null,
        "tag": 9,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the length in bytes. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:nonNegativeInteger",
            "builtin": "false",
            "description": "int field representing the length in bytes. Value must be positive.",
            "standard": "XML",
          },
          "name": "Length",
        },
        "value": 104,
      },
      Field {
        "category": null,
        "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
        "enumeration": EnumType {
          "added": undefined,
          "addedEP": undefined,
          "codeSet": "MsgTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "OrderCancelRequest

The order cancel request message requests the cancellation of all of the remaining quantity of an existing order. Note that the Order Cancel/Replace Request should be used to partially cancel (reduce) an order).",
          "group": undefined,
          "id": "35016",
          "name": "OrderCancelRequest",
          "sort": 16,
          "tag": 35,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "F",
        },
        "name": "MsgType",
        "section": null,
        "tag": 35,
        "type": null,
        "value": "F",
      },
      Field {
        "category": null,
        "description": "Integer message sequence number.",
        "enumeration": null,
        "name": "MsgSeqNum",
        "section": null,
        "tag": 34,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing a message sequence number. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:positiveInteger",
            "builtin": "false",
            "description": "int field representing a message sequence number. Value must be positive.",
            "standard": "XML",
          },
          "name": "SeqNum",
        },
        "value": 7,
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm sending message.",
        "enumeration": null,
        "name": "SenderCompID",
        "section": null,
        "tag": 49,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "BANZAI",
      },
      Field {
        "category": null,
        "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
        "enumeration": null,
        "name": "SendingTime",
        "section": null,
        "tag": 52,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20121105-23:25:25",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify receiving firm.",
        "enumeration": null,
        "name": "TargetCompID",
        "section": null,
        "tag": 56,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "EXEC",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
        "enumeration": null,
        "name": "ClOrdID",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 11,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "1352157925309",
      },
      Field {
        "category": null,
        "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "OrderQty",
        "section": null,
        "tag": 38,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 10000,
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "ClOrdID (11) of the previous order (NOT the initial order of the day) as assigned by the institution, used to identify the previous order in cancel and cancel/replace requests.",
        "enumeration": null,
        "name": "OrigClOrdID",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 41,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "1352157912357",
      },
      Field {
        "category": null,
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "SideCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Buy

For Securities Financing indicates the receipt of securities or collateral.",
          "group": undefined,
          "id": "54001",
          "name": "Buy",
          "sort": 1,
          "tag": 54,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "254",
          "value": "1",
        },
        "name": "Side",
        "section": null,
        "tag": 54,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
        "enumeration": null,
        "name": "Symbol",
        "section": null,
        "tag": 55,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "SPY",
      },
      Field {
        "category": null,
        "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
        "enumeration": null,
        "name": "CheckSum",
        "section": null,
        "tag": 10,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "197",
      },
    ],
    "description": "OrderCancelRequest",
    "fixVersion": "FIX.4.1",
    "messageSequence": 7,
    "messageString": "8=FIX.4.19=10435=F34=749=BANZAI52=20121105-23:25:2556=EXEC11=135215792530938=1000041=135215791235754=155=SPY10=197",
    "messageType": "F",
    "messageTypeDescription": "The order cancel request message requests the cancellation of all of the remaining quantity of an existing order. Note that the Order Cancel/Replace Request should be used to partially cancel (reduce) an order).",
    "structure": [
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Hdr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message header

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
              "id": "8",
              "name": "BeginString",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be second field in message)",
              "id": "9",
              "name": "BodyLength",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be third field in message)",
              "id": "35",
              "name": "MsgType",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "49",
              "name": "SenderCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "56",
              "name": "TargetCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "34",
              "name": "MsgSeqNum",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "52",
              "name": "SendingTime",
              "presence": "required",
            },
          ],
          "id": "1024",
          "name": "StandardHeader",
          "type": "component",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "id": "1024",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "ClOrdID",
          "added": "FIX.2.7",
          "baseCategory": "SingleGeneralOrderHandling",
          "baseCategoryAbbrName": "ID",
          "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
          "id": "11",
          "name": "ClOrdID",
          "type": "String",
          "updated": "FIX.Latest",
          "updatedEP": "282",
        },
        "id": "11",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Side",
          "added": "FIX.2.7",
          "description": "Side of order (see Volume : "Glossary" for value definitions)",
          "id": "54",
          "name": "Side",
          "type": "SideCodeSet",
        },
        "id": "54",
        "presence": "required",
      },
      {
        "added": "FIX.4.2",
        "data": {
          "abbrName": "TxnTm",
          "added": "FIX.2.7",
          "description": "Timestamp when the business transaction represented by the message occurred.",
          "id": "60",
          "name": "TransactTime",
          "type": "UTCTimestamp",
          "updated": "FIX.5.0SP1",
          "updatedEP": "94",
        },
        "id": "60",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Trlr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message trailer

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, always last field in message)",
              "id": "10",
              "name": "CheckSum",
              "presence": "required",
            },
          ],
          "id": "1025",
          "name": "StandardTrailer",
          "type": "component",
        },
        "id": "1025",
        "presence": "required",
      },
      {
        "added": "FIX.4.3",
        "data": {
          "abbrName": "Instrmt",
          "added": "FIX.4.3",
          "category": "Common",
          "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
          "id": "1003",
          "name": "Instrument",
          "type": "component",
        },
        "id": "1003",
        "presence": "required",
      },
    ],
  },
  Message {
    "bodyLengthExpected": 82,
    "bodyLengthValid": true,
    "bodyLengthValue": 82,
    "checksumExpected": "002",
    "checksumValid": true,
    "checksumValue": "002",
    "data": [
      Field {
        "category": null,
        "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
        "enumeration": null,
        "name": "BeginString",
        "section": null,
        "tag": 8,
        "type": null,
        "value": "FIX.4.1",
      },
      Field {
        "category": null,
        "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
        "enumeration": null,
        "name": "BodyLength",
        "section": null,
        "tag": 9,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the length in bytes. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:nonNegativeInteger",
            "builtin": "false",
            "description": "int field representing the length in bytes. Value must be positive.",
            "standard": "XML",
          },
          "name": "Length",
        },
        "value": 82,
      },
      Field {
        "category": null,
        "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
        "enumeration": EnumType {
          "added": undefined,
          "addedEP": undefined,
          "codeSet": "MsgTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Reject

The reject message should be issued when a message is received but cannot be properly processed due to a session-level rule violation. An example of when a reject may be appropriate would be the receipt of a message with invalid basic data which successfully passes de-encryption, CheckSum and BodyLength checks.",
          "group": undefined,
          "id": "35004",
          "name": "Reject",
          "sort": 4,
          "tag": 35,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "3",
        },
        "name": "MsgType",
        "section": null,
        "tag": 35,
        "type": null,
        "value": "3",
      },
      Field {
        "category": null,
        "description": "Integer message sequence number.",
        "enumeration": null,
        "name": "MsgSeqNum",
        "section": null,
        "tag": 34,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing a message sequence number. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:positiveInteger",
            "builtin": "false",
            "description": "int field representing a message sequence number. Value must be positive.",
            "standard": "XML",
          },
          "name": "SeqNum",
        },
        "value": 9,
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm sending message.",
        "enumeration": null,
        "name": "SenderCompID",
        "section": null,
        "tag": 49,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "EXEC",
      },
      Field {
        "category": null,
        "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
        "enumeration": null,
        "name": "SendingTime",
        "section": null,
        "tag": 52,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20121105-23:25:25",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify receiving firm.",
        "enumeration": null,
        "name": "TargetCompID",
        "section": null,
        "tag": 56,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "BANZAI",
      },
      Field {
        "category": null,
        "description": "Reference message sequence number",
        "enumeration": null,
        "name": "RefSeqNum",
        "section": null,
        "tag": 45,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing a message sequence number. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:positiveInteger",
            "builtin": "false",
            "description": "int field representing a message sequence number. Value must be positive.",
            "standard": "XML",
          },
          "name": "SeqNum",
        },
        "value": 7,
      },
      Field {
        "category": null,
        "description": "Free format text string

(Note: this field does not have a specified maximum length)",
        "enumeration": null,
        "name": "Text",
        "section": null,
        "tag": 58,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "Unsupported message type",
      },
      Field {
        "category": null,
        "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
        "enumeration": null,
        "name": "CheckSum",
        "section": null,
        "tag": 10,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "002",
      },
    ],
    "description": "Reject",
    "fixVersion": "FIX.4.1",
    "messageSequence": 9,
    "messageString": "8=FIX.4.19=8235=334=949=EXEC52=20121105-23:25:2556=BANZAI45=758=Unsupported message type10=002",
    "messageType": "3",
    "messageTypeDescription": "The reject message should be issued when a message is received but cannot be properly processed due to a session-level rule violation. An example of when a reject may be appropriate would be the receipt of a message with invalid basic data which successfully passes de-encryption, CheckSum and BodyLength checks.",
    "structure": [
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Hdr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message header

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
              "id": "8",
              "name": "BeginString",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be second field in message)",
              "id": "9",
              "name": "BodyLength",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be third field in message)",
              "id": "35",
              "name": "MsgType",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "49",
              "name": "SenderCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "56",
              "name": "TargetCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "34",
              "name": "MsgSeqNum",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "52",
              "name": "SendingTime",
              "presence": "required",
            },
          ],
          "id": "1024",
          "name": "StandardHeader",
          "type": "component",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "id": "1024",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "RefSeqNum",
          "added": "FIX.2.7",
          "description": "Reference message sequence number",
          "id": "45",
          "name": "RefSeqNum",
          "type": "SeqNum",
        },
        "id": "45",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Trlr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message trailer

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, always last field in message)",
              "id": "10",
              "name": "CheckSum",
              "presence": "required",
            },
          ],
          "id": "1025",
          "name": "StandardTrailer",
          "type": "component",
        },
        "id": "1025",
        "presence": "required",
      },
    ],
  },
]
`;

exports[`FIXParser #getBriefDescription should generate a brief description New Order (order to be replaced) 1`] = `
[
  Message {
    "bodyLengthExpected": 158,
    "bodyLengthValid": false,
    "bodyLengthValue": 157,
    "checksumExpected": "009",
    "checksumValid": false,
    "checksumValue": "210",
    "data": [
      Field {
        "category": null,
        "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
        "enumeration": EnumType {
          "added": "FIX.Latest",
          "addedEP": "270",
          "codeSet": "BeginStringCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Session profile FIX.4.2",
          "group": undefined,
          "id": "8001",
          "name": "FIX42",
          "sort": 1,
          "tag": 8,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "FIX.4.2",
        },
        "name": "BeginString",
        "section": null,
        "tag": 8,
        "type": null,
        "value": "FIX.4.2",
      },
      Field {
        "category": null,
        "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
        "enumeration": null,
        "name": "BodyLength",
        "section": null,
        "tag": 9,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the length in bytes. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:nonNegativeInteger",
            "builtin": "false",
            "description": "int field representing the length in bytes. Value must be positive.",
            "standard": "XML",
          },
          "name": "Length",
        },
        "value": 157,
      },
      Field {
        "category": null,
        "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
        "enumeration": EnumType {
          "added": undefined,
          "addedEP": undefined,
          "codeSet": "MsgTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "NewOrderSingle

The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
          "group": undefined,
          "id": "35014",
          "name": "NewOrderSingle",
          "sort": 14,
          "tag": 35,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "D",
        },
        "name": "MsgType",
        "section": null,
        "tag": 35,
        "type": null,
        "value": "D",
      },
      Field {
        "category": null,
        "description": "Integer message sequence number.",
        "enumeration": null,
        "name": "MsgSeqNum",
        "section": null,
        "tag": 34,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing a message sequence number. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:positiveInteger",
            "builtin": "false",
            "description": "int field representing a message sequence number. Value must be positive.",
            "standard": "XML",
          },
          "name": "SeqNum",
        },
        "value": 117,
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm sending message.",
        "enumeration": null,
        "name": "SenderCompID",
        "section": null,
        "tag": 49,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "ABC_DEFG01",
      },
      Field {
        "category": null,
        "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
        "enumeration": null,
        "name": "SendingTime",
        "section": null,
        "tag": 52,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20090325-15:14:27",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify receiving firm.",
        "enumeration": null,
        "name": "TargetCompID",
        "section": null,
        "tag": 56,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "CCG",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm originating message if the message was delivered by a third party i.e. the third party firm identifier would be delivered in the SenderCompID field and the firm originating the message in this field.",
        "enumeration": null,
        "name": "OnBehalfOfCompID",
        "section": null,
        "tag": 115,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "XYZ",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
        "enumeration": null,
        "name": "ClOrdID",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 11,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "NF 0573/03252009",
      },
      Field {
        "category": null,
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "SideCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Buy

For Securities Financing indicates the receipt of securities or collateral.",
          "group": undefined,
          "id": "54001",
          "name": "Buy",
          "sort": 1,
          "tag": 54,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "254",
          "value": "1",
        },
        "name": "Side",
        "section": null,
        "tag": 54,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "OrderQty",
        "section": null,
        "tag": 38,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 1000,
      },
      Field {
        "category": null,
        "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
        "enumeration": null,
        "name": "Symbol",
        "section": null,
        "tag": 55,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "CVS",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "OrdTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Limit",
          "group": undefined,
          "id": "40002",
          "name": "Limit",
          "sort": 2,
          "tag": 40,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "2",
        },
        "name": "OrdType",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 40,
        "type": null,
        "value": "2",
      },
      Field {
        "category": null,
        "description": "Price per unit of quantity (e.g. per share)",
        "enumeration": null,
        "name": "Price",
        "section": null,
        "tag": 44,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
            "standard": "XML",
          },
          "name": "Price",
        },
        "value": 25.47,
      },
      Field {
        "category": null,
        "description": "Specifies how long the order remains in effect. Absence of this field is interpreted as DAY. NOTE not applicable to CIV Orders.",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "TimeInForceCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Day (or session)

A buy or sell order that, if not executed expires at the end of the trading day on which it was entered.",
          "group": undefined,
          "id": "59001",
          "name": "Day",
          "sort": 1,
          "tag": 59,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "253",
          "value": "0",
        },
        "name": "TimeInForce",
        "section": null,
        "tag": 59,
        "type": null,
        "value": "0",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 47,
        "type": null,
        "value": "A",
      },
      Field {
        "category": null,
        "description": "Timestamp when the business transaction represented by the message occurred.",
        "enumeration": null,
        "name": "TransactTime",
        "section": null,
        "tag": 60,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20090325-15:14:27",
      },
      Field {
        "category": null,
        "description": "Instructions for order handling on Broker trading floor",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "HandlInstCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Automated execution order, private, no Broker intervention",
          "group": undefined,
          "id": "21001",
          "name": "AutomatedExecutionNoIntervention",
          "sort": 1,
          "tag": 21,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "1",
        },
        "name": "HandlInst",
        "section": null,
        "tag": 21,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Market used to help identify a security.

Valid values:

See "Appendix 6-C"",
        "enumeration": null,
        "name": "SecurityExchange",
        "section": null,
        "tag": 207,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "false",
            "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
            "pattern": ".*",
            "standard": "XML",
          },
          "name": "Exchange",
        },
        "value": "N",
      },
      Field {
        "category": null,
        "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
        "enumeration": null,
        "name": "CheckSum",
        "section": null,
        "tag": 10,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "210",
      },
    ],
    "description": "NewOrderSingle",
    "fixVersion": "FIX.4.2",
    "messageSequence": 117,
    "messageString": "8=FIX.4.29=15735=D34=11749=ABC_DEFG0152=20090325-15:14:2756=CCG115=XYZ11=NF 0573/0325200954=138=100055=CVS40=244=25.4759=047=A60=20090325-15:14:2721=1207=N10=210",
    "messageType": "D",
    "messageTypeDescription": "The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
    "structure": [
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Hdr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message header

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
              "id": "8",
              "name": "BeginString",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be second field in message)",
              "id": "9",
              "name": "BodyLength",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be third field in message)",
              "id": "35",
              "name": "MsgType",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "49",
              "name": "SenderCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "56",
              "name": "TargetCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "34",
              "name": "MsgSeqNum",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "52",
              "name": "SendingTime",
              "presence": "required",
            },
          ],
          "id": "1024",
          "name": "StandardHeader",
          "type": "component",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "id": "1024",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "ClOrdID",
          "added": "FIX.2.7",
          "baseCategory": "SingleGeneralOrderHandling",
          "baseCategoryAbbrName": "ID",
          "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
          "id": "11",
          "name": "ClOrdID",
          "type": "String",
          "updated": "FIX.Latest",
          "updatedEP": "282",
        },
        "id": "11",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "OrdTyp",
          "added": "FIX.2.7",
          "baseCategory": "SingleGeneralOrderHandling",
          "baseCategoryAbbrName": "Typ",
          "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
          "id": "40",
          "name": "OrdType",
          "type": "OrdTypeCodeSet",
        },
        "id": "40",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Side",
          "added": "FIX.2.7",
          "description": "Side of order (see Volume : "Glossary" for value definitions)",
          "id": "54",
          "name": "Side",
          "type": "SideCodeSet",
        },
        "id": "54",
        "presence": "required",
      },
      {
        "added": "FIX.4.2",
        "data": {
          "abbrName": "TxnTm",
          "added": "FIX.2.7",
          "description": "Timestamp when the business transaction represented by the message occurred.",
          "id": "60",
          "name": "TransactTime",
          "type": "UTCTimestamp",
          "updated": "FIX.5.0SP1",
          "updatedEP": "94",
        },
        "id": "60",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Trlr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message trailer

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, always last field in message)",
              "id": "10",
              "name": "CheckSum",
              "presence": "required",
            },
          ],
          "id": "1025",
          "name": "StandardTrailer",
          "type": "component",
        },
        "id": "1025",
        "presence": "required",
      },
      {
        "added": "FIX.4.3",
        "data": {
          "abbrName": "Instrmt",
          "added": "FIX.4.3",
          "category": "Common",
          "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
          "id": "1003",
          "name": "Instrument",
          "type": "component",
        },
        "id": "1003",
        "presence": "required",
      },
      {
        "added": "FIX.4.3",
        "data": {
          "abbrName": "OrdQty",
          "added": "FIX.4.3",
          "category": "Common",
          "description": "The OrderQtyData component block contains the fields commonly used for indicating the amount or quantity of an order. Note that when this component block is marked as "required" in a message either one of these three fields must be used to identify the amount: OrderQty, CashOrderQty or OrderPercent (in the case of CIV).

",
          "id": "1011",
          "name": "OrderQtyData",
          "type": "component",
        },
        "id": "1011",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "221",
      },
    ],
  },
]
`;

exports[`FIXParser #getBriefDescription should generate a brief description New Order Single 1`] = `
[
  Message {
    "bodyLengthExpected": 146,
    "bodyLengthValid": false,
    "bodyLengthValue": 145,
    "checksumExpected": "194",
    "checksumValid": false,
    "checksumValue": "139",
    "data": [
      Field {
        "category": null,
        "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
        "enumeration": EnumType {
          "added": "FIX.Latest",
          "addedEP": "270",
          "codeSet": "BeginStringCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Session profile FIX.4.2",
          "group": undefined,
          "id": "8001",
          "name": "FIX42",
          "sort": 1,
          "tag": 8,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "FIX.4.2",
        },
        "name": "BeginString",
        "section": null,
        "tag": 8,
        "type": null,
        "value": "FIX.4.2",
      },
      Field {
        "category": null,
        "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
        "enumeration": null,
        "name": "BodyLength",
        "section": null,
        "tag": 9,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the length in bytes. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:nonNegativeInteger",
            "builtin": "false",
            "description": "int field representing the length in bytes. Value must be positive.",
            "standard": "XML",
          },
          "name": "Length",
        },
        "value": 145,
      },
      Field {
        "category": null,
        "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
        "enumeration": EnumType {
          "added": undefined,
          "addedEP": undefined,
          "codeSet": "MsgTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "NewOrderSingle

The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
          "group": undefined,
          "id": "35014",
          "name": "NewOrderSingle",
          "sort": 14,
          "tag": 35,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "D",
        },
        "name": "MsgType",
        "section": null,
        "tag": 35,
        "type": null,
        "value": "D",
      },
      Field {
        "category": null,
        "description": "Integer message sequence number.",
        "enumeration": null,
        "name": "MsgSeqNum",
        "section": null,
        "tag": 34,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing a message sequence number. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:positiveInteger",
            "builtin": "false",
            "description": "int field representing a message sequence number. Value must be positive.",
            "standard": "XML",
          },
          "name": "SeqNum",
        },
        "value": 4,
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm sending message.",
        "enumeration": null,
        "name": "SenderCompID",
        "section": null,
        "tag": 49,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "ABC_DEFG01",
      },
      Field {
        "category": null,
        "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
        "enumeration": null,
        "name": "SendingTime",
        "section": null,
        "tag": 52,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20090323-15:40:29",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify receiving firm.",
        "enumeration": null,
        "name": "TargetCompID",
        "section": null,
        "tag": 56,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "CCG",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm originating message if the message was delivered by a third party i.e. the third party firm identifier would be delivered in the SenderCompID field and the firm originating the message in this field.",
        "enumeration": null,
        "name": "OnBehalfOfCompID",
        "section": null,
        "tag": 115,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "XYZ",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
        "enumeration": null,
        "name": "ClOrdID",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 11,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "NF 0542/03232009",
      },
      Field {
        "category": null,
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "SideCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Buy

For Securities Financing indicates the receipt of securities or collateral.",
          "group": undefined,
          "id": "54001",
          "name": "Buy",
          "sort": 1,
          "tag": 54,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "254",
          "value": "1",
        },
        "name": "Side",
        "section": null,
        "tag": 54,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "OrderQty",
        "section": null,
        "tag": 38,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 100,
      },
      Field {
        "category": null,
        "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
        "enumeration": null,
        "name": "Symbol",
        "section": null,
        "tag": 55,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "CVS",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "OrdTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Market",
          "group": undefined,
          "id": "40001",
          "name": "Market",
          "sort": 1,
          "tag": 40,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "1",
        },
        "name": "OrdType",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 40,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Specifies how long the order remains in effect. Absence of this field is interpreted as DAY. NOTE not applicable to CIV Orders.",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "TimeInForceCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Day (or session)

A buy or sell order that, if not executed expires at the end of the trading day on which it was entered.",
          "group": undefined,
          "id": "59001",
          "name": "Day",
          "sort": 1,
          "tag": 59,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "253",
          "value": "0",
        },
        "name": "TimeInForce",
        "section": null,
        "tag": 59,
        "type": null,
        "value": "0",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 47,
        "type": null,
        "value": "A",
      },
      Field {
        "category": null,
        "description": "Timestamp when the business transaction represented by the message occurred.",
        "enumeration": null,
        "name": "TransactTime",
        "section": null,
        "tag": 60,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20090323-15:40:29",
      },
      Field {
        "category": null,
        "description": "Instructions for order handling on Broker trading floor",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "HandlInstCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Automated execution order, private, no Broker intervention",
          "group": undefined,
          "id": "21001",
          "name": "AutomatedExecutionNoIntervention",
          "sort": 1,
          "tag": 21,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "1",
        },
        "name": "HandlInst",
        "section": null,
        "tag": 21,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Market used to help identify a security.

Valid values:

See "Appendix 6-C"",
        "enumeration": null,
        "name": "SecurityExchange",
        "section": null,
        "tag": 207,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "false",
            "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
            "pattern": ".*",
            "standard": "XML",
          },
          "name": "Exchange",
        },
        "value": "N",
      },
      Field {
        "category": null,
        "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
        "enumeration": null,
        "name": "CheckSum",
        "section": null,
        "tag": 10,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "139",
      },
    ],
    "description": "NewOrderSingle",
    "fixVersion": "FIX.4.2",
    "messageSequence": 4,
    "messageString": "8=FIX.4.29=14535=D34=449=ABC_DEFG0152=20090323-15:40:2956=CCG115=XYZ11=NF 0542/0323200954=138=10055=CVS40=159=047=A60=20090323-15:40:2921=1207=N10=139",
    "messageType": "D",
    "messageTypeDescription": "The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
    "structure": [
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Hdr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message header

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
              "id": "8",
              "name": "BeginString",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be second field in message)",
              "id": "9",
              "name": "BodyLength",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be third field in message)",
              "id": "35",
              "name": "MsgType",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "49",
              "name": "SenderCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "56",
              "name": "TargetCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "34",
              "name": "MsgSeqNum",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "52",
              "name": "SendingTime",
              "presence": "required",
            },
          ],
          "id": "1024",
          "name": "StandardHeader",
          "type": "component",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "id": "1024",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "ClOrdID",
          "added": "FIX.2.7",
          "baseCategory": "SingleGeneralOrderHandling",
          "baseCategoryAbbrName": "ID",
          "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
          "id": "11",
          "name": "ClOrdID",
          "type": "String",
          "updated": "FIX.Latest",
          "updatedEP": "282",
        },
        "id": "11",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "OrdTyp",
          "added": "FIX.2.7",
          "baseCategory": "SingleGeneralOrderHandling",
          "baseCategoryAbbrName": "Typ",
          "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
          "id": "40",
          "name": "OrdType",
          "type": "OrdTypeCodeSet",
        },
        "id": "40",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Side",
          "added": "FIX.2.7",
          "description": "Side of order (see Volume : "Glossary" for value definitions)",
          "id": "54",
          "name": "Side",
          "type": "SideCodeSet",
        },
        "id": "54",
        "presence": "required",
      },
      {
        "added": "FIX.4.2",
        "data": {
          "abbrName": "TxnTm",
          "added": "FIX.2.7",
          "description": "Timestamp when the business transaction represented by the message occurred.",
          "id": "60",
          "name": "TransactTime",
          "type": "UTCTimestamp",
          "updated": "FIX.5.0SP1",
          "updatedEP": "94",
        },
        "id": "60",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Trlr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message trailer

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, always last field in message)",
              "id": "10",
              "name": "CheckSum",
              "presence": "required",
            },
          ],
          "id": "1025",
          "name": "StandardTrailer",
          "type": "component",
        },
        "id": "1025",
        "presence": "required",
      },
      {
        "added": "FIX.4.3",
        "data": {
          "abbrName": "Instrmt",
          "added": "FIX.4.3",
          "category": "Common",
          "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
          "id": "1003",
          "name": "Instrument",
          "type": "component",
        },
        "id": "1003",
        "presence": "required",
      },
      {
        "added": "FIX.4.3",
        "data": {
          "abbrName": "OrdQty",
          "added": "FIX.4.3",
          "category": "Common",
          "description": "The OrderQtyData component block contains the fields commonly used for indicating the amount or quantity of an order. Note that when this component block is marked as "required" in a message either one of these three fields must be used to identify the amount: OrderQty, CashOrderQty or OrderPercent (in the case of CIV).

",
          "id": "1011",
          "name": "OrderQtyData",
          "type": "component",
        },
        "id": "1011",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "221",
      },
    ],
  },
]
`;

exports[`FIXParser #getBriefDescription should generate a brief description Partial Fill Followed by Full Fill 1`] = `
[
  Message {
    "bodyLengthExpected": 398,
    "bodyLengthValid": false,
    "bodyLengthValue": 389,
    "checksumExpected": "150",
    "checksumValid": false,
    "checksumValue": "251",
    "data": [
      Field {
        "category": null,
        "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
        "enumeration": EnumType {
          "added": "FIX.Latest",
          "addedEP": "270",
          "codeSet": "BeginStringCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Session profile FIX.4.2",
          "group": undefined,
          "id": "8001",
          "name": "FIX42",
          "sort": 1,
          "tag": 8,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "FIX.4.2",
        },
        "name": "BeginString",
        "section": null,
        "tag": 8,
        "type": null,
        "value": "FIX.4.2",
      },
      Field {
        "category": null,
        "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
        "enumeration": null,
        "name": "BodyLength",
        "section": null,
        "tag": 9,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the length in bytes. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:nonNegativeInteger",
            "builtin": "false",
            "description": "int field representing the length in bytes. Value must be positive.",
            "standard": "XML",
          },
          "name": "Length",
        },
        "value": 389,
      },
      Field {
        "category": null,
        "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
        "enumeration": EnumType {
          "added": undefined,
          "addedEP": undefined,
          "codeSet": "MsgTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "ExecutionReport

The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
          "group": undefined,
          "id": "35009",
          "name": "ExecutionReport",
          "sort": 9,
          "tag": 35,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "8",
        },
        "name": "MsgType",
        "section": null,
        "tag": 35,
        "type": null,
        "value": "8",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify the firm targeted to receive the message if the message is delivered by a third party i.e. the third party firm identifier would be delivered in the TargetCompID (56) field and the ultimate receiver firm ID in this field.",
        "enumeration": null,
        "name": "DeliverToCompID",
        "section": null,
        "tag": 128,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "XYZ",
      },
      Field {
        "category": null,
        "description": "Integer message sequence number.",
        "enumeration": null,
        "name": "MsgSeqNum",
        "section": null,
        "tag": 34,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing a message sequence number. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:positiveInteger",
            "builtin": "false",
            "description": "int field representing a message sequence number. Value must be positive.",
            "standard": "XML",
          },
          "name": "SeqNum",
        },
        "value": 27,
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm sending message.",
        "enumeration": null,
        "name": "SenderCompID",
        "section": null,
        "tag": 49,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "CCG",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify receiving firm.",
        "enumeration": null,
        "name": "TargetCompID",
        "section": null,
        "tag": 56,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "ABC_DEFG01",
      },
      Field {
        "category": null,
        "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
        "enumeration": null,
        "name": "SendingTime",
        "section": null,
        "tag": 52,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20090325- 14:28:10",
      },
      Field {
        "category": null,
        "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
        "enumeration": null,
        "name": "Symbol",
        "section": null,
        "tag": 55,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "CVS",
      },
      Field {
        "category": null,
        "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
        "enumeration": null,
        "name": "OrderID",
        "section": null,
        "tag": 37,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "NF 0568/03252009",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
        "enumeration": null,
        "name": "ClOrdID",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 11,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "NF 0568/03252009",
      },
      Field {
        "category": null,
        "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
        "enumeration": null,
        "name": "ExecID",
        "section": null,
        "tag": 17,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "NF 0568/03252009 001001001",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 20,
        "type": null,
        "value": "0",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "OrdStatusCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Partially filled",
          "group": undefined,
          "id": "39002",
          "name": "PartiallyFilled",
          "sort": 2,
          "tag": 39,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "1",
        },
        "name": "OrdStatus",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 39,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
        "enumeration": null,
        "name": "ExecType",
        "section": null,
        "tag": 150,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "SideCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Sell

For Securities Financing indicates the delivery of securities or collateral.",
          "group": undefined,
          "id": "54002",
          "name": "Sell",
          "sort": 2,
          "tag": 54,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "254",
          "value": "2",
        },
        "name": "Side",
        "section": null,
        "tag": 54,
        "type": null,
        "value": "2",
      },
      Field {
        "category": null,
        "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "OrderQty",
        "section": null,
        "tag": 38,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 500,
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "OrdTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Market",
          "group": undefined,
          "id": "40001",
          "name": "Market",
          "sort": 1,
          "tag": 40,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "1",
        },
        "name": "OrdType",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 40,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Specifies how long the order remains in effect. Absence of this field is interpreted as DAY. NOTE not applicable to CIV Orders.",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "TimeInForceCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Day (or session)

A buy or sell order that, if not executed expires at the end of the trading day on which it was entered.",
          "group": undefined,
          "id": "59001",
          "name": "Day",
          "sort": 1,
          "tag": 59,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "253",
          "value": "0",
        },
        "name": "TimeInForce",
        "section": null,
        "tag": 59,
        "type": null,
        "value": "0",
      },
      Field {
        "category": null,
        "description": "Price of this (last) fill.",
        "enumeration": null,
        "name": "LastPx",
        "section": null,
        "tag": 31,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
            "standard": "XML",
          },
          "name": "Price",
        },
        "value": 25.47,
      },
      Field {
        "category": null,
        "description": "Quantity (e.g. shares) bought/sold on this (last) fill.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "LastQty",
        "section": null,
        "tag": 32,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 100,
      },
      Field {
        "category": null,
        "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "CumQty",
        "section": null,
        "tag": 14,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 0,
      },
      Field {
        "category": null,
        "description": "Calculated average price of all fills on this order.

For Fixed Income trades AvgPx is always expressed as percent-of-par, regardless of the PriceType (423) of LastPx (31). I.e., AvgPx will contain an average of percent-of-par values (see LastParPx (669)) for issues traded in Yield, Spread or Discount.",
        "enumeration": null,
        "name": "AvgPx",
        "section": null,
        "tag": 6,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
            "standard": "XML",
          },
          "name": "Price",
        },
        "value": 0,
      },
      Field {
        "category": null,
        "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "LeavesQty",
        "section": null,
        "tag": 151,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 400,
      },
      Field {
        "category": null,
        "description": "Timestamp when the business transaction represented by the message occurred.",
        "enumeration": null,
        "name": "TransactTime",
        "section": null,
        "tag": 60,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20090325-14:28:12",
      },
      Field {
        "category": null,
        "description": "Free format text string

(Note: this field does not have a specified maximum length)",
        "enumeration": null,
        "name": "Text",
        "section": null,
        "tag": 58,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "Partial Fill",
      },
      Field {
        "category": null,
        "description": "Market of execution for last fill, or an indication of the market where an order was routed

Valid values:

See "Appendix 6-C"

In the context of ESMA RTS 1 Annex I, Table 3, Field 6 "Venue of Execution" it is required that the "venue where the transaction was executed" be identified using ISO 10383 (MIC). Additionally, ESMA requires the use of "MIC code 'XOFF' for financial instruments admitted to trading or traded on a trading venue, where the transaction on that financial instrument is not executed on a trading venue, systematic internaliser or organized trading platform outside of the Union. Use 'SINT' for financial instruments admitted to trading or traded on a trading venue, where the transaction is executed on a systematic internaliser."",
        "enumeration": null,
        "name": "LastMkt",
        "section": null,
        "tag": 30,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "false",
            "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
            "pattern": ".*",
            "standard": "XML",
          },
          "name": "Exchange",
        },
        "value": "N",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 76,
        "type": null,
        "value": "0034",
      },
      Field {
        "category": null,
        "description": "Market used to help identify a security.

Valid values:

See "Appendix 6-C"",
        "enumeration": null,
        "name": "SecurityExchange",
        "section": null,
        "tag": 207,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "false",
            "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
            "pattern": ".*",
            "standard": "XML",
          },
          "name": "Exchange",
        },
        "value": "N",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 47,
        "type": null,
        "value": "A",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 9430,
        "type": null,
        "value": "NX",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 9483,
        "type": null,
        "value": "000006",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 9578,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "The number of ContraBroker (375) entries.",
        "enumeration": null,
        "name": "NoContraBrokers",
        "section": null,
        "tag": 382,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the number of entries in a repeating group. Value must be positive.",
          "name": "NumInGroup",
        },
        "value": 1,
      },
      Field {
        "category": null,
        "description": "Identifies contra broker. Standard NASD market-maker mnemonic is preferred.",
        "enumeration": null,
        "name": "ContraBroker",
        "section": null,
        "tag": 375,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "TOD",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Identifies the trader (e.g. "badge number") of the ContraBroker.",
        "enumeration": null,
        "name": "ContraTrader",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 337,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "0000",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Quantity traded with the ContraBroker (375).",
        "enumeration": null,
        "name": "ContraTradeQty",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 437,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 100,
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Identifes the time of the trade with the ContraBroker (375). (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
        "enumeration": null,
        "name": "ContraTradeTime",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 438,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "1134",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 9579,
        "type": null,
        "value": "0000100001",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 9426,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 9433,
        "type": null,
        "value": "0034",
      },
      Field {
        "category": null,
        "description": "Broker capacity in order execution",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "LastCapacityCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Agent",
          "group": undefined,
          "id": "29001",
          "name": "Agent",
          "sort": 1,
          "tag": 29,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "1",
        },
        "name": "LastCapacity",
        "section": null,
        "tag": 29,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Indicates order settlement period. If present, SettlDate (64) overrides this field. If both SettlType (63) and SettDate (64) are omitted, the default for SettlType (63) is 0 (Regular)

Regular is defined as the default settlement period for the particular security on the exchange of execution.

In Fixed Income the contents of this field may influence the instrument definition if the SecurityID (48) is ambiguous. In the US an active Treasury offering may be re-opened, and for a time one CUSIP will apply to both the current and "when-issued" securities. Supplying a value of "7" clarifies the instrument description; any other value or the absence of this field should cause the respondent to default to the active issue.

Additionally the following patterns may be uses as well as enum values

Dx = FX tenor expression for "days", e.g. "D5", where "x" is any integer > 0

Mx = FX tenor expression for "months", e.g. "M3", where "x" is any integer > 0

Wx = FX tenor expression for "weeks", e.g. "W13", where "x" is any integer > 0

Yx = FX tenor expression for "years", e.g. "Y1", where "x" is any integer > 0

Noted that for FX the tenors expressed using Dx, Mx, Wx, and Yx values do not denote business days, but calendar days.",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "SettlTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Regular / FX Spot settlement (T+1 or T+2 depending on currency)",
          "group": undefined,
          "id": "63001",
          "name": "Regular",
          "sort": 1,
          "tag": 63,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "0",
        },
        "name": "SettlType",
        "section": null,
        "tag": 63,
        "type": null,
        "value": "0",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 9440,
        "type": null,
        "value": "001001001",
      },
      Field {
        "category": null,
        "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
        "enumeration": null,
        "name": "CheckSum",
        "section": null,
        "tag": 10,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "251",
      },
    ],
    "description": "ExecutionReport",
    "fixVersion": "FIX.4.2",
    "messageSequence": 27,
    "messageString": "8=FIX.4.29=38935=8128=XYZ34=2749=CCG56=ABC_DEFG0152=20090325- 14:28:1055=CVS37=NF 0568/0325200911=NF 0568/0325200917=NF 0568/03252009 00100100120=039=1150=154=238=50040=159=031=25.470032=10014=06=0151=40060=20090325-14:28:1258=Partial Fill30=N76=0034207=N47=A9430=NX9483=0000069578=1382=1375=TOD337=0000437=100438=11349579=00001000019426=19433=003429=163=09440=00100100110=251",
    "messageType": "8",
    "messageTypeDescription": "The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
    "structure": [
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Hdr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message header

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
              "id": "8",
              "name": "BeginString",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be second field in message)",
              "id": "9",
              "name": "BodyLength",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be third field in message)",
              "id": "35",
              "name": "MsgType",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "49",
              "name": "SenderCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "56",
              "name": "TargetCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "34",
              "name": "MsgSeqNum",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "52",
              "name": "SendingTime",
              "presence": "required",
            },
          ],
          "id": "1024",
          "name": "StandardHeader",
          "type": "component",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "id": "1024",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "CumQty",
          "added": "FIX.2.7",
          "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
          "id": "14",
          "name": "CumQty",
          "type": "Qty",
        },
        "id": "14",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "ExecID",
          "added": "FIX.2.7",
          "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
          "id": "17",
          "name": "ExecID",
          "type": "String",
          "updated": "FIX.5.0SP1",
          "updatedEP": "95",
        },
        "id": "17",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "OrdID",
          "added": "FIX.2.7",
          "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
          "id": "37",
          "name": "OrderID",
          "type": "String",
        },
        "id": "37",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "OrdStat",
          "added": "FIX.2.7",
          "baseCategory": "SingleGeneralOrderHandling",
          "baseCategoryAbbrName": "Stat",
          "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
          "id": "39",
          "name": "OrdStatus",
          "type": "OrdStatusCodeSet",
        },
        "id": "39",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Side",
          "added": "FIX.2.7",
          "description": "Side of order (see Volume : "Glossary" for value definitions)",
          "id": "54",
          "name": "Side",
          "type": "SideCodeSet",
        },
        "id": "54",
        "presence": "required",
      },
      {
        "added": "FIX.4.1",
        "data": {
          "abbrName": "ExecTyp",
          "added": "FIX.4.1",
          "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
          "id": "150",
          "name": "ExecType",
          "type": "ExecTypeCodeSet",
          "updated": "FIX.5.0SP2",
          "updatedEP": "131",
        },
        "id": "150",
        "presence": "required",
      },
      {
        "added": "FIX.4.1",
        "data": {
          "abbrName": "LeavesQty",
          "added": "FIX.4.1",
          "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
          "id": "151",
          "name": "LeavesQty",
          "type": "Qty",
        },
        "id": "151",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Trlr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message trailer

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, always last field in message)",
              "id": "10",
              "name": "CheckSum",
              "presence": "required",
            },
          ],
          "id": "1025",
          "name": "StandardTrailer",
          "type": "component",
        },
        "id": "1025",
        "presence": "required",
      },
      {
        "added": "FIX.4.3",
        "data": {
          "abbrName": "Instrmt",
          "added": "FIX.4.3",
          "category": "Common",
          "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
          "id": "1003",
          "name": "Instrument",
          "type": "component",
        },
        "id": "1003",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
    ],
  },
]
`;

exports[`FIXParser #getBriefDescription should generate a brief description Sub-Penny (Execution Report) 1`] = `
[
  Message {
    "bodyLengthExpected": 412,
    "bodyLengthValid": false,
    "bodyLengthValue": 404,
    "checksumExpected": "237",
    "checksumValid": false,
    "checksumValue": "121",
    "data": [
      Field {
        "category": null,
        "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
        "enumeration": EnumType {
          "added": "FIX.Latest",
          "addedEP": "270",
          "codeSet": "BeginStringCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Session profile FIX.4.2",
          "group": undefined,
          "id": "8001",
          "name": "FIX42",
          "sort": 1,
          "tag": 8,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "FIX.4.2",
        },
        "name": "BeginString",
        "section": null,
        "tag": 8,
        "type": null,
        "value": "FIX.4.2",
      },
      Field {
        "category": null,
        "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
        "enumeration": null,
        "name": "BodyLength",
        "section": null,
        "tag": 9,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the length in bytes. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:nonNegativeInteger",
            "builtin": "false",
            "description": "int field representing the length in bytes. Value must be positive.",
            "standard": "XML",
          },
          "name": "Length",
        },
        "value": 404,
      },
      Field {
        "category": null,
        "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
        "enumeration": EnumType {
          "added": undefined,
          "addedEP": undefined,
          "codeSet": "MsgTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "ExecutionReport

The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
          "group": undefined,
          "id": "35009",
          "name": "ExecutionReport",
          "sort": 9,
          "tag": 35,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "8",
        },
        "name": "MsgType",
        "section": null,
        "tag": 35,
        "type": null,
        "value": "8",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify the firm targeted to receive the message if the message is delivered by a third party i.e. the third party firm identifier would be delivered in the TargetCompID (56) field and the ultimate receiver firm ID in this field.",
        "enumeration": null,
        "name": "DeliverToCompID",
        "section": null,
        "tag": 128,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "XYZ",
      },
      Field {
        "category": null,
        "description": "Integer message sequence number.",
        "enumeration": null,
        "name": "MsgSeqNum",
        "section": null,
        "tag": 34,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing a message sequence number. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:positiveInteger",
            "builtin": "false",
            "description": "int field representing a message sequence number. Value must be positive.",
            "standard": "XML",
          },
          "name": "SeqNum",
        },
        "value": 216,
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm sending message.",
        "enumeration": null,
        "name": "SenderCompID",
        "section": null,
        "tag": 49,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "CCG",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify receiving firm.",
        "enumeration": null,
        "name": "TargetCompID",
        "section": null,
        "tag": 56,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "ABC_DEFG04",
      },
      Field {
        "category": null,
        "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
        "enumeration": null,
        "name": "SendingTime",
        "section": null,
        "tag": 52,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20100208-19:36:45",
      },
      Field {
        "category": null,
        "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
        "enumeration": null,
        "name": "Symbol",
        "section": null,
        "tag": 55,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "VOD",
      },
      Field {
        "category": null,
        "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
        "enumeration": null,
        "name": "OrderID",
        "section": null,
        "tag": 37,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "NF 0016/02082010",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
        "enumeration": null,
        "name": "ClOrdID",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 11,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "NF 0016/02082010",
      },
      Field {
        "category": null,
        "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
        "enumeration": null,
        "name": "ExecID",
        "section": null,
        "tag": 17,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "NF 0016/02082010 001001001",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 20,
        "type": null,
        "value": "0",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "OrdStatusCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Filled",
          "group": undefined,
          "id": "39003",
          "name": "Filled",
          "sort": 3,
          "tag": 39,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "2",
        },
        "name": "OrdStatus",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 39,
        "type": null,
        "value": "2",
      },
      Field {
        "category": null,
        "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
        "enumeration": null,
        "name": "ExecType",
        "section": null,
        "tag": 150,
        "type": null,
        "value": "2",
      },
      Field {
        "category": null,
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "SideCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Buy

For Securities Financing indicates the receipt of securities or collateral.",
          "group": undefined,
          "id": "54001",
          "name": "Buy",
          "sort": 1,
          "tag": 54,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "254",
          "value": "1",
        },
        "name": "Side",
        "section": null,
        "tag": 54,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "OrderQty",
        "section": null,
        "tag": 38,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 1000,
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "OrdTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Limit",
          "group": undefined,
          "id": "40002",
          "name": "Limit",
          "sort": 2,
          "tag": 40,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "2",
        },
        "name": "OrdType",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 40,
        "type": null,
        "value": "2",
      },
      Field {
        "category": null,
        "description": "Price per unit of quantity (e.g. per share)",
        "enumeration": null,
        "name": "Price",
        "section": null,
        "tag": 44,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
            "standard": "XML",
          },
          "name": "Price",
        },
        "value": 0.995,
      },
      Field {
        "category": null,
        "description": "Specifies how long the order remains in effect. Absence of this field is interpreted as DAY. NOTE not applicable to CIV Orders.",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "TimeInForceCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Day (or session)

A buy or sell order that, if not executed expires at the end of the trading day on which it was entered.",
          "group": undefined,
          "id": "59001",
          "name": "Day",
          "sort": 1,
          "tag": 59,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "253",
          "value": "0",
        },
        "name": "TimeInForce",
        "section": null,
        "tag": 59,
        "type": null,
        "value": "0",
      },
      Field {
        "category": null,
        "description": "Price of this (last) fill.",
        "enumeration": null,
        "name": "LastPx",
        "section": null,
        "tag": 31,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
            "standard": "XML",
          },
          "name": "Price",
        },
        "value": 0.4,
      },
      Field {
        "category": null,
        "description": "Quantity (e.g. shares) bought/sold on this (last) fill.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "LastQty",
        "section": null,
        "tag": 32,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 1000,
      },
      Field {
        "category": null,
        "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "CumQty",
        "section": null,
        "tag": 14,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 0,
      },
      Field {
        "category": null,
        "description": "Calculated average price of all fills on this order.

For Fixed Income trades AvgPx is always expressed as percent-of-par, regardless of the PriceType (423) of LastPx (31). I.e., AvgPx will contain an average of percent-of-par values (see LastParPx (669)) for issues traded in Yield, Spread or Discount.",
        "enumeration": null,
        "name": "AvgPx",
        "section": null,
        "tag": 6,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
            "standard": "XML",
          },
          "name": "Price",
        },
        "value": 0,
      },
      Field {
        "category": null,
        "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "LeavesQty",
        "section": null,
        "tag": 151,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 0,
      },
      Field {
        "category": null,
        "description": "Timestamp when the business transaction represented by the message occurred.",
        "enumeration": null,
        "name": "TransactTime",
        "section": null,
        "tag": 60,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20100208-19:36:45",
      },
      Field {
        "category": null,
        "description": "Free format text string

(Note: this field does not have a specified maximum length)",
        "enumeration": null,
        "name": "Text",
        "section": null,
        "tag": 58,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "Fill",
      },
      Field {
        "category": null,
        "description": "Account mnemonic as agreed between buy and sell sides, e.g. broker and institution or investor/intermediary and fund manager.",
        "enumeration": null,
        "name": "Account",
        "section": null,
        "tag": 1,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "ABC123ZYX",
      },
      Field {
        "category": null,
        "description": "Market of execution for last fill, or an indication of the market where an order was routed

Valid values:

See "Appendix 6-C"

In the context of ESMA RTS 1 Annex I, Table 3, Field 6 "Venue of Execution" it is required that the "venue where the transaction was executed" be identified using ISO 10383 (MIC). Additionally, ESMA requires the use of "MIC code 'XOFF' for financial instruments admitted to trading or traded on a trading venue, where the transaction on that financial instrument is not executed on a trading venue, systematic internaliser or organized trading platform outside of the Union. Use 'SINT' for financial instruments admitted to trading or traded on a trading venue, where the transaction is executed on a systematic internaliser."",
        "enumeration": null,
        "name": "LastMkt",
        "section": null,
        "tag": 30,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "false",
            "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
            "pattern": ".*",
            "standard": "XML",
          },
          "name": "Exchange",
        },
        "value": "A",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 76,
        "type": null,
        "value": "0210",
      },
      Field {
        "category": null,
        "description": "Market used to help identify a security.

Valid values:

See "Appendix 6-C"",
        "enumeration": null,
        "name": "SecurityExchange",
        "section": null,
        "tag": 207,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "false",
            "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
            "pattern": ".*",
            "standard": "XML",
          },
          "name": "Exchange",
        },
        "value": "A",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 47,
        "type": null,
        "value": "A",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 9430,
        "type": null,
        "value": "NX",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 9483,
        "type": null,
        "value": "000004",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 9578,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "The number of ContraBroker (375) entries.",
        "enumeration": null,
        "name": "NoContraBrokers",
        "section": null,
        "tag": 382,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the number of entries in a repeating group. Value must be positive.",
          "name": "NumInGroup",
        },
        "value": 1,
      },
      Field {
        "category": null,
        "description": "Identifies contra broker. Standard NASD market-maker mnemonic is preferred.",
        "enumeration": null,
        "name": "ContraBroker",
        "section": null,
        "tag": 375,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "LOC",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Identifies the trader (e.g. "badge number") of the ContraBroker.",
        "enumeration": null,
        "name": "ContraTrader",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 337,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "0000",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Quantity traded with the ContraBroker (375).",
        "enumeration": null,
        "name": "ContraTradeQty",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 437,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 1000,
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Identifes the time of the trade with the ContraBroker (375). (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
        "enumeration": null,
        "name": "ContraTradeTime",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 438,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "1437",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 9579,
        "type": null,
        "value": "0000100001",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 9426,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 9433,
        "type": null,
        "value": "0210",
      },
      Field {
        "category": null,
        "description": "Broker capacity in order execution",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "LastCapacityCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Agent",
          "group": undefined,
          "id": "29001",
          "name": "Agent",
          "sort": 1,
          "tag": 29,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "1",
        },
        "name": "LastCapacity",
        "section": null,
        "tag": 29,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Indicates order settlement period. If present, SettlDate (64) overrides this field. If both SettlType (63) and SettDate (64) are omitted, the default for SettlType (63) is 0 (Regular)

Regular is defined as the default settlement period for the particular security on the exchange of execution.

In Fixed Income the contents of this field may influence the instrument definition if the SecurityID (48) is ambiguous. In the US an active Treasury offering may be re-opened, and for a time one CUSIP will apply to both the current and "when-issued" securities. Supplying a value of "7" clarifies the instrument description; any other value or the absence of this field should cause the respondent to default to the active issue.

Additionally the following patterns may be uses as well as enum values

Dx = FX tenor expression for "days", e.g. "D5", where "x" is any integer > 0

Mx = FX tenor expression for "months", e.g. "M3", where "x" is any integer > 0

Wx = FX tenor expression for "weeks", e.g. "W13", where "x" is any integer > 0

Yx = FX tenor expression for "years", e.g. "Y1", where "x" is any integer > 0

Noted that for FX the tenors expressed using Dx, Mx, Wx, and Yx values do not denote business days, but calendar days.",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "SettlTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Regular / FX Spot settlement (T+1 or T+2 depending on currency)",
          "group": undefined,
          "id": "63001",
          "name": "Regular",
          "sort": 1,
          "tag": 63,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "0",
        },
        "name": "SettlType",
        "section": null,
        "tag": 63,
        "type": null,
        "value": "0",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 9440,
        "type": null,
        "value": "001001001",
      },
      Field {
        "category": null,
        "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
        "enumeration": null,
        "name": "CheckSum",
        "section": null,
        "tag": 10,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "121",
      },
    ],
    "description": "ExecutionReport",
    "fixVersion": "FIX.4.2",
    "messageSequence": 216,
    "messageString": "8=FIX.4.29=40435=8128=XYZ34=21649=CCG56=ABC_DEFG0452=20100208-19:36:4555=VOD37=NF 0016/0208201011=NF 0016/0208201017=NF 0016/02082010 00100100120=039=2150=254=138=100040=244=0.995059=031=0.400032=100014=06=0151=060=20100208-19:36:4558=Fill1=ABC123ZYX30=A76=0210207=A47=A9430=NX9483=0000049578=1382=1375=LOC337=0000437=1000438=14379579=00001000019426=19433=021029=163=09440=00100100110=121",
    "messageType": "8",
    "messageTypeDescription": "The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
    "structure": [
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Hdr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message header

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
              "id": "8",
              "name": "BeginString",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be second field in message)",
              "id": "9",
              "name": "BodyLength",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be third field in message)",
              "id": "35",
              "name": "MsgType",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "49",
              "name": "SenderCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "56",
              "name": "TargetCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "34",
              "name": "MsgSeqNum",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "52",
              "name": "SendingTime",
              "presence": "required",
            },
          ],
          "id": "1024",
          "name": "StandardHeader",
          "type": "component",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "id": "1024",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "CumQty",
          "added": "FIX.2.7",
          "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
          "id": "14",
          "name": "CumQty",
          "type": "Qty",
        },
        "id": "14",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "ExecID",
          "added": "FIX.2.7",
          "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
          "id": "17",
          "name": "ExecID",
          "type": "String",
          "updated": "FIX.5.0SP1",
          "updatedEP": "95",
        },
        "id": "17",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "OrdID",
          "added": "FIX.2.7",
          "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
          "id": "37",
          "name": "OrderID",
          "type": "String",
        },
        "id": "37",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "OrdStat",
          "added": "FIX.2.7",
          "baseCategory": "SingleGeneralOrderHandling",
          "baseCategoryAbbrName": "Stat",
          "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
          "id": "39",
          "name": "OrdStatus",
          "type": "OrdStatusCodeSet",
        },
        "id": "39",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Side",
          "added": "FIX.2.7",
          "description": "Side of order (see Volume : "Glossary" for value definitions)",
          "id": "54",
          "name": "Side",
          "type": "SideCodeSet",
        },
        "id": "54",
        "presence": "required",
      },
      {
        "added": "FIX.4.1",
        "data": {
          "abbrName": "ExecTyp",
          "added": "FIX.4.1",
          "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
          "id": "150",
          "name": "ExecType",
          "type": "ExecTypeCodeSet",
          "updated": "FIX.5.0SP2",
          "updatedEP": "131",
        },
        "id": "150",
        "presence": "required",
      },
      {
        "added": "FIX.4.1",
        "data": {
          "abbrName": "LeavesQty",
          "added": "FIX.4.1",
          "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
          "id": "151",
          "name": "LeavesQty",
          "type": "Qty",
        },
        "id": "151",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Trlr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message trailer

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, always last field in message)",
              "id": "10",
              "name": "CheckSum",
              "presence": "required",
            },
          ],
          "id": "1025",
          "name": "StandardTrailer",
          "type": "component",
        },
        "id": "1025",
        "presence": "required",
      },
      {
        "added": "FIX.4.3",
        "data": {
          "abbrName": "Instrmt",
          "added": "FIX.4.3",
          "category": "Common",
          "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
          "id": "1003",
          "name": "Instrument",
          "type": "component",
        },
        "id": "1003",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
    ],
  },
]
`;

exports[`FIXParser #getBriefDescription should generate a brief description Sub-Penny (New Order Single) 1`] = `
[
  Message {
    "bodyLengthExpected": 148,
    "bodyLengthValid": false,
    "bodyLengthValue": 147,
    "checksumExpected": "148",
    "checksumValid": false,
    "checksumValue": "100",
    "data": [
      Field {
        "category": null,
        "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
        "enumeration": EnumType {
          "added": "FIX.Latest",
          "addedEP": "270",
          "codeSet": "BeginStringCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Session profile FIX.4.2",
          "group": undefined,
          "id": "8001",
          "name": "FIX42",
          "sort": 1,
          "tag": 8,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "FIX.4.2",
        },
        "name": "BeginString",
        "section": null,
        "tag": 8,
        "type": null,
        "value": "FIX.4.2",
      },
      Field {
        "category": null,
        "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
        "enumeration": null,
        "name": "BodyLength",
        "section": null,
        "tag": 9,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the length in bytes. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:nonNegativeInteger",
            "builtin": "false",
            "description": "int field representing the length in bytes. Value must be positive.",
            "standard": "XML",
          },
          "name": "Length",
        },
        "value": 147,
      },
      Field {
        "category": null,
        "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
        "enumeration": EnumType {
          "added": undefined,
          "addedEP": undefined,
          "codeSet": "MsgTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "NewOrderSingle

The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
          "group": undefined,
          "id": "35014",
          "name": "NewOrderSingle",
          "sort": 14,
          "tag": 35,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "D",
        },
        "name": "MsgType",
        "section": null,
        "tag": 35,
        "type": null,
        "value": "D",
      },
      Field {
        "category": null,
        "description": "Integer message sequence number.",
        "enumeration": null,
        "name": "MsgSeqNum",
        "section": null,
        "tag": 34,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing a message sequence number. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:positiveInteger",
            "builtin": "false",
            "description": "int field representing a message sequence number. Value must be positive.",
            "standard": "XML",
          },
          "name": "SeqNum",
        },
        "value": 215,
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm sending message.",
        "enumeration": null,
        "name": "SenderCompID",
        "section": null,
        "tag": 49,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "ABC_DEFG04",
      },
      Field {
        "category": null,
        "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
        "enumeration": null,
        "name": "SendingTime",
        "section": null,
        "tag": 52,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20100208-19:36:45",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify receiving firm.",
        "enumeration": null,
        "name": "TargetCompID",
        "section": null,
        "tag": 56,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "CCG",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm originating message if the message was delivered by a third party i.e. the third party firm identifier would be delivered in the SenderCompID field and the firm originating the message in this field.",
        "enumeration": null,
        "name": "OnBehalfOfCompID",
        "section": null,
        "tag": 115,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "XYZ",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
        "enumeration": null,
        "name": "ClOrdID",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 11,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "NF 0016/02082010",
      },
      Field {
        "category": null,
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "SideCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Buy

For Securities Financing indicates the receipt of securities or collateral.",
          "group": undefined,
          "id": "54001",
          "name": "Buy",
          "sort": 1,
          "tag": 54,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "254",
          "value": "1",
        },
        "name": "Side",
        "section": null,
        "tag": 54,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "OrderQty",
        "section": null,
        "tag": 38,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 1000,
      },
      Field {
        "category": null,
        "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
        "enumeration": null,
        "name": "Symbol",
        "section": null,
        "tag": 55,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "VOD",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "OrdTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Limit",
          "group": undefined,
          "id": "40002",
          "name": "Limit",
          "sort": 2,
          "tag": 40,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "2",
        },
        "name": "OrdType",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 40,
        "type": null,
        "value": "2",
      },
      Field {
        "category": null,
        "description": "Price per unit of quantity (e.g. per share)",
        "enumeration": null,
        "name": "Price",
        "section": null,
        "tag": 44,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
            "standard": "XML",
          },
          "name": "Price",
        },
        "value": 0.995,
      },
      Field {
        "category": null,
        "description": "Specifies how long the order remains in effect. Absence of this field is interpreted as DAY. NOTE not applicable to CIV Orders.",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "TimeInForceCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Day (or session)

A buy or sell order that, if not executed expires at the end of the trading day on which it was entered.",
          "group": undefined,
          "id": "59001",
          "name": "Day",
          "sort": 1,
          "tag": 59,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "253",
          "value": "0",
        },
        "name": "TimeInForce",
        "section": null,
        "tag": 59,
        "type": null,
        "value": "0",
      },
      Field {
        "category": null,
        "description": "Account mnemonic as agreed between buy and sell sides, e.g. broker and institution or investor/intermediary and fund manager.",
        "enumeration": null,
        "name": "Account",
        "section": null,
        "tag": 1,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "ABC123ZYX",
      },
      Field {
        "category": null,
        "description": "Instructions for order handling on Broker trading floor",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "HandlInstCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Automated execution order, private, no Broker intervention",
          "group": undefined,
          "id": "21001",
          "name": "AutomatedExecutionNoIntervention",
          "sort": 1,
          "tag": 21,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "1",
        },
        "name": "HandlInst",
        "section": null,
        "tag": 21,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Market used to help identify a security.

Valid values:

See "Appendix 6-C"",
        "enumeration": null,
        "name": "SecurityExchange",
        "section": null,
        "tag": 207,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "false",
            "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
            "pattern": ".*",
            "standard": "XML",
          },
          "name": "Exchange",
        },
        "value": "N",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 47,
        "type": null,
        "value": "A",
      },
      Field {
        "category": null,
        "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
        "enumeration": null,
        "name": "CheckSum",
        "section": null,
        "tag": 10,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "100",
      },
    ],
    "description": "NewOrderSingle",
    "fixVersion": "FIX.4.2",
    "messageSequence": 215,
    "messageString": "8=FIX.4.29=14735=D34=21549=ABC_DEFG0452=20100208-19:36:4556=CCG115=XYZ11=NF 0016/0208201054=138=100055=VOD40=244=.99559=01=ABC123ZYX21=1207=N47=A10=100",
    "messageType": "D",
    "messageTypeDescription": "The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
    "structure": [
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Hdr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message header

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
              "id": "8",
              "name": "BeginString",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be second field in message)",
              "id": "9",
              "name": "BodyLength",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be third field in message)",
              "id": "35",
              "name": "MsgType",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "49",
              "name": "SenderCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "56",
              "name": "TargetCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "34",
              "name": "MsgSeqNum",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "52",
              "name": "SendingTime",
              "presence": "required",
            },
          ],
          "id": "1024",
          "name": "StandardHeader",
          "type": "component",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "id": "1024",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "ClOrdID",
          "added": "FIX.2.7",
          "baseCategory": "SingleGeneralOrderHandling",
          "baseCategoryAbbrName": "ID",
          "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
          "id": "11",
          "name": "ClOrdID",
          "type": "String",
          "updated": "FIX.Latest",
          "updatedEP": "282",
        },
        "id": "11",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "OrdTyp",
          "added": "FIX.2.7",
          "baseCategory": "SingleGeneralOrderHandling",
          "baseCategoryAbbrName": "Typ",
          "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
          "id": "40",
          "name": "OrdType",
          "type": "OrdTypeCodeSet",
        },
        "id": "40",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Side",
          "added": "FIX.2.7",
          "description": "Side of order (see Volume : "Glossary" for value definitions)",
          "id": "54",
          "name": "Side",
          "type": "SideCodeSet",
        },
        "id": "54",
        "presence": "required",
      },
      {
        "added": "FIX.4.2",
        "data": {
          "abbrName": "TxnTm",
          "added": "FIX.2.7",
          "description": "Timestamp when the business transaction represented by the message occurred.",
          "id": "60",
          "name": "TransactTime",
          "type": "UTCTimestamp",
          "updated": "FIX.5.0SP1",
          "updatedEP": "94",
        },
        "id": "60",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Trlr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message trailer

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, always last field in message)",
              "id": "10",
              "name": "CheckSum",
              "presence": "required",
            },
          ],
          "id": "1025",
          "name": "StandardTrailer",
          "type": "component",
        },
        "id": "1025",
        "presence": "required",
      },
      {
        "added": "FIX.4.3",
        "data": {
          "abbrName": "Instrmt",
          "added": "FIX.4.3",
          "category": "Common",
          "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
          "id": "1003",
          "name": "Instrument",
          "type": "component",
        },
        "id": "1003",
        "presence": "required",
      },
      {
        "added": "FIX.4.3",
        "data": {
          "abbrName": "OrdQty",
          "added": "FIX.4.3",
          "category": "Common",
          "description": "The OrderQtyData component block contains the fields commonly used for indicating the amount or quantity of an order. Note that when this component block is marked as "required" in a message either one of these three fields must be used to identify the amount: OrderQty, CashOrderQty or OrderPercent (in the case of CIV).

",
          "id": "1011",
          "name": "OrderQtyData",
          "type": "component",
        },
        "id": "1011",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "221",
      },
    ],
  },
]
`;

exports[`FIXParser #getBriefDescription should generate a brief description Symbol with a Suffix 1`] = `
[
  Message {
    "bodyLengthExpected": 150,
    "bodyLengthValid": true,
    "bodyLengthValue": 150,
    "checksumExpected": "237",
    "checksumValid": true,
    "checksumValue": "237",
    "data": [
      Field {
        "category": null,
        "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
        "enumeration": EnumType {
          "added": "FIX.Latest",
          "addedEP": "270",
          "codeSet": "BeginStringCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Session profile FIX.4.2",
          "group": undefined,
          "id": "8001",
          "name": "FIX42",
          "sort": 1,
          "tag": 8,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "FIX.4.2",
        },
        "name": "BeginString",
        "section": null,
        "tag": 8,
        "type": null,
        "value": "FIX.4.2",
      },
      Field {
        "category": null,
        "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
        "enumeration": null,
        "name": "BodyLength",
        "section": null,
        "tag": 9,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the length in bytes. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:nonNegativeInteger",
            "builtin": "false",
            "description": "int field representing the length in bytes. Value must be positive.",
            "standard": "XML",
          },
          "name": "Length",
        },
        "value": 150,
      },
      Field {
        "category": null,
        "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
        "enumeration": EnumType {
          "added": undefined,
          "addedEP": undefined,
          "codeSet": "MsgTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "NewOrderSingle

The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
          "group": undefined,
          "id": "35014",
          "name": "NewOrderSingle",
          "sort": 14,
          "tag": 35,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "D",
        },
        "name": "MsgType",
        "section": null,
        "tag": 35,
        "type": null,
        "value": "D",
      },
      Field {
        "category": null,
        "description": "Integer message sequence number.",
        "enumeration": null,
        "name": "MsgSeqNum",
        "section": null,
        "tag": 34,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing a message sequence number. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:positiveInteger",
            "builtin": "false",
            "description": "int field representing a message sequence number. Value must be positive.",
            "standard": "XML",
          },
          "name": "SeqNum",
        },
        "value": 13,
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm sending message.",
        "enumeration": null,
        "name": "SenderCompID",
        "section": null,
        "tag": 49,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "LEH_LZJ02",
      },
      Field {
        "category": null,
        "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
        "enumeration": null,
        "name": "SendingTime",
        "section": null,
        "tag": 52,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20100303-15:21:52",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify receiving firm.",
        "enumeration": null,
        "name": "TargetCompID",
        "section": null,
        "tag": 56,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "CCG",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm originating message if the message was delivered by a third party i.e. the third party firm identifier would be delivered in the SenderCompID field and the firm originating the message in this field.",
        "enumeration": null,
        "name": "OnBehalfOfCompID",
        "section": null,
        "tag": 115,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "LZJ",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
        "enumeration": null,
        "name": "ClOrdID",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 11,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "NF 0043/03032010",
      },
      Field {
        "category": null,
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "SideCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Buy

For Securities Financing indicates the receipt of securities or collateral.",
          "group": undefined,
          "id": "54001",
          "name": "Buy",
          "sort": 1,
          "tag": 54,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "254",
          "value": "1",
        },
        "name": "Side",
        "section": null,
        "tag": 54,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "OrderQty",
        "section": null,
        "tag": 38,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 100,
      },
      Field {
        "category": null,
        "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
        "enumeration": null,
        "name": "Symbol",
        "section": null,
        "tag": 55,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "ADM",
      },
      Field {
        "category": null,
        "description": "Additional information about the security (e.g. preferred, warrants, etc.). Note also see SecurityType (167).

As defined in the NYSE Stock and bond Symbol Directory and in the AMEX Fitch Directory.",
        "enumeration": null,
        "name": "SymbolSfx",
        "section": null,
        "tag": 65,
        "type": null,
        "value": "PRA",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "OrdTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Limit",
          "group": undefined,
          "id": "40002",
          "name": "Limit",
          "sort": 2,
          "tag": 40,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "2",
        },
        "name": "OrdType",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 40,
        "type": null,
        "value": "2",
      },
      Field {
        "category": null,
        "description": "Price per unit of quantity (e.g. per share)",
        "enumeration": null,
        "name": "Price",
        "section": null,
        "tag": 44,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
            "standard": "XML",
          },
          "name": "Price",
        },
        "value": 25,
      },
      Field {
        "category": null,
        "description": "Specifies how long the order remains in effect. Absence of this field is interpreted as DAY. NOTE not applicable to CIV Orders.",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "TimeInForceCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Day (or session)

A buy or sell order that, if not executed expires at the end of the trading day on which it was entered.",
          "group": undefined,
          "id": "59001",
          "name": "Day",
          "sort": 1,
          "tag": 59,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "253",
          "value": "0",
        },
        "name": "TimeInForce",
        "section": null,
        "tag": 59,
        "type": null,
        "value": "0",
      },
      Field {
        "category": null,
        "description": "Account mnemonic as agreed between buy and sell sides, e.g. broker and institution or investor/intermediary and fund manager.",
        "enumeration": null,
        "name": "Account",
        "section": null,
        "tag": 1,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "ABC123ZYX",
      },
      Field {
        "category": null,
        "description": "Instructions for order handling on Broker trading floor",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "HandlInstCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Automated execution order, private, no Broker intervention",
          "group": undefined,
          "id": "21001",
          "name": "AutomatedExecutionNoIntervention",
          "sort": 1,
          "tag": 21,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "1",
        },
        "name": "HandlInst",
        "section": null,
        "tag": 21,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Market used to help identify a security.

Valid values:

See "Appendix 6-C"",
        "enumeration": null,
        "name": "SecurityExchange",
        "section": null,
        "tag": 207,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "false",
            "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
            "pattern": ".*",
            "standard": "XML",
          },
          "name": "Exchange",
        },
        "value": "N",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 47,
        "type": null,
        "value": "A",
      },
      Field {
        "category": null,
        "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
        "enumeration": null,
        "name": "CheckSum",
        "section": null,
        "tag": 10,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "237",
      },
    ],
    "description": "NewOrderSingle",
    "fixVersion": "FIX.4.2",
    "messageSequence": 13,
    "messageString": "8=FIX.4.29=15035=D34=1349=LEH_LZJ0252=20100303-15:21:5256=CCG115=LZJ11=NF 0043/0303201054=138=10055=ADM65=PRA40=244=2559=01=ABC123ZYX21=1207=N47=A10=237",
    "messageType": "D",
    "messageTypeDescription": "The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
    "structure": [
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Hdr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message header

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
              "id": "8",
              "name": "BeginString",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be second field in message)",
              "id": "9",
              "name": "BodyLength",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be third field in message)",
              "id": "35",
              "name": "MsgType",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "49",
              "name": "SenderCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "56",
              "name": "TargetCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "34",
              "name": "MsgSeqNum",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "52",
              "name": "SendingTime",
              "presence": "required",
            },
          ],
          "id": "1024",
          "name": "StandardHeader",
          "type": "component",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "id": "1024",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "ClOrdID",
          "added": "FIX.2.7",
          "baseCategory": "SingleGeneralOrderHandling",
          "baseCategoryAbbrName": "ID",
          "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
          "id": "11",
          "name": "ClOrdID",
          "type": "String",
          "updated": "FIX.Latest",
          "updatedEP": "282",
        },
        "id": "11",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "OrdTyp",
          "added": "FIX.2.7",
          "baseCategory": "SingleGeneralOrderHandling",
          "baseCategoryAbbrName": "Typ",
          "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
          "id": "40",
          "name": "OrdType",
          "type": "OrdTypeCodeSet",
        },
        "id": "40",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Side",
          "added": "FIX.2.7",
          "description": "Side of order (see Volume : "Glossary" for value definitions)",
          "id": "54",
          "name": "Side",
          "type": "SideCodeSet",
        },
        "id": "54",
        "presence": "required",
      },
      {
        "added": "FIX.4.2",
        "data": {
          "abbrName": "TxnTm",
          "added": "FIX.2.7",
          "description": "Timestamp when the business transaction represented by the message occurred.",
          "id": "60",
          "name": "TransactTime",
          "type": "UTCTimestamp",
          "updated": "FIX.5.0SP1",
          "updatedEP": "94",
        },
        "id": "60",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Trlr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message trailer

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, always last field in message)",
              "id": "10",
              "name": "CheckSum",
              "presence": "required",
            },
          ],
          "id": "1025",
          "name": "StandardTrailer",
          "type": "component",
        },
        "id": "1025",
        "presence": "required",
      },
      {
        "added": "FIX.4.3",
        "data": {
          "abbrName": "Instrmt",
          "added": "FIX.4.3",
          "category": "Common",
          "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
          "id": "1003",
          "name": "Instrument",
          "type": "component",
        },
        "id": "1003",
        "presence": "required",
      },
      {
        "added": "FIX.4.3",
        "data": {
          "abbrName": "OrdQty",
          "added": "FIX.4.3",
          "category": "Common",
          "description": "The OrderQtyData component block contains the fields commonly used for indicating the amount or quantity of an order. Note that when this component block is marked as "required" in a message either one of these three fields must be used to identify the amount: OrderQty, CashOrderQty or OrderPercent (in the case of CIV).

",
          "id": "1011",
          "name": "OrderQtyData",
          "type": "component",
        },
        "id": "1011",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "221",
      },
    ],
  },
]
`;

exports[`FIXParser #getField: ExecutionReport should get the correct field 1`] = `
[
  Message {
    "bodyLengthExpected": 266,
    "bodyLengthValid": true,
    "bodyLengthValue": 266,
    "checksumExpected": "136",
    "checksumValid": true,
    "checksumValue": "136",
    "data": [
      Field {
        "category": null,
        "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
        "enumeration": EnumType {
          "added": "FIX.Latest",
          "addedEP": "270",
          "codeSet": "BeginStringCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Session profile FIX.4.2",
          "group": undefined,
          "id": "8001",
          "name": "FIX42",
          "sort": 1,
          "tag": 8,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "FIX.4.2",
        },
        "name": "BeginString",
        "section": null,
        "tag": 8,
        "type": null,
        "value": "FIX.4.2",
      },
      Field {
        "category": null,
        "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
        "enumeration": null,
        "name": "BodyLength",
        "section": null,
        "tag": 9,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the length in bytes. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:nonNegativeInteger",
            "builtin": "false",
            "description": "int field representing the length in bytes. Value must be positive.",
            "standard": "XML",
          },
          "name": "Length",
        },
        "value": 266,
      },
      Field {
        "category": null,
        "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
        "enumeration": EnumType {
          "added": undefined,
          "addedEP": undefined,
          "codeSet": "MsgTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "ExecutionReport

The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
          "group": undefined,
          "id": "35009",
          "name": "ExecutionReport",
          "sort": 9,
          "tag": 35,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "8",
        },
        "name": "MsgType",
        "section": null,
        "tag": 35,
        "type": null,
        "value": "8",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm sending message.",
        "enumeration": null,
        "name": "SenderCompID",
        "section": null,
        "tag": 49,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "ABC",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify receiving firm.",
        "enumeration": null,
        "name": "TargetCompID",
        "section": null,
        "tag": 56,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "XYZ",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify specific message originator (desk, trader, etc.)",
        "enumeration": null,
        "name": "SenderSubID",
        "section": null,
        "tag": 50,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "AZ12",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify specific individual or unit intended to receive message. "ADMIN" reserved for administrative messages not intended for a specific user.",
        "enumeration": null,
        "name": "TargetSubID",
        "section": null,
        "tag": 57,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "NA",
      },
      Field {
        "category": null,
        "description": "Integer message sequence number.",
        "enumeration": null,
        "name": "MsgSeqNum",
        "section": null,
        "tag": 34,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing a message sequence number. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:positiveInteger",
            "builtin": "false",
            "description": "int field representing a message sequence number. Value must be positive.",
            "standard": "XML",
          },
          "name": "SeqNum",
        },
        "value": 833,
      },
      Field {
        "category": null,
        "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
        "enumeration": null,
        "name": "SendingTime",
        "section": null,
        "tag": 52,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20100130-08:00:51.992",
      },
      Field {
        "category": null,
        "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
        "enumeration": null,
        "name": "Symbol",
        "section": null,
        "tag": 55,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "GLD",
      },
      Field {
        "category": null,
        "description": "Security identifier value of SecurityIDSource (22) type (e.g. CUSIP, SEDOL, ISIN, etc). Requires SecurityIDSource.",
        "enumeration": null,
        "name": "SecurityID",
        "section": null,
        "tag": 48,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "PL11YA",
      },
      Field {
        "category": null,
        "description": "Indicates type of security. Security type enumerations are grouped by Product(460) field value. NOTE: Additional values may be used by mutual agreement of the counterparties.",
        "enumeration": EnumType {
          "added": "FIX.4.1",
          "addedEP": undefined,
          "codeSet": "SecurityTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Future",
          "group": "Derivatives",
          "id": "167036",
          "name": "Future",
          "sort": 8,
          "tag": 167,
          "type": "String",
          "updated": "FIX.5.0SP2",
          "updatedEP": "169",
          "value": "FUT",
        },
        "name": "SecurityType",
        "section": null,
        "tag": 167,
        "type": null,
        "value": "FUT",
      },
      Field {
        "category": null,
        "description": "Market used to help identify a security.

Valid values:

See "Appendix 6-C"",
        "enumeration": null,
        "name": "SecurityExchange",
        "section": null,
        "tag": 207,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "false",
            "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
            "pattern": ".*",
            "standard": "XML",
          },
          "name": "Exchange",
        },
        "value": "LIFFE",
      },
      Field {
        "category": null,
        "description": "Account mnemonic as agreed between buy and sell sides, e.g. broker and institution or investor/intermediary and fund manager.",
        "enumeration": null,
        "name": "Account",
        "section": null,
        "tag": 1,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "AA1",
      },
      Field {
        "category": null,
        "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
        "enumeration": null,
        "name": "OrderID",
        "section": null,
        "tag": 37,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "ABC1",
      },
      Field {
        "category": null,
        "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
        "enumeration": null,
        "name": "ExecID",
        "section": null,
        "tag": 17,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "INDNTHDOG",
      },
      Field {
        "category": null,
        "description": "Free format text string

(Note: this field does not have a specified maximum length)",
        "enumeration": null,
        "name": "Text",
        "section": null,
        "tag": 58,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "Fill",
      },
      Field {
        "category": null,
        "description": "Can be used with standardized derivatives vs. the MaturityDate (541) field. Month and Year of the maturity (used for standardized futures and options).

Format:

YYYYMM (e.g. 199903)

YYYYMMDD (e.g. 20030323)

YYYYMMwN (e.g. 200303w) for week

A specific date or can be appended to the MaturityMonthYear. For instance, if multiple standard products exist that mature in the same Year and Month, but actually mature at a different time, a value can be appended, such as "w" or "w2" to indicate week as opposed to week 2 expiration. Likewise, the date (0-3) can be appended to indicate a specific expiration (maturity date).",
        "enumeration": null,
        "name": "MaturityMonthYear",
        "section": null,
        "tag": 200,
        "type": {
          "added": "FIX.4.1",
          "baseType": "String",
          "description": "string field representing month of a year. An optional day of the month can be appended or an optional week code.

Valid formats:

YYYYMM

YYYYMMDD

YYYYMMWW

Valid values:

YYYY = 0000-9999; MM = 01-12; DD = 01-31; WW = w1, w2, w3, w4, w5.",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "false",
            "description": "string field representing month of a year. An optional day of the month can be appended or an optional week code.

Valid formats:

YYYYMM

YYYYMMDD

YYYYMMWW

Valid values:

YYYY = 0000-9999; MM = 01-12; DD = 01-31; WW = w1, w2, w3, w4, w5.",
            "pattern": "\\d{4}(0|1)\\d([0-3wW]\\d)?",
            "standard": "XML",
          },
          "name": "MonthYear",
        },
        "value": "201009",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 205,
        "type": null,
        "value": "13",
      },
      Field {
        "category": null,
        "description": "Quantity (e.g. shares) bought/sold on this (last) fill.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "LastQty",
        "section": null,
        "tag": 32,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 25,
      },
      Field {
        "category": null,
        "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "LeavesQty",
        "section": null,
        "tag": 151,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 0,
      },
      Field {
        "category": null,
        "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "CumQty",
        "section": null,
        "tag": 14,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 25,
      },
      Field {
        "category": null,
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "SideCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Sell

For Securities Financing indicates the delivery of securities or collateral.",
          "group": undefined,
          "id": "54002",
          "name": "Sell",
          "sort": 2,
          "tag": 54,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "254",
          "value": "2",
        },
        "name": "Side",
        "section": null,
        "tag": 54,
        "type": null,
        "value": "2",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "OrdTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Limit",
          "group": undefined,
          "id": "40002",
          "name": "Limit",
          "sort": 2,
          "tag": 40,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "2",
        },
        "name": "OrdType",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 40,
        "type": null,
        "value": "2",
      },
      Field {
        "category": null,
        "description": "Indicates whether the resulting position after a trade should be an opening position or closing position. Used for omnibus accounting - where accounts are held on a gross basis instead of being netted together.",
        "enumeration": EnumType {
          "added": "FIX.4.1",
          "addedEP": undefined,
          "codeSet": "PositionEffectCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Open",
          "group": undefined,
          "id": "77003",
          "name": "Open",
          "sort": 3,
          "tag": 77,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "O",
        },
        "name": "PositionEffect",
        "section": null,
        "tag": 77,
        "type": null,
        "value": "O",
      },
      Field {
        "category": null,
        "description": "Specifies how long the order remains in effect. Absence of this field is interpreted as DAY. NOTE not applicable to CIV Orders.",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "TimeInForceCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Day (or session)

A buy or sell order that, if not executed expires at the end of the trading day on which it was entered.",
          "group": undefined,
          "id": "59001",
          "name": "Day",
          "sort": 1,
          "tag": 59,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "253",
          "value": "0",
        },
        "name": "TimeInForce",
        "section": null,
        "tag": 59,
        "type": null,
        "value": "0",
      },
      Field {
        "category": null,
        "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
        "enumeration": null,
        "name": "ExecType",
        "section": null,
        "tag": 150,
        "type": null,
        "value": "2",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 20,
        "type": null,
        "value": "0",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "OrdStatusCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Filled",
          "group": undefined,
          "id": "39003",
          "name": "Filled",
          "sort": 3,
          "tag": 39,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "2",
        },
        "name": "OrdStatus",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 39,
        "type": null,
        "value": "2",
      },
      Field {
        "category": null,
        "description": "Used to indicate how the multi-legged security (e.g. option strategies, spreads, etc.) is being reported.",
        "enumeration": EnumType {
          "added": "FIX.4.2",
          "addedEP": undefined,
          "codeSet": "MultiLegReportingTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Single security (default if not specified)",
          "group": undefined,
          "id": "442001",
          "name": "SingleSecurity",
          "sort": 1,
          "tag": 442,
          "type": "char",
          "updated": "FIX.5.0SP1",
          "updatedEP": "95",
          "value": "1",
        },
        "name": "MultiLegReportingType",
        "section": null,
        "tag": 442,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Price per unit of quantity (e.g. per share)",
        "enumeration": null,
        "name": "Price",
        "section": null,
        "tag": 44,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
            "standard": "XML",
          },
          "name": "Price",
        },
        "value": 99.06,
      },
      Field {
        "category": null,
        "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "OrderQty",
        "section": null,
        "tag": 38,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 25,
      },
      Field {
        "category": null,
        "description": "Price of this (last) fill.",
        "enumeration": null,
        "name": "LastPx",
        "section": null,
        "tag": 31,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
            "standard": "XML",
          },
          "name": "Price",
        },
        "value": 99.06,
      },
      Field {
        "category": null,
        "description": "Calculated average price of all fills on this order.

For Fixed Income trades AvgPx is always expressed as percent-of-par, regardless of the PriceType (423) of LastPx (31). I.e., AvgPx will contain an average of percent-of-par values (see LastParPx (669)) for issues traded in Yield, Spread or Discount.",
        "enumeration": null,
        "name": "AvgPx",
        "section": null,
        "tag": 6,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
            "standard": "XML",
          },
          "name": "Price",
        },
        "value": 99.06,
      },
      Field {
        "category": null,
        "description": "Timestamp when the business transaction represented by the message occurred.",
        "enumeration": null,
        "name": "TransactTime",
        "section": null,
        "tag": 60,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20100130-08:00:52",
      },
      Field {
        "category": null,
        "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
        "enumeration": null,
        "name": "CheckSum",
        "section": null,
        "tag": 10,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "136",
      },
    ],
    "description": "ExecutionReport",
    "fixVersion": "FIX.4.2",
    "messageSequence": 833,
    "messageString": "8=FIX.4.29=26635=849=ABC56=XYZ50=AZ1257=NA34=83352=20100130-08:00:51.99255=GLD48=PL11YA167=FUT207=LIFFE1=AA137=ABC117=INDNTHDOG58=Fill200=201009205=1332=25151=014=2554=240=277=O59=0150=220=039=2442=144=99.0638=2531=99.066=99.0660=20100130-08:00:5210=136",
    "messageType": "8",
    "messageTypeDescription": "The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
    "structure": [
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Hdr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message header

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
              "id": "8",
              "name": "BeginString",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be second field in message)",
              "id": "9",
              "name": "BodyLength",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be third field in message)",
              "id": "35",
              "name": "MsgType",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "49",
              "name": "SenderCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "56",
              "name": "TargetCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "34",
              "name": "MsgSeqNum",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "52",
              "name": "SendingTime",
              "presence": "required",
            },
          ],
          "id": "1024",
          "name": "StandardHeader",
          "type": "component",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "id": "1024",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "CumQty",
          "added": "FIX.2.7",
          "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
          "id": "14",
          "name": "CumQty",
          "type": "Qty",
        },
        "id": "14",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "ExecID",
          "added": "FIX.2.7",
          "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
          "id": "17",
          "name": "ExecID",
          "type": "String",
          "updated": "FIX.5.0SP1",
          "updatedEP": "95",
        },
        "id": "17",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "OrdID",
          "added": "FIX.2.7",
          "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
          "id": "37",
          "name": "OrderID",
          "type": "String",
        },
        "id": "37",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "OrdStat",
          "added": "FIX.2.7",
          "baseCategory": "SingleGeneralOrderHandling",
          "baseCategoryAbbrName": "Stat",
          "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
          "id": "39",
          "name": "OrdStatus",
          "type": "OrdStatusCodeSet",
        },
        "id": "39",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Side",
          "added": "FIX.2.7",
          "description": "Side of order (see Volume : "Glossary" for value definitions)",
          "id": "54",
          "name": "Side",
          "type": "SideCodeSet",
        },
        "id": "54",
        "presence": "required",
      },
      {
        "added": "FIX.4.1",
        "data": {
          "abbrName": "ExecTyp",
          "added": "FIX.4.1",
          "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
          "id": "150",
          "name": "ExecType",
          "type": "ExecTypeCodeSet",
          "updated": "FIX.5.0SP2",
          "updatedEP": "131",
        },
        "id": "150",
        "presence": "required",
      },
      {
        "added": "FIX.4.1",
        "data": {
          "abbrName": "LeavesQty",
          "added": "FIX.4.1",
          "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
          "id": "151",
          "name": "LeavesQty",
          "type": "Qty",
        },
        "id": "151",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Trlr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message trailer

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, always last field in message)",
              "id": "10",
              "name": "CheckSum",
              "presence": "required",
            },
          ],
          "id": "1025",
          "name": "StandardTrailer",
          "type": "component",
        },
        "id": "1025",
        "presence": "required",
      },
      {
        "added": "FIX.4.3",
        "data": {
          "abbrName": "Instrmt",
          "added": "FIX.4.3",
          "category": "Common",
          "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
          "id": "1003",
          "name": "Instrument",
          "type": "component",
        },
        "id": "1003",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
    ],
  },
]
`;

exports[`FIXParser #parse: ExecutionReport should match snapshot 1`] = `
Message {
  "bodyLengthExpected": 227,
  "bodyLengthValid": true,
  "bodyLengthValue": 227,
  "checksumExpected": "205",
  "checksumValid": true,
  "checksumValue": "205",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX.4.2",
        "group": undefined,
        "id": "8001",
        "name": "FIX42",
        "sort": 1,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.2",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.2",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 227,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "ExecutionReport

The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
        "group": undefined,
        "id": "35009",
        "name": "ExecutionReport",
        "sort": 9,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "8",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "8",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify the firm targeted to receive the message if the message is delivered by a third party i.e. the third party firm identifier would be delivered in the TargetCompID (56) field and the ultimate receiver firm ID in this field.",
      "enumeration": null,
      "name": "DeliverToCompID",
      "section": null,
      "tag": 128,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "XYZ",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 4,
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "CCG",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "ABC_DEFG01",
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20090323-15:40:35",
    },
    Field {
      "category": null,
      "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
      "enumeration": null,
      "name": "Symbol",
      "section": null,
      "tag": 55,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "CVS",
    },
    Field {
      "category": null,
      "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
      "enumeration": null,
      "name": "OrderID",
      "section": null,
      "tag": 37,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "NF 0542/03232009",
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
      "enumeration": null,
      "name": "ClOrdID",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 11,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "NF 0542/03232009",
    },
    Field {
      "category": null,
      "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
      "enumeration": null,
      "name": "ExecID",
      "section": null,
      "tag": 17,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "0",
    },
    Field {
      "category": null,
      "description": null,
      "enumeration": null,
      "name": null,
      "section": null,
      "tag": 20,
      "type": null,
      "value": "0",
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "OrdStatusCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "New",
        "group": undefined,
        "id": "39001",
        "name": "New",
        "sort": 1,
        "tag": 39,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "0",
      },
      "name": "OrdStatus",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 39,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
      "enumeration": EnumType {
        "added": "FIX.4.1",
        "addedEP": undefined,
        "codeSet": "ExecTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "New",
        "group": undefined,
        "id": "150001",
        "name": "New",
        "sort": 1,
        "tag": 150,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "0",
      },
      "name": "ExecType",
      "section": null,
      "tag": 150,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Side of order (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "SideCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Buy

For Securities Financing indicates the receipt of securities or collateral.",
        "group": undefined,
        "id": "54001",
        "name": "Buy",
        "sort": 1,
        "tag": 54,
        "type": "char",
        "updated": "FIX.5.0SP2",
        "updatedEP": "254",
        "value": "1",
      },
      "name": "Side",
      "section": null,
      "tag": 54,
      "type": null,
      "value": "1",
    },
    Field {
      "category": null,
      "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "OrderQty",
      "section": null,
      "tag": 38,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 100,
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "OrdTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Market",
        "group": undefined,
        "id": "40001",
        "name": "Market",
        "sort": 1,
        "tag": 40,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "1",
      },
      "name": "OrdType",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 40,
      "type": null,
      "value": "1",
    },
    Field {
      "category": null,
      "description": "Specifies how long the order remains in effect. Absence of this field is interpreted as DAY. NOTE not applicable to CIV Orders.",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "TimeInForceCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Day (or session)

A buy or sell order that, if not executed expires at the end of the trading day on which it was entered.",
        "group": undefined,
        "id": "59001",
        "name": "Day",
        "sort": 1,
        "tag": 59,
        "type": "char",
        "updated": "FIX.5.0SP2",
        "updatedEP": "253",
        "value": "0",
      },
      "name": "TimeInForce",
      "section": null,
      "tag": 59,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Price of this (last) fill.",
      "enumeration": null,
      "name": "LastPx",
      "section": null,
      "tag": 31,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "standard": "XML",
        },
        "name": "Price",
      },
      "value": 0,
    },
    Field {
      "category": null,
      "description": "Quantity (e.g. shares) bought/sold on this (last) fill.

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "LastQty",
      "section": null,
      "tag": 32,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 0,
    },
    Field {
      "category": null,
      "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "CumQty",
      "section": null,
      "tag": 14,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 0,
    },
    Field {
      "category": null,
      "description": "Calculated average price of all fills on this order.

For Fixed Income trades AvgPx is always expressed as percent-of-par, regardless of the PriceType (423) of LastPx (31). I.e., AvgPx will contain an average of percent-of-par values (see LastParPx (669)) for issues traded in Yield, Spread or Discount.",
      "enumeration": null,
      "name": "AvgPx",
      "section": null,
      "tag": 6,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "standard": "XML",
        },
        "name": "Price",
      },
      "value": 0,
    },
    Field {
      "category": null,
      "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "LeavesQty",
      "section": null,
      "tag": 151,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 100,
    },
    Field {
      "category": null,
      "description": "Timestamp when the business transaction represented by the message occurred.",
      "enumeration": null,
      "name": "TransactTime",
      "section": null,
      "tag": 60,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20090323-15:40:30",
    },
    Field {
      "category": null,
      "description": "Free format text string

(Note: this field does not have a specified maximum length)",
      "enumeration": null,
      "name": "Text",
      "section": null,
      "tag": 58,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "New order",
    },
    Field {
      "category": null,
      "description": "Market of execution for last fill, or an indication of the market where an order was routed

Valid values:

See "Appendix 6-C"

In the context of ESMA RTS 1 Annex I, Table 3, Field 6 "Venue of Execution" it is required that the "venue where the transaction was executed" be identified using ISO 10383 (MIC). Additionally, ESMA requires the use of "MIC code 'XOFF' for financial instruments admitted to trading or traded on a trading venue, where the transaction on that financial instrument is not executed on a trading venue, systematic internaliser or organized trading platform outside of the Union. Use 'SINT' for financial instruments admitted to trading or traded on a trading venue, where the transaction is executed on a systematic internaliser."",
      "enumeration": null,
      "name": "LastMkt",
      "section": null,
      "tag": 30,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "false",
          "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
          "pattern": ".*",
          "standard": "XML",
        },
        "name": "Exchange",
      },
      "value": "N",
    },
    Field {
      "category": null,
      "description": "Market used to help identify a security.

Valid values:

See "Appendix 6-C"",
      "enumeration": null,
      "name": "SecurityExchange",
      "section": null,
      "tag": 207,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "false",
          "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
          "pattern": ".*",
          "standard": "XML",
        },
        "name": "Exchange",
      },
      "value": "N",
    },
    Field {
      "category": null,
      "description": null,
      "enumeration": null,
      "name": null,
      "section": null,
      "tag": 47,
      "type": null,
      "value": "A",
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "205",
    },
  ],
  "description": "ExecutionReport",
  "fixVersion": "FIX.4.2",
  "messageSequence": 4,
  "messageString": "8=FIX.4.29=22735=8128=XYZ34=449=CCG56=ABC_DEFG0152=20090323-15:40:3555=CVS37=NF 0542/0323200911=NF 0542/0323200917=020=039=0150=054=138=10040=159=031=032=014=06=0151=10060=20090323-15:40:3058=New order30=N207=N47=A10=205",
  "messageType": "8",
  "messageTypeDescription": "The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
  "structure": [
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "CumQty",
        "added": "FIX.2.7",
        "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
        "id": "14",
        "name": "CumQty",
        "type": "Qty",
      },
      "id": "14",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "ExecID",
        "added": "FIX.2.7",
        "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
        "id": "17",
        "name": "ExecID",
        "type": "String",
        "updated": "FIX.5.0SP1",
        "updatedEP": "95",
      },
      "id": "17",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "188",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "OrdID",
        "added": "FIX.2.7",
        "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
        "id": "37",
        "name": "OrderID",
        "type": "String",
      },
      "id": "37",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "OrdStat",
        "added": "FIX.2.7",
        "baseCategory": "SingleGeneralOrderHandling",
        "baseCategoryAbbrName": "Stat",
        "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "id": "39",
        "name": "OrdStatus",
        "type": "OrdStatusCodeSet",
      },
      "id": "39",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Side",
        "added": "FIX.2.7",
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "id": "54",
        "name": "Side",
        "type": "SideCodeSet",
      },
      "id": "54",
      "presence": "required",
    },
    {
      "added": "FIX.4.1",
      "data": {
        "abbrName": "ExecTyp",
        "added": "FIX.4.1",
        "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
        "id": "150",
        "name": "ExecType",
        "type": "ExecTypeCodeSet",
        "updated": "FIX.5.0SP2",
        "updatedEP": "131",
      },
      "id": "150",
      "presence": "required",
    },
    {
      "added": "FIX.4.1",
      "data": {
        "abbrName": "LeavesQty",
        "added": "FIX.4.1",
        "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
        "id": "151",
        "name": "LeavesQty",
        "type": "Qty",
      },
      "id": "151",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "188",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "Instrmt",
        "added": "FIX.4.3",
        "category": "Common",
        "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
        "id": "1003",
        "name": "Instrument",
        "type": "component",
      },
      "id": "1003",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "188",
    },
  ],
}
`;

exports[`FIXParser #parse: ExecutionReport should match snapshot 2`] = `
Message {
  "bodyLengthExpected": 254,
  "bodyLengthValid": true,
  "bodyLengthValue": 254,
  "checksumExpected": "086",
  "checksumValid": false,
  "checksumValue": "037",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX.4.2",
        "group": undefined,
        "id": "8001",
        "name": "FIX42",
        "sort": 1,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.2",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.2",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 254,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "ExecutionReport

The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
        "group": undefined,
        "id": "35009",
        "name": "ExecutionReport",
        "sort": 9,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "8",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "8",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify the firm targeted to receive the message if the message is delivered by a third party i.e. the third party firm identifier would be delivered in the TargetCompID (56) field and the ultimate receiver firm ID in this field.",
      "enumeration": null,
      "name": "DeliverToCompID",
      "section": null,
      "tag": 128,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "XYZ",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 124,
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "CCG",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "ABC_DEFG04",
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20100208-18:51:42",
    },
    Field {
      "category": null,
      "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
      "enumeration": null,
      "name": "Symbol",
      "section": null,
      "tag": 55,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "RRC",
    },
    Field {
      "category": null,
      "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
      "enumeration": null,
      "name": "OrderID",
      "section": null,
      "tag": 37,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "NF 0015/02082010",
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
      "enumeration": null,
      "name": "ClOrdID",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 11,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "NF 0015/02082010",
    },
    Field {
      "category": null,
      "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
      "enumeration": null,
      "name": "ExecID",
      "section": null,
      "tag": 17,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "0",
    },
    Field {
      "category": null,
      "description": null,
      "enumeration": null,
      "name": null,
      "section": null,
      "tag": 20,
      "type": null,
      "value": "0",
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "OrdStatusCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "New",
        "group": undefined,
        "id": "39001",
        "name": "New",
        "sort": 1,
        "tag": 39,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "0",
      },
      "name": "OrdStatus",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 39,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
      "enumeration": EnumType {
        "added": "FIX.4.1",
        "addedEP": undefined,
        "codeSet": "ExecTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "New",
        "group": undefined,
        "id": "150001",
        "name": "New",
        "sort": 1,
        "tag": 150,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "0",
      },
      "name": "ExecType",
      "section": null,
      "tag": 150,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Side of order (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "SideCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Sell

For Securities Financing indicates the delivery of securities or collateral.",
        "group": undefined,
        "id": "54002",
        "name": "Sell",
        "sort": 2,
        "tag": 54,
        "type": "char",
        "updated": "FIX.5.0SP2",
        "updatedEP": "254",
        "value": "2",
      },
      "name": "Side",
      "section": null,
      "tag": 54,
      "type": null,
      "value": "2",
    },
    Field {
      "category": null,
      "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "OrderQty",
      "section": null,
      "tag": 38,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 1000,
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "OrdTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Limit",
        "group": undefined,
        "id": "40002",
        "name": "Limit",
        "sort": 2,
        "tag": 40,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "2",
      },
      "name": "OrdType",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 40,
      "type": null,
      "value": "2",
    },
    Field {
      "category": null,
      "description": "Price per unit of quantity (e.g. per share)",
      "enumeration": null,
      "name": "Price",
      "section": null,
      "tag": 44,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "standard": "XML",
        },
        "name": "Price",
      },
      "value": 55.36,
    },
    Field {
      "category": null,
      "description": "Specifies how long the order remains in effect. Absence of this field is interpreted as DAY. NOTE not applicable to CIV Orders.",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "TimeInForceCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Day (or session)

A buy or sell order that, if not executed expires at the end of the trading day on which it was entered.",
        "group": undefined,
        "id": "59001",
        "name": "Day",
        "sort": 1,
        "tag": 59,
        "type": "char",
        "updated": "FIX.5.0SP2",
        "updatedEP": "253",
        "value": "0",
      },
      "name": "TimeInForce",
      "section": null,
      "tag": 59,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Price of this (last) fill.",
      "enumeration": null,
      "name": "LastPx",
      "section": null,
      "tag": 31,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "standard": "XML",
        },
        "name": "Price",
      },
      "value": 0,
    },
    Field {
      "category": null,
      "description": "Quantity (e.g. shares) bought/sold on this (last) fill.

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "LastQty",
      "section": null,
      "tag": 32,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 0,
    },
    Field {
      "category": null,
      "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "CumQty",
      "section": null,
      "tag": 14,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 0,
    },
    Field {
      "category": null,
      "description": "Calculated average price of all fills on this order.

For Fixed Income trades AvgPx is always expressed as percent-of-par, regardless of the PriceType (423) of LastPx (31). I.e., AvgPx will contain an average of percent-of-par values (see LastParPx (669)) for issues traded in Yield, Spread or Discount.",
      "enumeration": null,
      "name": "AvgPx",
      "section": null,
      "tag": 6,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "standard": "XML",
        },
        "name": "Price",
      },
      "value": 0,
    },
    Field {
      "category": null,
      "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "LeavesQty",
      "section": null,
      "tag": 151,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 1000,
    },
    Field {
      "category": null,
      "description": "Timestamp when the business transaction represented by the message occurred.",
      "enumeration": null,
      "name": "TransactTime",
      "section": null,
      "tag": 60,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20100208-18:51:42",
    },
    Field {
      "category": null,
      "description": "Free format text string

(Note: this field does not have a specified maximum length)",
      "enumeration": null,
      "name": "Text",
      "section": null,
      "tag": 58,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "New order",
    },
    Field {
      "category": null,
      "description": "Market of execution for last fill, or an indication of the market where an order was routed

Valid values:

See "Appendix 6-C"

In the context of ESMA RTS 1 Annex I, Table 3, Field 6 "Venue of Execution" it is required that the "venue where the transaction was executed" be identified using ISO 10383 (MIC). Additionally, ESMA requires the use of "MIC code 'XOFF' for financial instruments admitted to trading or traded on a trading venue, where the transaction on that financial instrument is not executed on a trading venue, systematic internaliser or organized trading platform outside of the Union. Use 'SINT' for financial instruments admitted to trading or traded on a trading venue, where the transaction is executed on a systematic internaliser."",
      "enumeration": null,
      "name": "LastMkt",
      "section": null,
      "tag": 30,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "false",
          "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
          "pattern": ".*",
          "standard": "XML",
        },
        "name": "Exchange",
      },
      "value": "N",
    },
    Field {
      "category": null,
      "description": "Account mnemonic as agreed between buy and sell sides, e.g. broker and institution or investor/intermediary and fund manager.",
      "enumeration": null,
      "name": "Account",
      "section": null,
      "tag": 1,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "ABC123ZYX",
    },
    Field {
      "category": null,
      "description": "Market used to help identify a security.

Valid values:

See "Appendix 6-C"",
      "enumeration": null,
      "name": "SecurityExchange",
      "section": null,
      "tag": 207,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "false",
          "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
          "pattern": ".*",
          "standard": "XML",
        },
        "name": "Exchange",
      },
      "value": "N",
    },
    Field {
      "category": null,
      "description": null,
      "enumeration": null,
      "name": null,
      "section": null,
      "tag": 47,
      "type": null,
      "value": "A",
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "037",
    },
  ],
  "description": "ExecutionReport",
  "fixVersion": "FIX.4.2",
  "messageSequence": 124,
  "messageString": "8=FIX.4.29=25435=8128=XYZ34=12449=CCG56=ABC_DEFG0452=20100208-18:51:4255=RRC37=NF 0015/0208201011=NF 0015/0208201017=020=039=0150=054=238=100040=244=55.360059=031=032=014=06=0151=100060=20100208-18:51:4258=New order30=N1=ABC123ZYX207=N47=A10=037",
  "messageType": "8",
  "messageTypeDescription": "The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
  "structure": [
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "CumQty",
        "added": "FIX.2.7",
        "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
        "id": "14",
        "name": "CumQty",
        "type": "Qty",
      },
      "id": "14",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "ExecID",
        "added": "FIX.2.7",
        "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
        "id": "17",
        "name": "ExecID",
        "type": "String",
        "updated": "FIX.5.0SP1",
        "updatedEP": "95",
      },
      "id": "17",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "188",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "OrdID",
        "added": "FIX.2.7",
        "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
        "id": "37",
        "name": "OrderID",
        "type": "String",
      },
      "id": "37",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "OrdStat",
        "added": "FIX.2.7",
        "baseCategory": "SingleGeneralOrderHandling",
        "baseCategoryAbbrName": "Stat",
        "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "id": "39",
        "name": "OrdStatus",
        "type": "OrdStatusCodeSet",
      },
      "id": "39",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Side",
        "added": "FIX.2.7",
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "id": "54",
        "name": "Side",
        "type": "SideCodeSet",
      },
      "id": "54",
      "presence": "required",
    },
    {
      "added": "FIX.4.1",
      "data": {
        "abbrName": "ExecTyp",
        "added": "FIX.4.1",
        "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
        "id": "150",
        "name": "ExecType",
        "type": "ExecTypeCodeSet",
        "updated": "FIX.5.0SP2",
        "updatedEP": "131",
      },
      "id": "150",
      "presence": "required",
    },
    {
      "added": "FIX.4.1",
      "data": {
        "abbrName": "LeavesQty",
        "added": "FIX.4.1",
        "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
        "id": "151",
        "name": "LeavesQty",
        "type": "Qty",
      },
      "id": "151",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "188",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "Instrmt",
        "added": "FIX.4.3",
        "category": "Common",
        "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
        "id": "1003",
        "name": "Instrument",
        "type": "component",
      },
      "id": "1003",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "188",
    },
  ],
}
`;

exports[`FIXParser #parse: ExecutionReport should match snapshot 3`] = `
Message {
  "bodyLengthExpected": 235,
  "bodyLengthValid": true,
  "bodyLengthValue": 235,
  "checksumExpected": "170",
  "checksumValid": false,
  "checksumValue": "051",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX.4.2",
        "group": undefined,
        "id": "8001",
        "name": "FIX42",
        "sort": 1,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.2",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.2",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 235,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "ExecutionReport

The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
        "group": undefined,
        "id": "35009",
        "name": "ExecutionReport",
        "sort": 9,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "8",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "8",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify specific message originator (desk, trader, etc.)",
      "enumeration": null,
      "name": "SenderSubID",
      "section": null,
      "tag": 50,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "ARCA",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify the firm targeted to receive the message if the message is delivered by a third party i.e. the third party firm identifier would be delivered in the TargetCompID (56) field and the ultimate receiver firm ID in this field.",
      "enumeration": null,
      "name": "DeliverToCompID",
      "section": null,
      "tag": 128,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "XYZ",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 11,
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "CCG",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "ABC_DEFG04",
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20091216-17:23:51",
    },
    Field {
      "category": null,
      "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
      "enumeration": null,
      "name": "Symbol",
      "section": null,
      "tag": 55,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "MMM",
    },
    Field {
      "category": null,
      "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
      "enumeration": null,
      "name": "OrderID",
      "section": null,
      "tag": 37,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "0000002",
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
      "enumeration": null,
      "name": "ClOrdID",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 11,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "NF 0921/12162009",
    },
    Field {
      "category": null,
      "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
      "enumeration": null,
      "name": "ExecID",
      "section": null,
      "tag": 17,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "1000002",
    },
    Field {
      "category": null,
      "description": null,
      "enumeration": null,
      "name": null,
      "section": null,
      "tag": 20,
      "type": null,
      "value": "0",
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "OrdStatusCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "New",
        "group": undefined,
        "id": "39001",
        "name": "New",
        "sort": 1,
        "tag": 39,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "0",
      },
      "name": "OrdStatus",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 39,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
      "enumeration": EnumType {
        "added": "FIX.4.1",
        "addedEP": undefined,
        "codeSet": "ExecTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "New",
        "group": undefined,
        "id": "150001",
        "name": "New",
        "sort": 1,
        "tag": 150,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "0",
      },
      "name": "ExecType",
      "section": null,
      "tag": 150,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Side of order (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "SideCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Sell

For Securities Financing indicates the delivery of securities or collateral.",
        "group": undefined,
        "id": "54002",
        "name": "Sell",
        "sort": 2,
        "tag": 54,
        "type": "char",
        "updated": "FIX.5.0SP2",
        "updatedEP": "254",
        "value": "2",
      },
      "name": "Side",
      "section": null,
      "tag": 54,
      "type": null,
      "value": "2",
    },
    Field {
      "category": null,
      "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "OrderQty",
      "section": null,
      "tag": 38,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 1000,
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "OrdTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Market",
        "group": undefined,
        "id": "40001",
        "name": "Market",
        "sort": 1,
        "tag": 40,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "1",
      },
      "name": "OrdType",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 40,
      "type": null,
      "value": "1",
    },
    Field {
      "category": null,
      "description": "Specifies how long the order remains in effect. Absence of this field is interpreted as DAY. NOTE not applicable to CIV Orders.",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "TimeInForceCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Day (or session)

A buy or sell order that, if not executed expires at the end of the trading day on which it was entered.",
        "group": undefined,
        "id": "59001",
        "name": "Day",
        "sort": 1,
        "tag": 59,
        "type": "char",
        "updated": "FIX.5.0SP2",
        "updatedEP": "253",
        "value": "0",
      },
      "name": "TimeInForce",
      "section": null,
      "tag": 59,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Price of this (last) fill.",
      "enumeration": null,
      "name": "LastPx",
      "section": null,
      "tag": 31,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "standard": "XML",
        },
        "name": "Price",
      },
      "value": 0,
    },
    Field {
      "category": null,
      "description": "Quantity (e.g. shares) bought/sold on this (last) fill.

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "LastQty",
      "section": null,
      "tag": 32,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 0,
    },
    Field {
      "category": null,
      "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "CumQty",
      "section": null,
      "tag": 14,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 0,
    },
    Field {
      "category": null,
      "description": "Calculated average price of all fills on this order.

For Fixed Income trades AvgPx is always expressed as percent-of-par, regardless of the PriceType (423) of LastPx (31). I.e., AvgPx will contain an average of percent-of-par values (see LastParPx (669)) for issues traded in Yield, Spread or Discount.",
      "enumeration": null,
      "name": "AvgPx",
      "section": null,
      "tag": 6,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "standard": "XML",
        },
        "name": "Price",
      },
      "value": 0,
    },
    Field {
      "category": null,
      "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "LeavesQty",
      "section": null,
      "tag": 151,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 1000,
    },
    Field {
      "category": null,
      "description": "Timestamp when the business transaction represented by the message occurred.",
      "enumeration": null,
      "name": "TransactTime",
      "section": null,
      "tag": 60,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20091216-17:23:52",
    },
    Field {
      "category": null,
      "description": "Free format text string

(Note: this field does not have a specified maximum length)",
      "enumeration": null,
      "name": "Text",
      "section": null,
      "tag": 58,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "New order",
    },
    Field {
      "category": null,
      "description": "Market used to help identify a security.

Valid values:

See "Appendix 6-C"",
      "enumeration": null,
      "name": "SecurityExchange",
      "section": null,
      "tag": 207,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "false",
          "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
          "pattern": ".*",
          "standard": "XML",
        },
        "name": "Exchange",
      },
      "value": "N",
    },
    Field {
      "category": null,
      "description": null,
      "enumeration": null,
      "name": null,
      "section": null,
      "tag": 9570,
      "type": null,
      "value": "N/MP",
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "051",
    },
  ],
  "description": "ExecutionReport",
  "fixVersion": "FIX.4.2",
  "messageSequence": 11,
  "messageString": "8=FIX.4.29=23535=850=ARCA128=XYZ34=1149=CCG56=ABC_DEFG0452=20091216-17:23:5155=MMM37=000000211=NF 0921/1216200917=100000220=039=0150=054=238=100040=159=031=032=014=06=0151=100060=20091216-17:23:5258=New order207=N9570=N/MP10=051",
  "messageType": "8",
  "messageTypeDescription": "The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
  "structure": [
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "CumQty",
        "added": "FIX.2.7",
        "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
        "id": "14",
        "name": "CumQty",
        "type": "Qty",
      },
      "id": "14",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "ExecID",
        "added": "FIX.2.7",
        "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
        "id": "17",
        "name": "ExecID",
        "type": "String",
        "updated": "FIX.5.0SP1",
        "updatedEP": "95",
      },
      "id": "17",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "188",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "OrdID",
        "added": "FIX.2.7",
        "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
        "id": "37",
        "name": "OrderID",
        "type": "String",
      },
      "id": "37",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "OrdStat",
        "added": "FIX.2.7",
        "baseCategory": "SingleGeneralOrderHandling",
        "baseCategoryAbbrName": "Stat",
        "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "id": "39",
        "name": "OrdStatus",
        "type": "OrdStatusCodeSet",
      },
      "id": "39",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Side",
        "added": "FIX.2.7",
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "id": "54",
        "name": "Side",
        "type": "SideCodeSet",
      },
      "id": "54",
      "presence": "required",
    },
    {
      "added": "FIX.4.1",
      "data": {
        "abbrName": "ExecTyp",
        "added": "FIX.4.1",
        "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
        "id": "150",
        "name": "ExecType",
        "type": "ExecTypeCodeSet",
        "updated": "FIX.5.0SP2",
        "updatedEP": "131",
      },
      "id": "150",
      "presence": "required",
    },
    {
      "added": "FIX.4.1",
      "data": {
        "abbrName": "LeavesQty",
        "added": "FIX.4.1",
        "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
        "id": "151",
        "name": "LeavesQty",
        "type": "Qty",
      },
      "id": "151",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "188",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "Instrmt",
        "added": "FIX.4.3",
        "category": "Common",
        "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
        "id": "1003",
        "name": "Instrument",
        "type": "component",
      },
      "id": "1003",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "188",
    },
  ],
}
`;

exports[`FIXParser #parse: ExecutionReport should match snapshot 4`] = `
Message {
  "bodyLengthExpected": 253,
  "bodyLengthValid": true,
  "bodyLengthValue": 253,
  "checksumExpected": "033",
  "checksumValid": false,
  "checksumValue": "240",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX.4.2",
        "group": undefined,
        "id": "8001",
        "name": "FIX42",
        "sort": 1,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.2",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.2",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 253,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "ExecutionReport

The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
        "group": undefined,
        "id": "35009",
        "name": "ExecutionReport",
        "sort": 9,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "8",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "8",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify the firm targeted to receive the message if the message is delivered by a third party i.e. the third party firm identifier would be delivered in the TargetCompID (56) field and the ultimate receiver firm ID in this field.",
      "enumeration": null,
      "name": "DeliverToCompID",
      "section": null,
      "tag": 128,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "XYZ",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 215,
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "CCG",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "ABC_DEFG04",
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20100208-19:36:45",
    },
    Field {
      "category": null,
      "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
      "enumeration": null,
      "name": "Symbol",
      "section": null,
      "tag": 55,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "VOD",
    },
    Field {
      "category": null,
      "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
      "enumeration": null,
      "name": "OrderID",
      "section": null,
      "tag": 37,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "NF 0016/02082010",
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
      "enumeration": null,
      "name": "ClOrdID",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 11,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "NF 0016/02082010",
    },
    Field {
      "category": null,
      "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
      "enumeration": null,
      "name": "ExecID",
      "section": null,
      "tag": 17,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "0",
    },
    Field {
      "category": null,
      "description": null,
      "enumeration": null,
      "name": null,
      "section": null,
      "tag": 20,
      "type": null,
      "value": "0",
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "OrdStatusCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "New",
        "group": undefined,
        "id": "39001",
        "name": "New",
        "sort": 1,
        "tag": 39,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "0",
      },
      "name": "OrdStatus",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 39,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
      "enumeration": EnumType {
        "added": "FIX.4.1",
        "addedEP": undefined,
        "codeSet": "ExecTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "New",
        "group": undefined,
        "id": "150001",
        "name": "New",
        "sort": 1,
        "tag": 150,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "0",
      },
      "name": "ExecType",
      "section": null,
      "tag": 150,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Side of order (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "SideCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Buy

For Securities Financing indicates the receipt of securities or collateral.",
        "group": undefined,
        "id": "54001",
        "name": "Buy",
        "sort": 1,
        "tag": 54,
        "type": "char",
        "updated": "FIX.5.0SP2",
        "updatedEP": "254",
        "value": "1",
      },
      "name": "Side",
      "section": null,
      "tag": 54,
      "type": null,
      "value": "1",
    },
    Field {
      "category": null,
      "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "OrderQty",
      "section": null,
      "tag": 38,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 1000,
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "OrdTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Limit",
        "group": undefined,
        "id": "40002",
        "name": "Limit",
        "sort": 2,
        "tag": 40,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "2",
      },
      "name": "OrdType",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 40,
      "type": null,
      "value": "2",
    },
    Field {
      "category": null,
      "description": "Price per unit of quantity (e.g. per share)",
      "enumeration": null,
      "name": "Price",
      "section": null,
      "tag": 44,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "standard": "XML",
        },
        "name": "Price",
      },
      "value": 0.995,
    },
    Field {
      "category": null,
      "description": "Specifies how long the order remains in effect. Absence of this field is interpreted as DAY. NOTE not applicable to CIV Orders.",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "TimeInForceCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Day (or session)

A buy or sell order that, if not executed expires at the end of the trading day on which it was entered.",
        "group": undefined,
        "id": "59001",
        "name": "Day",
        "sort": 1,
        "tag": 59,
        "type": "char",
        "updated": "FIX.5.0SP2",
        "updatedEP": "253",
        "value": "0",
      },
      "name": "TimeInForce",
      "section": null,
      "tag": 59,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Price of this (last) fill.",
      "enumeration": null,
      "name": "LastPx",
      "section": null,
      "tag": 31,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "standard": "XML",
        },
        "name": "Price",
      },
      "value": 0,
    },
    Field {
      "category": null,
      "description": "Quantity (e.g. shares) bought/sold on this (last) fill.

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "LastQty",
      "section": null,
      "tag": 32,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 0,
    },
    Field {
      "category": null,
      "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "CumQty",
      "section": null,
      "tag": 14,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 0,
    },
    Field {
      "category": null,
      "description": "Calculated average price of all fills on this order.

For Fixed Income trades AvgPx is always expressed as percent-of-par, regardless of the PriceType (423) of LastPx (31). I.e., AvgPx will contain an average of percent-of-par values (see LastParPx (669)) for issues traded in Yield, Spread or Discount.",
      "enumeration": null,
      "name": "AvgPx",
      "section": null,
      "tag": 6,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "standard": "XML",
        },
        "name": "Price",
      },
      "value": 0,
    },
    Field {
      "category": null,
      "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "LeavesQty",
      "section": null,
      "tag": 151,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 1000,
    },
    Field {
      "category": null,
      "description": "Timestamp when the business transaction represented by the message occurred.",
      "enumeration": null,
      "name": "TransactTime",
      "section": null,
      "tag": 60,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20100208-19:36:45",
    },
    Field {
      "category": null,
      "description": "Free format text string

(Note: this field does not have a specified maximum length)",
      "enumeration": null,
      "name": "Text",
      "section": null,
      "tag": 58,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "New order",
    },
    Field {
      "category": null,
      "description": "Market of execution for last fill, or an indication of the market where an order was routed

Valid values:

See "Appendix 6-C"

In the context of ESMA RTS 1 Annex I, Table 3, Field 6 "Venue of Execution" it is required that the "venue where the transaction was executed" be identified using ISO 10383 (MIC). Additionally, ESMA requires the use of "MIC code 'XOFF' for financial instruments admitted to trading or traded on a trading venue, where the transaction on that financial instrument is not executed on a trading venue, systematic internaliser or organized trading platform outside of the Union. Use 'SINT' for financial instruments admitted to trading or traded on a trading venue, where the transaction is executed on a systematic internaliser."",
      "enumeration": null,
      "name": "LastMkt",
      "section": null,
      "tag": 30,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "false",
          "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
          "pattern": ".*",
          "standard": "XML",
        },
        "name": "Exchange",
      },
      "value": "A",
    },
    Field {
      "category": null,
      "description": "Account mnemonic as agreed between buy and sell sides, e.g. broker and institution or investor/intermediary and fund manager.",
      "enumeration": null,
      "name": "Account",
      "section": null,
      "tag": 1,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "ABC123ZYX",
    },
    Field {
      "category": null,
      "description": "Market used to help identify a security.

Valid values:

See "Appendix 6-C"",
      "enumeration": null,
      "name": "SecurityExchange",
      "section": null,
      "tag": 207,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "false",
          "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
          "pattern": ".*",
          "standard": "XML",
        },
        "name": "Exchange",
      },
      "value": "A",
    },
    Field {
      "category": null,
      "description": null,
      "enumeration": null,
      "name": null,
      "section": null,
      "tag": 47,
      "type": null,
      "value": "A",
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "240",
    },
  ],
  "description": "ExecutionReport",
  "fixVersion": "FIX.4.2",
  "messageSequence": 215,
  "messageString": "8=FIX.4.29=25335=8128=XYZ34=21549=CCG56=ABC_DEFG0452=20100208-19:36:4555=VOD37=NF 0016/0208201011=NF 0016/0208201017=020=039=0150=054=138=100040=244=0.995059=031=032=014=06=0151=100060=20100208-19:36:4558=New order30=A1=ABC123ZYX207=A47=A10=240",
  "messageType": "8",
  "messageTypeDescription": "The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
  "structure": [
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "CumQty",
        "added": "FIX.2.7",
        "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
        "id": "14",
        "name": "CumQty",
        "type": "Qty",
      },
      "id": "14",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "ExecID",
        "added": "FIX.2.7",
        "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
        "id": "17",
        "name": "ExecID",
        "type": "String",
        "updated": "FIX.5.0SP1",
        "updatedEP": "95",
      },
      "id": "17",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "188",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "OrdID",
        "added": "FIX.2.7",
        "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
        "id": "37",
        "name": "OrderID",
        "type": "String",
      },
      "id": "37",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "OrdStat",
        "added": "FIX.2.7",
        "baseCategory": "SingleGeneralOrderHandling",
        "baseCategoryAbbrName": "Stat",
        "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "id": "39",
        "name": "OrdStatus",
        "type": "OrdStatusCodeSet",
      },
      "id": "39",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Side",
        "added": "FIX.2.7",
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "id": "54",
        "name": "Side",
        "type": "SideCodeSet",
      },
      "id": "54",
      "presence": "required",
    },
    {
      "added": "FIX.4.1",
      "data": {
        "abbrName": "ExecTyp",
        "added": "FIX.4.1",
        "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
        "id": "150",
        "name": "ExecType",
        "type": "ExecTypeCodeSet",
        "updated": "FIX.5.0SP2",
        "updatedEP": "131",
      },
      "id": "150",
      "presence": "required",
    },
    {
      "added": "FIX.4.1",
      "data": {
        "abbrName": "LeavesQty",
        "added": "FIX.4.1",
        "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
        "id": "151",
        "name": "LeavesQty",
        "type": "Qty",
      },
      "id": "151",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "188",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "Instrmt",
        "added": "FIX.4.3",
        "category": "Common",
        "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
        "id": "1003",
        "name": "Instrument",
        "type": "component",
      },
      "id": "1003",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "188",
    },
  ],
}
`;

exports[`FIXParser #parse: ExecutionReport should match snapshot 5`] = `
Message {
  "bodyLengthExpected": 266,
  "bodyLengthValid": true,
  "bodyLengthValue": 266,
  "checksumExpected": "136",
  "checksumValid": true,
  "checksumValue": "136",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX.4.2",
        "group": undefined,
        "id": "8001",
        "name": "FIX42",
        "sort": 1,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.2",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.2",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 266,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "ExecutionReport

The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
        "group": undefined,
        "id": "35009",
        "name": "ExecutionReport",
        "sort": 9,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "8",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "8",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "ABC",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "XYZ",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify specific message originator (desk, trader, etc.)",
      "enumeration": null,
      "name": "SenderSubID",
      "section": null,
      "tag": 50,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "AZ12",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify specific individual or unit intended to receive message. "ADMIN" reserved for administrative messages not intended for a specific user.",
      "enumeration": null,
      "name": "TargetSubID",
      "section": null,
      "tag": 57,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "NA",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 833,
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20100130-08:00:51.992",
    },
    Field {
      "category": null,
      "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
      "enumeration": null,
      "name": "Symbol",
      "section": null,
      "tag": 55,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "GLD",
    },
    Field {
      "category": null,
      "description": "Security identifier value of SecurityIDSource (22) type (e.g. CUSIP, SEDOL, ISIN, etc). Requires SecurityIDSource.",
      "enumeration": null,
      "name": "SecurityID",
      "section": null,
      "tag": 48,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "PL11YA",
    },
    Field {
      "category": null,
      "description": "Indicates type of security. Security type enumerations are grouped by Product(460) field value. NOTE: Additional values may be used by mutual agreement of the counterparties.",
      "enumeration": EnumType {
        "added": "FIX.4.1",
        "addedEP": undefined,
        "codeSet": "SecurityTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Future",
        "group": "Derivatives",
        "id": "167036",
        "name": "Future",
        "sort": 8,
        "tag": 167,
        "type": "String",
        "updated": "FIX.5.0SP2",
        "updatedEP": "169",
        "value": "FUT",
      },
      "name": "SecurityType",
      "section": null,
      "tag": 167,
      "type": null,
      "value": "FUT",
    },
    Field {
      "category": null,
      "description": "Market used to help identify a security.

Valid values:

See "Appendix 6-C"",
      "enumeration": null,
      "name": "SecurityExchange",
      "section": null,
      "tag": 207,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "false",
          "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
          "pattern": ".*",
          "standard": "XML",
        },
        "name": "Exchange",
      },
      "value": "LIFFE",
    },
    Field {
      "category": null,
      "description": "Account mnemonic as agreed between buy and sell sides, e.g. broker and institution or investor/intermediary and fund manager.",
      "enumeration": null,
      "name": "Account",
      "section": null,
      "tag": 1,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "AA1",
    },
    Field {
      "category": null,
      "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
      "enumeration": null,
      "name": "OrderID",
      "section": null,
      "tag": 37,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "ABC1",
    },
    Field {
      "category": null,
      "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
      "enumeration": null,
      "name": "ExecID",
      "section": null,
      "tag": 17,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "INDNTHDOG",
    },
    Field {
      "category": null,
      "description": "Free format text string

(Note: this field does not have a specified maximum length)",
      "enumeration": null,
      "name": "Text",
      "section": null,
      "tag": 58,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "Fill",
    },
    Field {
      "category": null,
      "description": "Can be used with standardized derivatives vs. the MaturityDate (541) field. Month and Year of the maturity (used for standardized futures and options).

Format:

YYYYMM (e.g. 199903)

YYYYMMDD (e.g. 20030323)

YYYYMMwN (e.g. 200303w) for week

A specific date or can be appended to the MaturityMonthYear. For instance, if multiple standard products exist that mature in the same Year and Month, but actually mature at a different time, a value can be appended, such as "w" or "w2" to indicate week as opposed to week 2 expiration. Likewise, the date (0-3) can be appended to indicate a specific expiration (maturity date).",
      "enumeration": null,
      "name": "MaturityMonthYear",
      "section": null,
      "tag": 200,
      "type": {
        "added": "FIX.4.1",
        "baseType": "String",
        "description": "string field representing month of a year. An optional day of the month can be appended or an optional week code.

Valid formats:

YYYYMM

YYYYMMDD

YYYYMMWW

Valid values:

YYYY = 0000-9999; MM = 01-12; DD = 01-31; WW = w1, w2, w3, w4, w5.",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "false",
          "description": "string field representing month of a year. An optional day of the month can be appended or an optional week code.

Valid formats:

YYYYMM

YYYYMMDD

YYYYMMWW

Valid values:

YYYY = 0000-9999; MM = 01-12; DD = 01-31; WW = w1, w2, w3, w4, w5.",
          "pattern": "\\d{4}(0|1)\\d([0-3wW]\\d)?",
          "standard": "XML",
        },
        "name": "MonthYear",
      },
      "value": "201009",
    },
    Field {
      "category": null,
      "description": null,
      "enumeration": null,
      "name": null,
      "section": null,
      "tag": 205,
      "type": null,
      "value": "13",
    },
    Field {
      "category": null,
      "description": "Quantity (e.g. shares) bought/sold on this (last) fill.

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "LastQty",
      "section": null,
      "tag": 32,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 25,
    },
    Field {
      "category": null,
      "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "LeavesQty",
      "section": null,
      "tag": 151,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 0,
    },
    Field {
      "category": null,
      "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "CumQty",
      "section": null,
      "tag": 14,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 25,
    },
    Field {
      "category": null,
      "description": "Side of order (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "SideCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Sell

For Securities Financing indicates the delivery of securities or collateral.",
        "group": undefined,
        "id": "54002",
        "name": "Sell",
        "sort": 2,
        "tag": 54,
        "type": "char",
        "updated": "FIX.5.0SP2",
        "updatedEP": "254",
        "value": "2",
      },
      "name": "Side",
      "section": null,
      "tag": 54,
      "type": null,
      "value": "2",
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "OrdTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Limit",
        "group": undefined,
        "id": "40002",
        "name": "Limit",
        "sort": 2,
        "tag": 40,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "2",
      },
      "name": "OrdType",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 40,
      "type": null,
      "value": "2",
    },
    Field {
      "category": null,
      "description": "Indicates whether the resulting position after a trade should be an opening position or closing position. Used for omnibus accounting - where accounts are held on a gross basis instead of being netted together.",
      "enumeration": EnumType {
        "added": "FIX.4.1",
        "addedEP": undefined,
        "codeSet": "PositionEffectCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Open",
        "group": undefined,
        "id": "77003",
        "name": "Open",
        "sort": 3,
        "tag": 77,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "O",
      },
      "name": "PositionEffect",
      "section": null,
      "tag": 77,
      "type": null,
      "value": "O",
    },
    Field {
      "category": null,
      "description": "Specifies how long the order remains in effect. Absence of this field is interpreted as DAY. NOTE not applicable to CIV Orders.",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "TimeInForceCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Day (or session)

A buy or sell order that, if not executed expires at the end of the trading day on which it was entered.",
        "group": undefined,
        "id": "59001",
        "name": "Day",
        "sort": 1,
        "tag": 59,
        "type": "char",
        "updated": "FIX.5.0SP2",
        "updatedEP": "253",
        "value": "0",
      },
      "name": "TimeInForce",
      "section": null,
      "tag": 59,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
      "enumeration": null,
      "name": "ExecType",
      "section": null,
      "tag": 150,
      "type": null,
      "value": "2",
    },
    Field {
      "category": null,
      "description": null,
      "enumeration": null,
      "name": null,
      "section": null,
      "tag": 20,
      "type": null,
      "value": "0",
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "OrdStatusCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Filled",
        "group": undefined,
        "id": "39003",
        "name": "Filled",
        "sort": 3,
        "tag": 39,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "2",
      },
      "name": "OrdStatus",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 39,
      "type": null,
      "value": "2",
    },
    Field {
      "category": null,
      "description": "Used to indicate how the multi-legged security (e.g. option strategies, spreads, etc.) is being reported.",
      "enumeration": EnumType {
        "added": "FIX.4.2",
        "addedEP": undefined,
        "codeSet": "MultiLegReportingTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Single security (default if not specified)",
        "group": undefined,
        "id": "442001",
        "name": "SingleSecurity",
        "sort": 1,
        "tag": 442,
        "type": "char",
        "updated": "FIX.5.0SP1",
        "updatedEP": "95",
        "value": "1",
      },
      "name": "MultiLegReportingType",
      "section": null,
      "tag": 442,
      "type": null,
      "value": "1",
    },
    Field {
      "category": null,
      "description": "Price per unit of quantity (e.g. per share)",
      "enumeration": null,
      "name": "Price",
      "section": null,
      "tag": 44,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "standard": "XML",
        },
        "name": "Price",
      },
      "value": 99.06,
    },
    Field {
      "category": null,
      "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "OrderQty",
      "section": null,
      "tag": 38,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 25,
    },
    Field {
      "category": null,
      "description": "Price of this (last) fill.",
      "enumeration": null,
      "name": "LastPx",
      "section": null,
      "tag": 31,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "standard": "XML",
        },
        "name": "Price",
      },
      "value": 99.06,
    },
    Field {
      "category": null,
      "description": "Calculated average price of all fills on this order.

For Fixed Income trades AvgPx is always expressed as percent-of-par, regardless of the PriceType (423) of LastPx (31). I.e., AvgPx will contain an average of percent-of-par values (see LastParPx (669)) for issues traded in Yield, Spread or Discount.",
      "enumeration": null,
      "name": "AvgPx",
      "section": null,
      "tag": 6,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "standard": "XML",
        },
        "name": "Price",
      },
      "value": 99.06,
    },
    Field {
      "category": null,
      "description": "Timestamp when the business transaction represented by the message occurred.",
      "enumeration": null,
      "name": "TransactTime",
      "section": null,
      "tag": 60,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20100130-08:00:52",
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "136",
    },
  ],
  "description": "ExecutionReport",
  "fixVersion": "FIX.4.2",
  "messageSequence": 833,
  "messageString": "8=FIX.4.29=26635=849=ABC56=XYZ50=AZ1257=NA34=83352=20100130-08:00:51.99255=GLD48=PL11YA167=FUT207=LIFFE1=AA137=ABC117=INDNTHDOG58=Fill200=201009205=1332=25151=014=2554=240=277=O59=0150=220=039=2442=144=99.0638=2531=99.066=99.0660=20100130-08:00:5210=136",
  "messageType": "8",
  "messageTypeDescription": "The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
  "structure": [
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "CumQty",
        "added": "FIX.2.7",
        "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
        "id": "14",
        "name": "CumQty",
        "type": "Qty",
      },
      "id": "14",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "ExecID",
        "added": "FIX.2.7",
        "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
        "id": "17",
        "name": "ExecID",
        "type": "String",
        "updated": "FIX.5.0SP1",
        "updatedEP": "95",
      },
      "id": "17",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "188",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "OrdID",
        "added": "FIX.2.7",
        "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
        "id": "37",
        "name": "OrderID",
        "type": "String",
      },
      "id": "37",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "OrdStat",
        "added": "FIX.2.7",
        "baseCategory": "SingleGeneralOrderHandling",
        "baseCategoryAbbrName": "Stat",
        "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "id": "39",
        "name": "OrdStatus",
        "type": "OrdStatusCodeSet",
      },
      "id": "39",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Side",
        "added": "FIX.2.7",
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "id": "54",
        "name": "Side",
        "type": "SideCodeSet",
      },
      "id": "54",
      "presence": "required",
    },
    {
      "added": "FIX.4.1",
      "data": {
        "abbrName": "ExecTyp",
        "added": "FIX.4.1",
        "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
        "id": "150",
        "name": "ExecType",
        "type": "ExecTypeCodeSet",
        "updated": "FIX.5.0SP2",
        "updatedEP": "131",
      },
      "id": "150",
      "presence": "required",
    },
    {
      "added": "FIX.4.1",
      "data": {
        "abbrName": "LeavesQty",
        "added": "FIX.4.1",
        "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
        "id": "151",
        "name": "LeavesQty",
        "type": "Qty",
      },
      "id": "151",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "188",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "Instrmt",
        "added": "FIX.4.3",
        "category": "Common",
        "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
        "id": "1003",
        "name": "Instrument",
        "type": "component",
      },
      "id": "1003",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "188",
    },
  ],
}
`;

exports[`FIXParser #parse: ExecutionReport should match snapshot 6`] = `
Message {
  "bodyLengthExpected": 262,
  "bodyLengthValid": true,
  "bodyLengthValue": 262,
  "checksumExpected": "053",
  "checksumValid": true,
  "checksumValue": "053",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX.4.2",
        "group": undefined,
        "id": "8001",
        "name": "FIX42",
        "sort": 1,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.2",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.2",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 262,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "ExecutionReport

The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
        "group": undefined,
        "id": "35009",
        "name": "ExecutionReport",
        "sort": 9,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "8",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "8",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "ABC",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "XYZ",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify specific message originator (desk, trader, etc.)",
      "enumeration": null,
      "name": "SenderSubID",
      "section": null,
      "tag": 50,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "AZ12",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify specific individual or unit intended to receive message. "ADMIN" reserved for administrative messages not intended for a specific user.",
      "enumeration": null,
      "name": "TargetSubID",
      "section": null,
      "tag": 57,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "NA",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 834,
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20100130-08:00:52.008",
    },
    Field {
      "category": null,
      "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
      "enumeration": null,
      "name": "Symbol",
      "section": null,
      "tag": 55,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "GLD",
    },
    Field {
      "category": null,
      "description": "Security identifier value of SecurityIDSource (22) type (e.g. CUSIP, SEDOL, ISIN, etc). Requires SecurityIDSource.",
      "enumeration": null,
      "name": "SecurityID",
      "section": null,
      "tag": 48,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "PL11YA",
    },
    Field {
      "category": null,
      "description": "Indicates type of security. Security type enumerations are grouped by Product(460) field value. NOTE: Additional values may be used by mutual agreement of the counterparties.",
      "enumeration": EnumType {
        "added": "FIX.4.1",
        "addedEP": undefined,
        "codeSet": "SecurityTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Future",
        "group": "Derivatives",
        "id": "167036",
        "name": "Future",
        "sort": 8,
        "tag": 167,
        "type": "String",
        "updated": "FIX.5.0SP2",
        "updatedEP": "169",
        "value": "FUT",
      },
      "name": "SecurityType",
      "section": null,
      "tag": 167,
      "type": null,
      "value": "FUT",
    },
    Field {
      "category": null,
      "description": "Market used to help identify a security.

Valid values:

See "Appendix 6-C"",
      "enumeration": null,
      "name": "SecurityExchange",
      "section": null,
      "tag": 207,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "false",
          "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
          "pattern": ".*",
          "standard": "XML",
        },
        "name": "Exchange",
      },
      "value": "LIFFE",
    },
    Field {
      "category": null,
      "description": "Account mnemonic as agreed between buy and sell sides, e.g. broker and institution or investor/intermediary and fund manager.",
      "enumeration": null,
      "name": "Account",
      "section": null,
      "tag": 1,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "AA1",
    },
    Field {
      "category": null,
      "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
      "enumeration": null,
      "name": "OrderID",
      "section": null,
      "tag": 37,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "ABC2",
    },
    Field {
      "category": null,
      "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
      "enumeration": null,
      "name": "ExecID",
      "section": null,
      "tag": 17,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "93OOO",
    },
    Field {
      "category": null,
      "description": "Free format text string

(Note: this field does not have a specified maximum length)",
      "enumeration": null,
      "name": "Text",
      "section": null,
      "tag": 58,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "Fill",
    },
    Field {
      "category": null,
      "description": "Can be used with standardized derivatives vs. the MaturityDate (541) field. Month and Year of the maturity (used for standardized futures and options).

Format:

YYYYMM (e.g. 199903)

YYYYMMDD (e.g. 20030323)

YYYYMMwN (e.g. 200303w) for week

A specific date or can be appended to the MaturityMonthYear. For instance, if multiple standard products exist that mature in the same Year and Month, but actually mature at a different time, a value can be appended, such as "w" or "w2" to indicate week as opposed to week 2 expiration. Likewise, the date (0-3) can be appended to indicate a specific expiration (maturity date).",
      "enumeration": null,
      "name": "MaturityMonthYear",
      "section": null,
      "tag": 200,
      "type": {
        "added": "FIX.4.1",
        "baseType": "String",
        "description": "string field representing month of a year. An optional day of the month can be appended or an optional week code.

Valid formats:

YYYYMM

YYYYMMDD

YYYYMMWW

Valid values:

YYYY = 0000-9999; MM = 01-12; DD = 01-31; WW = w1, w2, w3, w4, w5.",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "false",
          "description": "string field representing month of a year. An optional day of the month can be appended or an optional week code.

Valid formats:

YYYYMM

YYYYMMDD

YYYYMMWW

Valid values:

YYYY = 0000-9999; MM = 01-12; DD = 01-31; WW = w1, w2, w3, w4, w5.",
          "pattern": "\\d{4}(0|1)\\d([0-3wW]\\d)?",
          "standard": "XML",
        },
        "name": "MonthYear",
      },
      "value": "201009",
    },
    Field {
      "category": null,
      "description": null,
      "enumeration": null,
      "name": null,
      "section": null,
      "tag": 205,
      "type": null,
      "value": "13",
    },
    Field {
      "category": null,
      "description": "Quantity (e.g. shares) bought/sold on this (last) fill.

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "LastQty",
      "section": null,
      "tag": 32,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 25,
    },
    Field {
      "category": null,
      "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "LeavesQty",
      "section": null,
      "tag": 151,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 0,
    },
    Field {
      "category": null,
      "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "CumQty",
      "section": null,
      "tag": 14,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 25,
    },
    Field {
      "category": null,
      "description": "Side of order (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "SideCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Sell

For Securities Financing indicates the delivery of securities or collateral.",
        "group": undefined,
        "id": "54002",
        "name": "Sell",
        "sort": 2,
        "tag": 54,
        "type": "char",
        "updated": "FIX.5.0SP2",
        "updatedEP": "254",
        "value": "2",
      },
      "name": "Side",
      "section": null,
      "tag": 54,
      "type": null,
      "value": "2",
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "OrdTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Limit",
        "group": undefined,
        "id": "40002",
        "name": "Limit",
        "sort": 2,
        "tag": 40,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "2",
      },
      "name": "OrdType",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 40,
      "type": null,
      "value": "2",
    },
    Field {
      "category": null,
      "description": "Indicates whether the resulting position after a trade should be an opening position or closing position. Used for omnibus accounting - where accounts are held on a gross basis instead of being netted together.",
      "enumeration": EnumType {
        "added": "FIX.4.1",
        "addedEP": undefined,
        "codeSet": "PositionEffectCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Open",
        "group": undefined,
        "id": "77003",
        "name": "Open",
        "sort": 3,
        "tag": 77,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "O",
      },
      "name": "PositionEffect",
      "section": null,
      "tag": 77,
      "type": null,
      "value": "O",
    },
    Field {
      "category": null,
      "description": "Specifies how long the order remains in effect. Absence of this field is interpreted as DAY. NOTE not applicable to CIV Orders.",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "TimeInForceCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Day (or session)

A buy or sell order that, if not executed expires at the end of the trading day on which it was entered.",
        "group": undefined,
        "id": "59001",
        "name": "Day",
        "sort": 1,
        "tag": 59,
        "type": "char",
        "updated": "FIX.5.0SP2",
        "updatedEP": "253",
        "value": "0",
      },
      "name": "TimeInForce",
      "section": null,
      "tag": 59,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
      "enumeration": null,
      "name": "ExecType",
      "section": null,
      "tag": 150,
      "type": null,
      "value": "2",
    },
    Field {
      "category": null,
      "description": null,
      "enumeration": null,
      "name": null,
      "section": null,
      "tag": 20,
      "type": null,
      "value": "0",
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "OrdStatusCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Filled",
        "group": undefined,
        "id": "39003",
        "name": "Filled",
        "sort": 3,
        "tag": 39,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "2",
      },
      "name": "OrdStatus",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 39,
      "type": null,
      "value": "2",
    },
    Field {
      "category": null,
      "description": "Used to indicate how the multi-legged security (e.g. option strategies, spreads, etc.) is being reported.",
      "enumeration": EnumType {
        "added": "FIX.4.2",
        "addedEP": undefined,
        "codeSet": "MultiLegReportingTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Single security (default if not specified)",
        "group": undefined,
        "id": "442001",
        "name": "SingleSecurity",
        "sort": 1,
        "tag": 442,
        "type": "char",
        "updated": "FIX.5.0SP1",
        "updatedEP": "95",
        "value": "1",
      },
      "name": "MultiLegReportingType",
      "section": null,
      "tag": 442,
      "type": null,
      "value": "1",
    },
    Field {
      "category": null,
      "description": "Price per unit of quantity (e.g. per share)",
      "enumeration": null,
      "name": "Price",
      "section": null,
      "tag": 44,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "standard": "XML",
        },
        "name": "Price",
      },
      "value": 99.06,
    },
    Field {
      "category": null,
      "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "OrderQty",
      "section": null,
      "tag": 38,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 25,
    },
    Field {
      "category": null,
      "description": "Price of this (last) fill.",
      "enumeration": null,
      "name": "LastPx",
      "section": null,
      "tag": 31,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "standard": "XML",
        },
        "name": "Price",
      },
      "value": 99.06,
    },
    Field {
      "category": null,
      "description": "Calculated average price of all fills on this order.

For Fixed Income trades AvgPx is always expressed as percent-of-par, regardless of the PriceType (423) of LastPx (31). I.e., AvgPx will contain an average of percent-of-par values (see LastParPx (669)) for issues traded in Yield, Spread or Discount.",
      "enumeration": null,
      "name": "AvgPx",
      "section": null,
      "tag": 6,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "standard": "XML",
        },
        "name": "Price",
      },
      "value": 99.06,
    },
    Field {
      "category": null,
      "description": "Timestamp when the business transaction represented by the message occurred.",
      "enumeration": null,
      "name": "TransactTime",
      "section": null,
      "tag": 60,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20100130-08:00:52",
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "053",
    },
  ],
  "description": "ExecutionReport",
  "fixVersion": "FIX.4.2",
  "messageSequence": 834,
  "messageString": "8=FIX.4.29=26235=849=ABC56=XYZ50=AZ1257=NA34=83452=20100130-08:00:52.00855=GLD48=PL11YA167=FUT207=LIFFE1=AA137=ABC217=93OOO58=Fill200=201009205=1332=25151=014=2554=240=277=O59=0150=220=039=2442=144=99.0638=2531=99.066=99.0660=20100130-08:00:5210=053",
  "messageType": "8",
  "messageTypeDescription": "The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
  "structure": [
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "CumQty",
        "added": "FIX.2.7",
        "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
        "id": "14",
        "name": "CumQty",
        "type": "Qty",
      },
      "id": "14",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "ExecID",
        "added": "FIX.2.7",
        "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
        "id": "17",
        "name": "ExecID",
        "type": "String",
        "updated": "FIX.5.0SP1",
        "updatedEP": "95",
      },
      "id": "17",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "188",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "OrdID",
        "added": "FIX.2.7",
        "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
        "id": "37",
        "name": "OrderID",
        "type": "String",
      },
      "id": "37",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "OrdStat",
        "added": "FIX.2.7",
        "baseCategory": "SingleGeneralOrderHandling",
        "baseCategoryAbbrName": "Stat",
        "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "id": "39",
        "name": "OrdStatus",
        "type": "OrdStatusCodeSet",
      },
      "id": "39",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Side",
        "added": "FIX.2.7",
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "id": "54",
        "name": "Side",
        "type": "SideCodeSet",
      },
      "id": "54",
      "presence": "required",
    },
    {
      "added": "FIX.4.1",
      "data": {
        "abbrName": "ExecTyp",
        "added": "FIX.4.1",
        "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
        "id": "150",
        "name": "ExecType",
        "type": "ExecTypeCodeSet",
        "updated": "FIX.5.0SP2",
        "updatedEP": "131",
      },
      "id": "150",
      "presence": "required",
    },
    {
      "added": "FIX.4.1",
      "data": {
        "abbrName": "LeavesQty",
        "added": "FIX.4.1",
        "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
        "id": "151",
        "name": "LeavesQty",
        "type": "Qty",
      },
      "id": "151",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "188",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "Instrmt",
        "added": "FIX.4.3",
        "category": "Common",
        "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
        "id": "1003",
        "name": "Instrument",
        "type": "component",
      },
      "id": "1003",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "188",
    },
  ],
}
`;

exports[`FIXParser #parse: ExecutionReport should match snapshot 7`] = `
Message {
  "bodyLengthExpected": 151,
  "bodyLengthValid": true,
  "bodyLengthValue": 151,
  "checksumExpected": "129",
  "checksumValid": true,
  "checksumValue": "129",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX.4.2",
        "group": undefined,
        "id": "8001",
        "name": "FIX42",
        "sort": 1,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.2",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.2",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 151,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "ExecutionReport

The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
        "group": undefined,
        "id": "35009",
        "name": "ExecutionReport",
        "sort": 9,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "8",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "8",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 20,
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "TARGET",
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20140228-05:43:10.543",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "SENDER",
    },
    Field {
      "category": null,
      "description": "Calculated average price of all fills on this order.

For Fixed Income trades AvgPx is always expressed as percent-of-par, regardless of the PriceType (423) of LastPx (31). I.e., AvgPx will contain an average of percent-of-par values (see LastParPx (669)) for issues traded in Yield, Spread or Discount.",
      "enumeration": null,
      "name": "AvgPx",
      "section": null,
      "tag": 6,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "standard": "XML",
        },
        "name": "Price",
      },
      "value": 0,
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
      "enumeration": null,
      "name": "ClOrdID",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 11,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "1393566190533",
    },
    Field {
      "category": null,
      "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "CumQty",
      "section": null,
      "tag": 14,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 0,
    },
    Field {
      "category": null,
      "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
      "enumeration": null,
      "name": "ExecID",
      "section": null,
      "tag": 17,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "0",
    },
    Field {
      "category": null,
      "description": null,
      "enumeration": null,
      "name": null,
      "section": null,
      "tag": 20,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
      "enumeration": null,
      "name": "OrderID",
      "section": null,
      "tag": 37,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "1393566190533",
    },
    Field {
      "category": null,
      "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "OrderQty",
      "section": null,
      "tag": 38,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 200,
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "OrdStatusCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "New",
        "group": undefined,
        "id": "39001",
        "name": "New",
        "sort": 1,
        "tag": 39,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "0",
      },
      "name": "OrdStatus",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 39,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Side of order (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "SideCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Buy

For Securities Financing indicates the receipt of securities or collateral.",
        "group": undefined,
        "id": "54001",
        "name": "Buy",
        "sort": 1,
        "tag": 54,
        "type": "char",
        "updated": "FIX.5.0SP2",
        "updatedEP": "254",
        "value": "1",
      },
      "name": "Side",
      "section": null,
      "tag": 54,
      "type": null,
      "value": "1",
    },
    Field {
      "category": null,
      "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
      "enumeration": null,
      "name": "Symbol",
      "section": null,
      "tag": 55,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "FIXSPEC",
    },
    Field {
      "category": null,
      "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
      "enumeration": EnumType {
        "added": "FIX.4.1",
        "addedEP": undefined,
        "codeSet": "ExecTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "New",
        "group": undefined,
        "id": "150001",
        "name": "New",
        "sort": 1,
        "tag": 150,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "0",
      },
      "name": "ExecType",
      "section": null,
      "tag": 150,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "LeavesQty",
      "section": null,
      "tag": 151,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 200,
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "129",
    },
  ],
  "description": "ExecutionReport",
  "fixVersion": "FIX.4.2",
  "messageSequence": 20,
  "messageString": "8=FIX.4.29=15135=834=2049=TARGET52=20140228-05:43:10.54356=SENDER6=011=139356619053314=017=020=037=139356619053338=20039=054=155=FIXSPEC150=0151=20010=129",
  "messageType": "8",
  "messageTypeDescription": "The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
  "structure": [
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "CumQty",
        "added": "FIX.2.7",
        "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
        "id": "14",
        "name": "CumQty",
        "type": "Qty",
      },
      "id": "14",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "ExecID",
        "added": "FIX.2.7",
        "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
        "id": "17",
        "name": "ExecID",
        "type": "String",
        "updated": "FIX.5.0SP1",
        "updatedEP": "95",
      },
      "id": "17",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "188",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "OrdID",
        "added": "FIX.2.7",
        "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
        "id": "37",
        "name": "OrderID",
        "type": "String",
      },
      "id": "37",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "OrdStat",
        "added": "FIX.2.7",
        "baseCategory": "SingleGeneralOrderHandling",
        "baseCategoryAbbrName": "Stat",
        "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "id": "39",
        "name": "OrdStatus",
        "type": "OrdStatusCodeSet",
      },
      "id": "39",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Side",
        "added": "FIX.2.7",
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "id": "54",
        "name": "Side",
        "type": "SideCodeSet",
      },
      "id": "54",
      "presence": "required",
    },
    {
      "added": "FIX.4.1",
      "data": {
        "abbrName": "ExecTyp",
        "added": "FIX.4.1",
        "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
        "id": "150",
        "name": "ExecType",
        "type": "ExecTypeCodeSet",
        "updated": "FIX.5.0SP2",
        "updatedEP": "131",
      },
      "id": "150",
      "presence": "required",
    },
    {
      "added": "FIX.4.1",
      "data": {
        "abbrName": "LeavesQty",
        "added": "FIX.4.1",
        "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
        "id": "151",
        "name": "LeavesQty",
        "type": "Qty",
      },
      "id": "151",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "188",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "Instrmt",
        "added": "FIX.4.3",
        "category": "Common",
        "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
        "id": "1003",
        "name": "Instrument",
        "type": "component",
      },
      "id": "1003",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "188",
    },
  ],
}
`;

exports[`FIXParser #parse: ExecutionReport should match snapshot 8`] = `
Message {
  "bodyLengthExpected": 171,
  "bodyLengthValid": true,
  "bodyLengthValue": 171,
  "checksumExpected": "098",
  "checksumValid": true,
  "checksumValue": "098",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX.4.2",
        "group": undefined,
        "id": "8001",
        "name": "FIX42",
        "sort": 1,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.2",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.2",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 171,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "ExecutionReport

The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
        "group": undefined,
        "id": "35009",
        "name": "ExecutionReport",
        "sort": 9,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "8",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "8",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 23,
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "TARGET",
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20140228-05:43:21.886",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "SENDER",
    },
    Field {
      "category": null,
      "description": "Calculated average price of all fills on this order.

For Fixed Income trades AvgPx is always expressed as percent-of-par, regardless of the PriceType (423) of LastPx (31). I.e., AvgPx will contain an average of percent-of-par values (see LastParPx (669)) for issues traded in Yield, Spread or Discount.",
      "enumeration": null,
      "name": "AvgPx",
      "section": null,
      "tag": 6,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "standard": "XML",
        },
        "name": "Price",
      },
      "value": 45.67,
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
      "enumeration": null,
      "name": "ClOrdID",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 11,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "1393566190533",
    },
    Field {
      "category": null,
      "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "CumQty",
      "section": null,
      "tag": 14,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 75,
    },
    Field {
      "category": null,
      "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
      "enumeration": null,
      "name": "ExecID",
      "section": null,
      "tag": 17,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "3",
    },
    Field {
      "category": null,
      "description": null,
      "enumeration": null,
      "name": null,
      "section": null,
      "tag": 20,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Price of this (last) fill.",
      "enumeration": null,
      "name": "LastPx",
      "section": null,
      "tag": 31,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "standard": "XML",
        },
        "name": "Price",
      },
      "value": 45.67,
    },
    Field {
      "category": null,
      "description": "Quantity (e.g. shares) bought/sold on this (last) fill.

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "LastQty",
      "section": null,
      "tag": 32,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 75,
    },
    Field {
      "category": null,
      "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
      "enumeration": null,
      "name": "OrderID",
      "section": null,
      "tag": 37,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "1393566190533",
    },
    Field {
      "category": null,
      "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "OrderQty",
      "section": null,
      "tag": 38,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 200,
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "OrdStatusCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Partially filled",
        "group": undefined,
        "id": "39002",
        "name": "PartiallyFilled",
        "sort": 2,
        "tag": 39,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "1",
      },
      "name": "OrdStatus",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 39,
      "type": null,
      "value": "1",
    },
    Field {
      "category": null,
      "description": "Side of order (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "SideCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Buy

For Securities Financing indicates the receipt of securities or collateral.",
        "group": undefined,
        "id": "54001",
        "name": "Buy",
        "sort": 1,
        "tag": 54,
        "type": "char",
        "updated": "FIX.5.0SP2",
        "updatedEP": "254",
        "value": "1",
      },
      "name": "Side",
      "section": null,
      "tag": 54,
      "type": null,
      "value": "1",
    },
    Field {
      "category": null,
      "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
      "enumeration": null,
      "name": "Symbol",
      "section": null,
      "tag": 55,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "FIXSPEC",
    },
    Field {
      "category": null,
      "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
      "enumeration": null,
      "name": "ExecType",
      "section": null,
      "tag": 150,
      "type": null,
      "value": "1",
    },
    Field {
      "category": null,
      "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "LeavesQty",
      "section": null,
      "tag": 151,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 125,
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "098",
    },
  ],
  "description": "ExecutionReport",
  "fixVersion": "FIX.4.2",
  "messageSequence": 23,
  "messageString": "8=FIX.4.29=17135=834=2349=TARGET52=20140228-05:43:21.88656=SENDER6=45.6711=139356619053314=7517=320=031=45.6732=7537=139356619053338=20039=154=155=FIXSPEC150=1151=12510=098",
  "messageType": "8",
  "messageTypeDescription": "The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
  "structure": [
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "CumQty",
        "added": "FIX.2.7",
        "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
        "id": "14",
        "name": "CumQty",
        "type": "Qty",
      },
      "id": "14",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "ExecID",
        "added": "FIX.2.7",
        "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
        "id": "17",
        "name": "ExecID",
        "type": "String",
        "updated": "FIX.5.0SP1",
        "updatedEP": "95",
      },
      "id": "17",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "188",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "OrdID",
        "added": "FIX.2.7",
        "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
        "id": "37",
        "name": "OrderID",
        "type": "String",
      },
      "id": "37",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "OrdStat",
        "added": "FIX.2.7",
        "baseCategory": "SingleGeneralOrderHandling",
        "baseCategoryAbbrName": "Stat",
        "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "id": "39",
        "name": "OrdStatus",
        "type": "OrdStatusCodeSet",
      },
      "id": "39",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Side",
        "added": "FIX.2.7",
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "id": "54",
        "name": "Side",
        "type": "SideCodeSet",
      },
      "id": "54",
      "presence": "required",
    },
    {
      "added": "FIX.4.1",
      "data": {
        "abbrName": "ExecTyp",
        "added": "FIX.4.1",
        "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
        "id": "150",
        "name": "ExecType",
        "type": "ExecTypeCodeSet",
        "updated": "FIX.5.0SP2",
        "updatedEP": "131",
      },
      "id": "150",
      "presence": "required",
    },
    {
      "added": "FIX.4.1",
      "data": {
        "abbrName": "LeavesQty",
        "added": "FIX.4.1",
        "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
        "id": "151",
        "name": "LeavesQty",
        "type": "Qty",
      },
      "id": "151",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "188",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "Instrmt",
        "added": "FIX.4.3",
        "category": "Common",
        "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
        "id": "1003",
        "name": "Instrument",
        "type": "component",
      },
      "id": "1003",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "188",
    },
  ],
}
`;

exports[`FIXParser #parse: ExecutionReport should match snapshot 9`] = `
Message {
  "bodyLengthExpected": 171,
  "bodyLengthValid": true,
  "bodyLengthValue": 171,
  "checksumExpected": "079",
  "checksumValid": true,
  "checksumValue": "079",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX.4.2",
        "group": undefined,
        "id": "8001",
        "name": "FIX42",
        "sort": 1,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.2",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.2",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 171,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "ExecutionReport

The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
        "group": undefined,
        "id": "35009",
        "name": "ExecutionReport",
        "sort": 9,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "8",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "8",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 26,
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "TARGET",
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20140228-05:43:27.326",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "SENDER",
    },
    Field {
      "category": null,
      "description": "Calculated average price of all fills on this order.

For Fixed Income trades AvgPx is always expressed as percent-of-par, regardless of the PriceType (423) of LastPx (31). I.e., AvgPx will contain an average of percent-of-par values (see LastParPx (669)) for issues traded in Yield, Spread or Discount.",
      "enumeration": null,
      "name": "AvgPx",
      "section": null,
      "tag": 6,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "standard": "XML",
        },
        "name": "Price",
      },
      "value": 45.67,
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
      "enumeration": null,
      "name": "ClOrdID",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 11,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "1393566190533",
    },
    Field {
      "category": null,
      "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "CumQty",
      "section": null,
      "tag": 14,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 200,
    },
    Field {
      "category": null,
      "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
      "enumeration": null,
      "name": "ExecID",
      "section": null,
      "tag": 17,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "6",
    },
    Field {
      "category": null,
      "description": null,
      "enumeration": null,
      "name": null,
      "section": null,
      "tag": 20,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Price of this (last) fill.",
      "enumeration": null,
      "name": "LastPx",
      "section": null,
      "tag": 31,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "standard": "XML",
        },
        "name": "Price",
      },
      "value": 45.67,
    },
    Field {
      "category": null,
      "description": "Quantity (e.g. shares) bought/sold on this (last) fill.

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "LastQty",
      "section": null,
      "tag": 32,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 125,
    },
    Field {
      "category": null,
      "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
      "enumeration": null,
      "name": "OrderID",
      "section": null,
      "tag": 37,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "1393566190533",
    },
    Field {
      "category": null,
      "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "OrderQty",
      "section": null,
      "tag": 38,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 200,
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "OrdStatusCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Filled",
        "group": undefined,
        "id": "39003",
        "name": "Filled",
        "sort": 3,
        "tag": 39,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "2",
      },
      "name": "OrdStatus",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 39,
      "type": null,
      "value": "2",
    },
    Field {
      "category": null,
      "description": "Side of order (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "SideCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Buy

For Securities Financing indicates the receipt of securities or collateral.",
        "group": undefined,
        "id": "54001",
        "name": "Buy",
        "sort": 1,
        "tag": 54,
        "type": "char",
        "updated": "FIX.5.0SP2",
        "updatedEP": "254",
        "value": "1",
      },
      "name": "Side",
      "section": null,
      "tag": 54,
      "type": null,
      "value": "1",
    },
    Field {
      "category": null,
      "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
      "enumeration": null,
      "name": "Symbol",
      "section": null,
      "tag": 55,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "FIXSPEC",
    },
    Field {
      "category": null,
      "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
      "enumeration": null,
      "name": "ExecType",
      "section": null,
      "tag": 150,
      "type": null,
      "value": "2",
    },
    Field {
      "category": null,
      "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "LeavesQty",
      "section": null,
      "tag": 151,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 0,
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "079",
    },
  ],
  "description": "ExecutionReport",
  "fixVersion": "FIX.4.2",
  "messageSequence": 26,
  "messageString": "8=FIX.4.29=17135=834=2649=TARGET52=20140228-05:43:27.32656=SENDER6=45.6711=139356619053314=20017=620=031=45.6732=12537=139356619053338=20039=254=155=FIXSPEC150=2151=010=079",
  "messageType": "8",
  "messageTypeDescription": "The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
  "structure": [
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "CumQty",
        "added": "FIX.2.7",
        "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
        "id": "14",
        "name": "CumQty",
        "type": "Qty",
      },
      "id": "14",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "ExecID",
        "added": "FIX.2.7",
        "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
        "id": "17",
        "name": "ExecID",
        "type": "String",
        "updated": "FIX.5.0SP1",
        "updatedEP": "95",
      },
      "id": "17",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "188",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "OrdID",
        "added": "FIX.2.7",
        "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
        "id": "37",
        "name": "OrderID",
        "type": "String",
      },
      "id": "37",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "OrdStat",
        "added": "FIX.2.7",
        "baseCategory": "SingleGeneralOrderHandling",
        "baseCategoryAbbrName": "Stat",
        "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "id": "39",
        "name": "OrdStatus",
        "type": "OrdStatusCodeSet",
      },
      "id": "39",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Side",
        "added": "FIX.2.7",
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "id": "54",
        "name": "Side",
        "type": "SideCodeSet",
      },
      "id": "54",
      "presence": "required",
    },
    {
      "added": "FIX.4.1",
      "data": {
        "abbrName": "ExecTyp",
        "added": "FIX.4.1",
        "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
        "id": "150",
        "name": "ExecType",
        "type": "ExecTypeCodeSet",
        "updated": "FIX.5.0SP2",
        "updatedEP": "131",
      },
      "id": "150",
      "presence": "required",
    },
    {
      "added": "FIX.4.1",
      "data": {
        "abbrName": "LeavesQty",
        "added": "FIX.4.1",
        "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
        "id": "151",
        "name": "LeavesQty",
        "type": "Qty",
      },
      "id": "151",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "188",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "Instrmt",
        "added": "FIX.4.3",
        "category": "Common",
        "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
        "id": "1003",
        "name": "Instrument",
        "type": "component",
      },
      "id": "1003",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "188",
    },
  ],
}
`;

exports[`FIXParser #parse: ExecutionReport should match snapshot 10`] = `
Message {
  "bodyLengthExpected": 149,
  "bodyLengthValid": true,
  "bodyLengthValue": 149,
  "checksumExpected": "253",
  "checksumValid": true,
  "checksumValue": "253",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX.4.2",
        "group": undefined,
        "id": "8001",
        "name": "FIX42",
        "sort": 1,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.2",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.2",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 149,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "ExecutionReport

The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
        "group": undefined,
        "id": "35009",
        "name": "ExecutionReport",
        "sort": 9,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "8",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "8",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 28,
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "TARGET",
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20140228-05:45:28.375",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "SENDER",
    },
    Field {
      "category": null,
      "description": "Calculated average price of all fills on this order.

For Fixed Income trades AvgPx is always expressed as percent-of-par, regardless of the PriceType (423) of LastPx (31). I.e., AvgPx will contain an average of percent-of-par values (see LastParPx (669)) for issues traded in Yield, Spread or Discount.",
      "enumeration": null,
      "name": "AvgPx",
      "section": null,
      "tag": 6,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "standard": "XML",
        },
        "name": "Price",
      },
      "value": 0,
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
      "enumeration": null,
      "name": "ClOrdID",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 11,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "1393566328381",
    },
    Field {
      "category": null,
      "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "CumQty",
      "section": null,
      "tag": 14,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 0,
    },
    Field {
      "category": null,
      "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
      "enumeration": null,
      "name": "ExecID",
      "section": null,
      "tag": 17,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "10",
    },
    Field {
      "category": null,
      "description": null,
      "enumeration": null,
      "name": null,
      "section": null,
      "tag": 20,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
      "enumeration": null,
      "name": "OrderID",
      "section": null,
      "tag": 37,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "1393566328381",
    },
    Field {
      "category": null,
      "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "OrderQty",
      "section": null,
      "tag": 38,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 125,
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "OrdStatusCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "New",
        "group": undefined,
        "id": "39001",
        "name": "New",
        "sort": 1,
        "tag": 39,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "0",
      },
      "name": "OrdStatus",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 39,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Side of order (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "SideCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Sell

For Securities Financing indicates the delivery of securities or collateral.",
        "group": undefined,
        "id": "54002",
        "name": "Sell",
        "sort": 2,
        "tag": 54,
        "type": "char",
        "updated": "FIX.5.0SP2",
        "updatedEP": "254",
        "value": "2",
      },
      "name": "Side",
      "section": null,
      "tag": 54,
      "type": null,
      "value": "2",
    },
    Field {
      "category": null,
      "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
      "enumeration": null,
      "name": "Symbol",
      "section": null,
      "tag": 55,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "EXAM",
    },
    Field {
      "category": null,
      "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
      "enumeration": EnumType {
        "added": "FIX.4.1",
        "addedEP": undefined,
        "codeSet": "ExecTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "New",
        "group": undefined,
        "id": "150001",
        "name": "New",
        "sort": 1,
        "tag": 150,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "0",
      },
      "name": "ExecType",
      "section": null,
      "tag": 150,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "LeavesQty",
      "section": null,
      "tag": 151,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 125,
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "253",
    },
  ],
  "description": "ExecutionReport",
  "fixVersion": "FIX.4.2",
  "messageSequence": 28,
  "messageString": "8=FIX.4.29=14935=834=2849=TARGET52=20140228-05:45:28.37556=SENDER6=011=139356632838114=017=1020=037=139356632838138=12539=054=255=EXAM150=0151=12510=253",
  "messageType": "8",
  "messageTypeDescription": "The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
  "structure": [
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "CumQty",
        "added": "FIX.2.7",
        "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
        "id": "14",
        "name": "CumQty",
        "type": "Qty",
      },
      "id": "14",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "ExecID",
        "added": "FIX.2.7",
        "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
        "id": "17",
        "name": "ExecID",
        "type": "String",
        "updated": "FIX.5.0SP1",
        "updatedEP": "95",
      },
      "id": "17",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "188",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "OrdID",
        "added": "FIX.2.7",
        "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
        "id": "37",
        "name": "OrderID",
        "type": "String",
      },
      "id": "37",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "OrdStat",
        "added": "FIX.2.7",
        "baseCategory": "SingleGeneralOrderHandling",
        "baseCategoryAbbrName": "Stat",
        "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "id": "39",
        "name": "OrdStatus",
        "type": "OrdStatusCodeSet",
      },
      "id": "39",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Side",
        "added": "FIX.2.7",
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "id": "54",
        "name": "Side",
        "type": "SideCodeSet",
      },
      "id": "54",
      "presence": "required",
    },
    {
      "added": "FIX.4.1",
      "data": {
        "abbrName": "ExecTyp",
        "added": "FIX.4.1",
        "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
        "id": "150",
        "name": "ExecType",
        "type": "ExecTypeCodeSet",
        "updated": "FIX.5.0SP2",
        "updatedEP": "131",
      },
      "id": "150",
      "presence": "required",
    },
    {
      "added": "FIX.4.1",
      "data": {
        "abbrName": "LeavesQty",
        "added": "FIX.4.1",
        "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
        "id": "151",
        "name": "LeavesQty",
        "type": "Qty",
      },
      "id": "151",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "188",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "Instrmt",
        "added": "FIX.4.3",
        "category": "Common",
        "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
        "id": "1003",
        "name": "Instrument",
        "type": "component",
      },
      "id": "1003",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "188",
    },
  ],
}
`;

exports[`FIXParser #parse: ExecutionReport should match snapshot 11`] = `
Message {
  "bodyLengthExpected": 28,
  "bodyLengthValid": false,
  "bodyLengthValue": 1753,
  "checksumExpected": null,
  "checksumValid": false,
  "checksumValue": null,
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX4",
        "group": undefined,
        "id": "8002",
        "name": "FIX44",
        "sort": 2,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.4",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.4",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 1753,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "ExecutionReport

The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
        "group": undefined,
        "id": "35009",
        "name": "ExecutionReport",
        "sort": 9,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "8",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "8",
    },
    Field {
      "category": null,
      "description": "Sub-identifier (e.g. Clearing Account for PartyRole (452)=Clearing Firm, Locate ID # for PartyRole=Locate/Lending Firm, etc). Not required when using PartyID (448), PartyIDSource (447), and PartyRole.",
      "enumeration": null,
      "name": "PartySubID",
      "section": null,
      "tag": 523,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "S|E|B Auto-pricing",
    },
  ],
  "description": "ExecutionReport",
  "fixVersion": "FIX.4.4",
  "messageSequence": -1,
  "messageString": "8=FIX.4.49=175335=8523=S|E|B Auto-pricing",
  "messageType": "8",
  "messageTypeDescription": "The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
  "structure": [
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "CumQty",
        "added": "FIX.2.7",
        "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
        "id": "14",
        "name": "CumQty",
        "type": "Qty",
      },
      "id": "14",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "ExecID",
        "added": "FIX.2.7",
        "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
        "id": "17",
        "name": "ExecID",
        "type": "String",
        "updated": "FIX.5.0SP1",
        "updatedEP": "95",
      },
      "id": "17",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "188",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "OrdID",
        "added": "FIX.2.7",
        "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
        "id": "37",
        "name": "OrderID",
        "type": "String",
      },
      "id": "37",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "OrdStat",
        "added": "FIX.2.7",
        "baseCategory": "SingleGeneralOrderHandling",
        "baseCategoryAbbrName": "Stat",
        "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "id": "39",
        "name": "OrdStatus",
        "type": "OrdStatusCodeSet",
      },
      "id": "39",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Side",
        "added": "FIX.2.7",
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "id": "54",
        "name": "Side",
        "type": "SideCodeSet",
      },
      "id": "54",
      "presence": "required",
    },
    {
      "added": "FIX.4.1",
      "data": {
        "abbrName": "ExecTyp",
        "added": "FIX.4.1",
        "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
        "id": "150",
        "name": "ExecType",
        "type": "ExecTypeCodeSet",
        "updated": "FIX.5.0SP2",
        "updatedEP": "131",
      },
      "id": "150",
      "presence": "required",
    },
    {
      "added": "FIX.4.1",
      "data": {
        "abbrName": "LeavesQty",
        "added": "FIX.4.1",
        "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
        "id": "151",
        "name": "LeavesQty",
        "type": "Qty",
      },
      "id": "151",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "188",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "Instrmt",
        "added": "FIX.4.3",
        "category": "Common",
        "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
        "id": "1003",
        "name": "Instrument",
        "type": "component",
      },
      "id": "1003",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "188",
    },
  ],
}
`;

exports[`FIXParser #parse: Heartbeat should match snapshot 1`] = `
Message {
  "bodyLengthExpected": 51,
  "bodyLengthValid": true,
  "bodyLengthValue": 51,
  "checksumExpected": "249",
  "checksumValid": true,
  "checksumValue": "249",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX.4.2",
        "group": undefined,
        "id": "8001",
        "name": "FIX42",
        "sort": 1,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.2",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.2",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 51,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Heartbeat

The Heartbeat monitors the status of the communication link and identifies when the last of a string of messages was not received.",
        "group": undefined,
        "id": "35001",
        "name": "Heartbeat",
        "sort": 1,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "0",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 703,
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "ABC",
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20100130-10:53:40.830",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "XYZ",
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "249",
    },
  ],
  "description": "Heartbeat",
  "fixVersion": "FIX.4.2",
  "messageSequence": 703,
  "messageString": "8=FIX.4.29=5135=034=70349=ABC52=20100130-10:53:40.83056=XYZ10=249",
  "messageType": "0",
  "messageTypeDescription": "The Heartbeat monitors the status of the communication link and identifies when the last of a string of messages was not received.",
  "structure": [
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
  ],
}
`;

exports[`FIXParser #parse: Heartbeat should match snapshot 2`] = `
Message {
  "bodyLengthExpected": 47,
  "bodyLengthValid": true,
  "bodyLengthValue": 47,
  "checksumExpected": "057",
  "checksumValid": true,
  "checksumValue": "057",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX.4.2",
        "group": undefined,
        "id": "8001",
        "name": "FIX42",
        "sort": 1,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.2",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.2",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 47,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Heartbeat

The Heartbeat monitors the status of the communication link and identifies when the last of a string of messages was not received.",
        "group": undefined,
        "id": "35001",
        "name": "Heartbeat",
        "sort": 1,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "0",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "XYZ",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "ABC",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 711,
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20100130-10:53:36",
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "057",
    },
  ],
  "description": "Heartbeat",
  "fixVersion": "FIX.4.2",
  "messageSequence": 711,
  "messageString": "8=FIX.4.29=4735=049=XYZ56=ABC34=71152=20100130-10:53:3610=057",
  "messageType": "0",
  "messageTypeDescription": "The Heartbeat monitors the status of the communication link and identifies when the last of a string of messages was not received.",
  "structure": [
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
  ],
}
`;

exports[`FIXParser #parse: Heartbeat should match snapshot 3`] = `
Message {
  "bodyLengthExpected": 56,
  "bodyLengthValid": true,
  "bodyLengthValue": 56,
  "checksumExpected": "162",
  "checksumValid": true,
  "checksumValue": "162",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX.4.2",
        "group": undefined,
        "id": "8001",
        "name": "FIX42",
        "sort": 1,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.2",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.2",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 56,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Heartbeat

The Heartbeat monitors the status of the communication link and identifies when the last of a string of messages was not received.",
        "group": undefined,
        "id": "35001",
        "name": "Heartbeat",
        "sort": 1,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "0",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 29,
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "TARGET",
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20140228-05:47:28.554",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "SENDER",
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "162",
    },
  ],
  "description": "Heartbeat",
  "fixVersion": "FIX.4.2",
  "messageSequence": 29,
  "messageString": "8=FIX.4.29=5635=034=2949=TARGET52=20140228-05:47:28.55456=SENDER10=162",
  "messageType": "0",
  "messageTypeDescription": "The Heartbeat monitors the status of the communication link and identifies when the last of a string of messages was not received.",
  "structure": [
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
  ],
}
`;

exports[`FIXParser #parse: Heartbeat should match snapshot 4`] = `
Message {
  "bodyLengthExpected": 65,
  "bodyLengthValid": true,
  "bodyLengthValue": 65,
  "checksumExpected": "173",
  "checksumValid": true,
  "checksumValue": "173",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX.4.2",
        "group": undefined,
        "id": "8001",
        "name": "FIX42",
        "sort": 1,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.2",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.2",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 65,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Heartbeat

The Heartbeat monitors the status of the communication link and identifies when the last of a string of messages was not received.",
        "group": undefined,
        "id": "35001",
        "name": "Heartbeat",
        "sort": 1,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "0",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 21,
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "SENDER",
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20140228-05:48:28.554",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "TARGET",
    },
    Field {
      "category": null,
      "description": "Identifier included in Test Request message to be returned in resulting Heartbeat",
      "enumeration": null,
      "name": "TestReqID",
      "section": null,
      "tag": 112,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "TEST",
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "173",
    },
  ],
  "description": "Heartbeat",
  "fixVersion": "FIX.4.2",
  "messageSequence": 21,
  "messageString": "8=FIX.4.29=6535=034=2149=SENDER52=20140228-05:48:28.55456=TARGET112=TEST10=173",
  "messageType": "0",
  "messageTypeDescription": "The Heartbeat monitors the status of the communication link and identifies when the last of a string of messages was not received.",
  "structure": [
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
  ],
}
`;

exports[`FIXParser #parse: Heartbeat should match snapshot 5`] = `
Message {
  "bodyLengthExpected": 42,
  "bodyLengthValid": true,
  "bodyLengthValue": 42,
  "checksumExpected": "185",
  "checksumValid": true,
  "checksumValue": "185",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX.4.2",
        "group": undefined,
        "id": "8001",
        "name": "FIX42",
        "sort": 1,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.2",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.2",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 42,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Heartbeat

The Heartbeat monitors the status of the communication link and identifies when the last of a string of messages was not received.",
        "group": undefined,
        "id": "35001",
        "name": "Heartbeat",
        "sort": 1,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "0",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "A",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "B",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 12,
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20100304-07:59:30",
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "185",
    },
  ],
  "description": "Heartbeat",
  "fixVersion": "FIX.4.2",
  "messageSequence": 12,
  "messageString": "8=FIX.4.29=4235=049=A56=B34=1252=20100304-07:59:3010=185",
  "messageType": "0",
  "messageTypeDescription": "The Heartbeat monitors the status of the communication link and identifies when the last of a string of messages was not received.",
  "structure": [
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
  ],
}
`;

exports[`FIXParser #parse: IOI should match snapshot 1`] = `
Message {
  "bodyLengthExpected": 97,
  "bodyLengthValid": true,
  "bodyLengthValue": 97,
  "checksumExpected": "248",
  "checksumValid": true,
  "checksumValue": "248",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX.4.2",
        "group": undefined,
        "id": "8001",
        "name": "FIX42",
        "sort": 1,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.2",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.2",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 97,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "IOI

Indication of interest messages are used to market merchandise which the broker is buying or selling in either a proprietary or agency capacity. The indications can be time bound with a specific expiration value. Indications are distributed with the understanding that other firms may react to the message first and that the merchandise may no longer be available due to prior trade.

Indication messages can be transmitted in various transaction types; NEW, CANCEL, and REPLACE. All message types other than NEW modify the state of the message identified in IOIRefID.",
        "group": undefined,
        "id": "35007",
        "name": "IOI",
        "sort": 7,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "6",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "6",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "BKR",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "IM",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 14,
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20100204-09:18:42",
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Unique identifier of IOI message.

(Prior to FIX 4.1 this field was of type int)",
      "enumeration": null,
      "name": "IOIID",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 23,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "115685",
    },
    Field {
      "category": null,
      "description": "Identifies IOI message transaction type",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "IOITransTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "New",
        "group": undefined,
        "id": "28001",
        "name": "New",
        "sort": 1,
        "tag": 28,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "N",
      },
      "name": "IOITransType",
      "section": null,
      "tag": 28,
      "type": null,
      "value": "N",
    },
    Field {
      "category": null,
      "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
      "enumeration": null,
      "name": "Symbol",
      "section": null,
      "tag": 55,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "SPMI.MI",
    },
    Field {
      "category": null,
      "description": "Side of order (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "SideCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Sell

For Securities Financing indicates the delivery of securities or collateral.",
        "group": undefined,
        "id": "54002",
        "name": "Sell",
        "sort": 2,
        "tag": 54,
        "type": "char",
        "updated": "FIX.5.0SP2",
        "updatedEP": "254",
        "value": "2",
      },
      "name": "Side",
      "section": null,
      "tag": 54,
      "type": null,
      "value": "2",
    },
    Field {
      "category": null,
      "description": "Price per unit of quantity (e.g. per share)",
      "enumeration": null,
      "name": "Price",
      "section": null,
      "tag": 44,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "standard": "XML",
        },
        "name": "Price",
      },
      "value": 2200.75,
    },
    Field {
      "category": null,
      "description": "Quantity (e.g. number of shares) in numeric form or relative size.",
      "enumeration": EnumType {
        "added": "FIX.4.4",
        "addedEP": "25",
        "codeSet": "IOIQtyCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Small",
        "group": undefined,
        "id": "27001",
        "name": "Small",
        "sort": 2,
        "tag": 27,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "S",
      },
      "name": "IOIQty",
      "section": null,
      "tag": 27,
      "type": null,
      "value": "S",
    },
    Field {
      "category": null,
      "description": "Relative quality of indication",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "IOIQltyIndCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "High",
        "group": undefined,
        "id": "25001",
        "name": "High",
        "sort": 1,
        "tag": 25,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "H",
      },
      "name": "IOIQltyInd",
      "section": null,
      "tag": 25,
      "type": null,
      "value": "H",
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "248",
    },
  ],
  "description": "IOI",
  "fixVersion": "FIX.4.2",
  "messageSequence": 14,
  "messageString": "8=FIX.4.29=9735=649=BKR56=IM34=1452=20100204-09:18:4223=11568528=N55=SPMI.MI54=244=2200.7527=S25=H10=248",
  "messageType": "6",
  "messageTypeDescription": "Indication of interest messages are used to market merchandise which the broker is buying or selling in either a proprietary or agency capacity. The indications can be time bound with a specific expiration value. Indications are distributed with the understanding that other firms may react to the message first and that the merchandise may no longer be available due to prior trade.

Indication messages can be transmitted in various transaction types; NEW, CANCEL, and REPLACE. All message types other than NEW modify the state of the message identified in IOIRefID.",
  "structure": [
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "IOIID",
        "added": "FIX.2.7",
        "baseCategory": "Indication",
        "baseCategoryAbbrName": "ID",
        "description": "Unique identifier of IOI message.

(Prior to FIX 4.1 this field was of type int)",
        "id": "23",
        "name": "IOIID",
        "type": "String",
      },
      "id": "23",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Qty",
        "added": "FIX.2.7",
        "description": "Quantity (e.g. number of shares) in numeric form or relative size.",
        "id": "27",
        "name": "IOIQty",
        "type": "IOIQtyCodeSet",
        "unionDataType": "Qty",
      },
      "id": "27",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "TransTyp",
        "added": "FIX.2.7",
        "description": "Identifies IOI message transaction type",
        "id": "28",
        "name": "IOITransType",
        "type": "IOITransTypeCodeSet",
      },
      "id": "28",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Side",
        "added": "FIX.2.7",
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "id": "54",
        "name": "Side",
        "type": "SideCodeSet",
      },
      "id": "54",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "Instrmt",
        "added": "FIX.4.3",
        "category": "Common",
        "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
        "id": "1003",
        "name": "Instrument",
        "type": "component",
      },
      "id": "1003",
      "presence": "required",
    },
  ],
}
`;

exports[`FIXParser #parse: Logon should match snapshot 1`] = `
Message {
  "bodyLengthExpected": 76,
  "bodyLengthValid": true,
  "bodyLengthValue": 76,
  "checksumExpected": "134",
  "checksumValid": true,
  "checksumValue": "134",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX.4.2",
        "group": undefined,
        "id": "8001",
        "name": "FIX42",
        "sort": 1,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.2",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.2",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 76,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Logon

The logon message authenticates a user establishing a connection to a remote system. The logon message must be the first message sent by the application requesting to initiate a FIX session.",
        "group": undefined,
        "id": "35011",
        "name": "Logon",
        "sort": 11,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "A",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "A",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 702,
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "ABC",
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20100130-10:52:40.663",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "XYZ",
    },
    Field {
      "category": null,
      "description": "Number of bytes in raw data field.",
      "enumeration": null,
      "name": "RawDataLength",
      "section": null,
      "tag": 95,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 4,
    },
    Field {
      "category": null,
      "description": "Unformatted raw data, can include bitmaps, word processor documents, etc.",
      "enumeration": null,
      "name": "RawData",
      "section": null,
      "tag": 96,
      "type": {
        "added": "FIX.2.7",
        "baseType": "String",
        "description": "string field containing raw data with no format or content restrictions. Data fields are always immediately preceded by a length field. The length field should specify the number of bytes of the value of the data field (up to but not including the terminating SOH).

Caution: the value of one of these fields may contain the delimiter (SOH) character. Note that the value specified for this field should be followed by the delimiter (SOH) character as all fields are terminated with an "SOH".",
        "mappedDatatype": {
          "base": "xs:base64Binary",
          "builtin": "true",
          "description": "In FIXML, all data type fields are using base64Binary encoding.",
          "standard": "XML",
        },
        "name": "data",
        "updated": "FIX.5.0SP2",
        "updatedEP": "208",
      },
      "value": "1234",
    },
    Field {
      "category": null,
      "description": "Method of encryption.",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "EncryptMethodCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "None / Other",
        "group": undefined,
        "id": "98001",
        "name": "None",
        "sort": 1,
        "tag": 98,
        "type": "int",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "0",
      },
      "name": "EncryptMethod",
      "section": null,
      "tag": 98,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Heartbeat interval (seconds)",
      "enumeration": null,
      "name": "HeartBtInt",
      "section": null,
      "tag": 108,
      "type": {
        "added": "FIX.2.7",
        "description": "Sequence of digits without commas or decimals and optional sign character (ASCII characters "-" and "0" - "9" ). The sign character utilizes one byte (i.e. positive int is "99999" while negative int is "-99999"). Note that int values may contain leading zeros (e.g. "00023" = "23").",
        "mappedDatatype": {
          "base": "xs:integer",
          "builtin": "true",
          "standard": "XML",
        },
        "name": "int",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "value": 60,
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "134",
    },
  ],
  "description": "Logon",
  "fixVersion": "FIX.4.2",
  "messageSequence": 702,
  "messageString": "8=FIX.4.29=7635=A34=70249=ABC52=20100130-10:52:40.66356=XYZ95=496=123498=0108=6010=134",
  "messageType": "A",
  "messageTypeDescription": "The logon message authenticates a user establishing a connection to a remote system. The logon message must be the first message sent by the application requesting to initiate a FIX session.",
  "structure": [
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "EncryptMethod",
        "added": "FIX.2.7",
        "description": "Method of encryption.",
        "id": "98",
        "name": "EncryptMethod",
        "type": "EncryptMethodCodeSet",
      },
      "id": "98",
      "presence": "required",
    },
    {
      "added": "FIX.3.0",
      "data": {
        "abbrName": "HeartBtInt",
        "added": "FIX.3.0",
        "description": "Heartbeat interval (seconds)",
        "id": "108",
        "name": "HeartBtInt",
        "type": "int",
      },
      "id": "108",
      "presence": "required",
    },
    {
      "added": "FIX.4.4",
      "addedEP": "-1",
      "data": {
        "abbrName": "DefApplVerID",
        "added": "FIX.4.4",
        "addedEP": "16",
        "description": "Specifies the service pack release being applied, by default, to message at the session level. Enumerated field with values assigned at time of service pack release. Uses same values as ApplVerID",
        "id": "1137",
        "name": "DefaultApplVerID",
        "type": "ApplVerIDCodeSet",
      },
      "id": "1137",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
  ],
}
`;

exports[`FIXParser #parse: Logon should match snapshot 2`] = `
Message {
  "bodyLengthExpected": 94,
  "bodyLengthValid": true,
  "bodyLengthValue": 94,
  "checksumExpected": "183",
  "checksumValid": true,
  "checksumValue": "183",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX4",
        "group": undefined,
        "id": "8002",
        "name": "FIX44",
        "sort": 2,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.4",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.4",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 94,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Logon

The logon message authenticates a user establishing a connection to a remote system. The logon message must be the first message sent by the application requesting to initiate a FIX session.",
        "group": undefined,
        "id": "35011",
        "name": "Logon",
        "sort": 11,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "A",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "A",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "XYZ",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "ABC",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 710,
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20100130-10:52:36",
    },
    Field {
      "category": null,
      "description": "Specifies the service pack release being applied to a message at the session level. Enumerated field with values assigned at time of service pack release. Uses same values as ApplVerID",
      "enumeration": null,
      "name": "RefApplVerID",
      "section": null,
      "tag": 1130,
      "type": null,
      "value": "6",
    },
    Field {
      "category": null,
      "description": "The extension pack number associated with an application message.",
      "enumeration": null,
      "name": "RefApplExtID",
      "section": null,
      "tag": 1406,
      "type": {
        "added": "FIX.2.7",
        "description": "Sequence of digits without commas or decimals and optional sign character (ASCII characters "-" and "0" - "9" ). The sign character utilizes one byte (i.e. positive int is "99999" while negative int is "-99999"). Note that int values may contain leading zeros (e.g. "00023" = "23").",
        "mappedDatatype": {
          "base": "xs:integer",
          "builtin": "true",
          "standard": "XML",
        },
        "name": "int",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "value": 6,
    },
    Field {
      "category": null,
      "description": "Specifies the application layer version being applied at the message level.",
      "enumeration": EnumType {
        "added": "FIX.4.4",
        "addedEP": "-1",
        "codeSet": "ApplVerIDCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "FIX44",
        "group": undefined,
        "id": "1128007",
        "name": "FIX44",
        "sort": 6,
        "tag": 1128,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "6",
      },
      "name": "ApplVerID",
      "section": null,
      "tag": 1128,
      "type": null,
      "value": "6",
    },
    Field {
      "category": null,
      "description": "Specifies a custom extension to a message being applied at the session level.",
      "enumeration": null,
      "name": "RefCstmApplVerID",
      "section": null,
      "tag": 1131,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "6",
    },
    Field {
      "category": null,
      "description": "Indicates that the application version identified in the fields RefApplVerID(1130), RefApplExtID(1406), and RefCstmApplVerID(1131) is the default for the message type identified in RefMsgType(372) field.",
      "enumeration": null,
      "name": "DefaultVerIndicator",
      "section": null,
      "tag": 1410,
      "type": {
        "added": "FIX.4.2",
        "baseType": "char",
        "description": "char field containing one of two values:

'Y' = True/Yes

'N' = False/No",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "false",
          "description": "char field containing one of two values:

'Y' = True/Yes

'N' = False/No",
          "pattern": "[YN]{1}",
          "standard": "XML",
        },
        "name": "Boolean",
      },
      "value": "Y",
    },
    Field {
      "category": null,
      "description": "Method of encryption.",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "EncryptMethodCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "None / Other",
        "group": undefined,
        "id": "98001",
        "name": "None",
        "sort": 1,
        "tag": 98,
        "type": "int",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "0",
      },
      "name": "EncryptMethod",
      "section": null,
      "tag": 98,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Heartbeat interval (seconds)",
      "enumeration": null,
      "name": "HeartBtInt",
      "section": null,
      "tag": 108,
      "type": {
        "added": "FIX.2.7",
        "description": "Sequence of digits without commas or decimals and optional sign character (ASCII characters "-" and "0" - "9" ). The sign character utilizes one byte (i.e. positive int is "99999" while negative int is "-99999"). Note that int values may contain leading zeros (e.g. "00023" = "23").",
        "mappedDatatype": {
          "base": "xs:integer",
          "builtin": "true",
          "standard": "XML",
        },
        "name": "int",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "value": 60,
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "183",
    },
  ],
  "description": "Logon",
  "fixVersion": "FIX.4.4",
  "messageSequence": 710,
  "messageString": "8=FIX.4.49=9435=A49=XYZ56=ABC34=71052=20100130-10:52:361130=61406=61128=61131=61410=Y98=0108=6010=183",
  "messageType": "A",
  "messageTypeDescription": "The logon message authenticates a user establishing a connection to a remote system. The logon message must be the first message sent by the application requesting to initiate a FIX session.",
  "structure": [
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "EncryptMethod",
        "added": "FIX.2.7",
        "description": "Method of encryption.",
        "id": "98",
        "name": "EncryptMethod",
        "type": "EncryptMethodCodeSet",
      },
      "id": "98",
      "presence": "required",
    },
    {
      "added": "FIX.3.0",
      "data": {
        "abbrName": "HeartBtInt",
        "added": "FIX.3.0",
        "description": "Heartbeat interval (seconds)",
        "id": "108",
        "name": "HeartBtInt",
        "type": "int",
      },
      "id": "108",
      "presence": "required",
    },
    {
      "added": "FIX.4.4",
      "addedEP": "-1",
      "data": {
        "abbrName": "DefApplVerID",
        "added": "FIX.4.4",
        "addedEP": "16",
        "description": "Specifies the service pack release being applied, by default, to message at the session level. Enumerated field with values assigned at time of service pack release. Uses same values as ApplVerID",
        "id": "1137",
        "name": "DefaultApplVerID",
        "type": "ApplVerIDCodeSet",
      },
      "id": "1137",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
  ],
}
`;

exports[`FIXParser #parse: Logon should match snapshot 3`] = `
Message {
  "bodyLengthExpected": 84,
  "bodyLengthValid": true,
  "bodyLengthValue": 84,
  "checksumExpected": "240",
  "checksumValid": true,
  "checksumValue": "240",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX.4.2",
        "group": undefined,
        "id": "8001",
        "name": "FIX42",
        "sort": 1,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.2",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.2",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 84,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Logon

The logon message authenticates a user establishing a connection to a remote system. The logon message must be the first message sent by the application requesting to initiate a FIX session.",
        "group": undefined,
        "id": "35011",
        "name": "Logon",
        "sort": 11,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "A",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "A",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 702,
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "ABC",
    },
    Field {
      "category": null,
      "description": "Specifies the application layer version being applied at the message level.",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "260",
        "codeSet": "ApplVerIDCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "FIXLatest",
        "group": undefined,
        "id": "1128011",
        "name": "FIXLatest",
        "sort": 10,
        "tag": 1128,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "10",
      },
      "name": "ApplVerID",
      "section": null,
      "tag": 1128,
      "type": null,
      "value": "10",
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20100130-10:52:40.663",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "XYZ",
    },
    Field {
      "category": null,
      "description": "Number of bytes in raw data field.",
      "enumeration": null,
      "name": "RawDataLength",
      "section": null,
      "tag": 95,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 4,
    },
    Field {
      "category": null,
      "description": "Unformatted raw data, can include bitmaps, word processor documents, etc.",
      "enumeration": null,
      "name": "RawData",
      "section": null,
      "tag": 96,
      "type": {
        "added": "FIX.2.7",
        "baseType": "String",
        "description": "string field containing raw data with no format or content restrictions. Data fields are always immediately preceded by a length field. The length field should specify the number of bytes of the value of the data field (up to but not including the terminating SOH).

Caution: the value of one of these fields may contain the delimiter (SOH) character. Note that the value specified for this field should be followed by the delimiter (SOH) character as all fields are terminated with an "SOH".",
        "mappedDatatype": {
          "base": "xs:base64Binary",
          "builtin": "true",
          "description": "In FIXML, all data type fields are using base64Binary encoding.",
          "standard": "XML",
        },
        "name": "data",
        "updated": "FIX.5.0SP2",
        "updatedEP": "208",
      },
      "value": "1234",
    },
    Field {
      "category": null,
      "description": "Heartbeat interval (seconds)",
      "enumeration": null,
      "name": "HeartBtInt",
      "section": null,
      "tag": 108,
      "type": {
        "added": "FIX.2.7",
        "description": "Sequence of digits without commas or decimals and optional sign character (ASCII characters "-" and "0" - "9" ). The sign character utilizes one byte (i.e. positive int is "99999" while negative int is "-99999"). Note that int values may contain leading zeros (e.g. "00023" = "23").",
        "mappedDatatype": {
          "base": "xs:integer",
          "builtin": "true",
          "standard": "XML",
        },
        "name": "int",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "value": 60,
    },
    Field {
      "category": null,
      "description": "Method of encryption.",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "EncryptMethodCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "None / Other",
        "group": undefined,
        "id": "98001",
        "name": "None",
        "sort": 1,
        "tag": 98,
        "type": "int",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "0",
      },
      "name": "EncryptMethod",
      "section": null,
      "tag": 98,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "240",
    },
  ],
  "description": "Logon",
  "fixVersion": "FIX.4.2",
  "messageSequence": 702,
  "messageString": "8=FIX.4.29=8435=A34=70249=ABC1128=1052=20100130-10:52:40.66356=XYZ95=496=1234108=6098=010=240",
  "messageType": "A",
  "messageTypeDescription": "The logon message authenticates a user establishing a connection to a remote system. The logon message must be the first message sent by the application requesting to initiate a FIX session.",
  "structure": [
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "EncryptMethod",
        "added": "FIX.2.7",
        "description": "Method of encryption.",
        "id": "98",
        "name": "EncryptMethod",
        "type": "EncryptMethodCodeSet",
      },
      "id": "98",
      "presence": "required",
    },
    {
      "added": "FIX.3.0",
      "data": {
        "abbrName": "HeartBtInt",
        "added": "FIX.3.0",
        "description": "Heartbeat interval (seconds)",
        "id": "108",
        "name": "HeartBtInt",
        "type": "int",
      },
      "id": "108",
      "presence": "required",
    },
    {
      "added": "FIX.4.4",
      "addedEP": "-1",
      "data": {
        "abbrName": "DefApplVerID",
        "added": "FIX.4.4",
        "addedEP": "16",
        "description": "Specifies the service pack release being applied, by default, to message at the session level. Enumerated field with values assigned at time of service pack release. Uses same values as ApplVerID",
        "id": "1137",
        "name": "DefaultApplVerID",
        "type": "ApplVerIDCodeSet",
      },
      "id": "1137",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
  ],
}
`;

exports[`FIXParser #parse: Logon should match snapshot 4`] = `
Message {
  "bodyLengthExpected": 690,
  "bodyLengthValid": true,
  "bodyLengthValue": 690,
  "checksumExpected": "241",
  "checksumValid": false,
  "checksumValue": "161",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": null,
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.1",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 690,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Logon

The logon message authenticates a user establishing a connection to a remote system. The logon message must be the first message sent by the application requesting to initiate a FIX session.",
        "group": undefined,
        "id": "35011",
        "name": "Logon",
        "sort": 11,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "A",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "A",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "INVMGR",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "BRKR",
    },
    Field {
      "category": null,
      "description": "Method of encryption.",
      "enumeration": EnumType {
        "added": "FIX.4.0",
        "addedEP": undefined,
        "codeSet": "EncryptMethodCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "PGP / DES-MD5 (See app note on FIX web site)",
        "group": undefined,
        "id": "98006",
        "name": "PGPDESMD5",
        "sort": 6,
        "tag": 98,
        "type": "int",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "5",
      },
      "name": "EncryptMethod",
      "section": null,
      "tag": 98,
      "type": null,
      "value": "5",
    },
    Field {
      "category": null,
      "description": "Length of encrypted message",
      "enumeration": null,
      "name": "SecureDataLen",
      "section": null,
      "tag": 90,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 625,
    },
    Field {
      "category": null,
      "description": "Actual encrypted data stream",
      "enumeration": null,
      "name": "SecureData",
      "section": null,
      "tag": 91,
      "type": {
        "added": "FIX.2.7",
        "baseType": "String",
        "description": "string field containing raw data with no format or content restrictions. Data fields are always immediately preceded by a length field. The length field should specify the number of bytes of the value of the data field (up to but not including the terminating SOH).

Caution: the value of one of these fields may contain the delimiter (SOH) character. Note that the value specified for this field should be followed by the delimiter (SOH) character as all fields are terminated with an "SOH".",
        "mappedDatatype": {
          "base": "xs:base64Binary",
          "builtin": "true",
          "description": "In FIXML, all data type fields are using base64Binary encoding.",
          "standard": "XML",
        },
        "name": "data",
        "updated": "FIX.5.0SP2",
        "updatedEP": "208",
      },
      "value": "-----BEGIN PGP MESSAGE----- Version: 2.7.1  hIwDDrony+hQ+FEBA/9qd5Vcdw2w2DSKx3+XbqOhWz9xZ07RYRyhKDG/qE5EQbYu 6srrDowCzscPb9+krWcxH4xL3B/1DEwL3QpQsxCSGY1JnbjDCTyJ21nuZ6NHY6YA AAECr4mTIlZgM5hmSmrlunDoeOQWwPkca9OCWh0n3VXfGkA7e99DCq0P3MZ48Jlr GNF141hwWLIpN2RfqYvfzPD0w7I54wf3z/sYefGj+a0QTt1JOLEFxzsPykIyMPEI kGfdjuzOL8/94plkeeWSJHx7K6IemVRsT6HwLJtFaW/JIJr+hxYr1Z8BBjyXoQCz argut9niFOcnSqwvZolAYqjMPrkWuaeJn+bJ4kCEuLGdrQJDHvlzOS6r3By80IUc 2L4W7yJL7Am82wTWD4s5ANBQz8FCwLtLMivUTvqsg/Zp8v7vSQ1FfEIsg30XXtBL 6QBYtnYnAAAwCEOrv6DavDTfhWl72D6VfiOLrHIHtEQf3iwb5JFHGRaMpX88VlSU W7qy163o78rIEL3WEak4pwmnf28P =v9gz -----END PGP MESSAGE----- ",
    },
    Field {
      "category": null,
      "description": "Number of bytes in signature field",
      "enumeration": null,
      "name": "SignatureLength",
      "section": null,
      "tag": 93,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 16,
    },
    Field {
      "category": null,
      "description": "Electronic signature",
      "enumeration": null,
      "name": "Signature",
      "section": null,
      "tag": 89,
      "type": {
        "added": "FIX.2.7",
        "baseType": "String",
        "description": "string field containing raw data with no format or content restrictions. Data fields are always immediately preceded by a length field. The length field should specify the number of bytes of the value of the data field (up to but not including the terminating SOH).

Caution: the value of one of these fields may contain the delimiter (SOH) character. Note that the value specified for this field should be followed by the delimiter (SOH) character as all fields are terminated with an "SOH".",
        "mappedDatatype": {
          "base": "xs:base64Binary",
          "builtin": "true",
          "description": "In FIXML, all data type fields are using base64Binary encoding.",
          "standard": "XML",
        },
        "name": "data",
        "updated": "FIX.5.0SP2",
        "updatedEP": "208",
      },
      "value": "................",
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "161",
    },
    Field {
      "category": null,
      "description": null,
      "enumeration": null,
      "name": null,
      "section": null,
      "tag": 0,
      "type": null,
      "value": "",
    },
  ],
  "description": "Logon",
  "fixVersion": "FIX.4.1",
  "messageSequence": -1,
  "messageString": "8=FIX.4.19=69035=A49=INVMGR56=BRKR98=590=62591=-----BEGIN PGP MESSAGE----- Version: 2.7.1  hIwDDrony+hQ+FEBA/9qd5Vcdw2w2DSKx3+XbqOhWz9xZ07RYRyhKDG/qE5EQbYu 6srrDowCzscPb9+krWcxH4xL3B/1DEwL3QpQsxCSGY1JnbjDCTyJ21nuZ6NHY6YA AAECr4mTIlZgM5hmSmrlunDoeOQWwPkca9OCWh0n3VXfGkA7e99DCq0P3MZ48Jlr GNF141hwWLIpN2RfqYvfzPD0w7I54wf3z/sYefGj+a0QTt1JOLEFxzsPykIyMPEI kGfdjuzOL8/94plkeeWSJHx7K6IemVRsT6HwLJtFaW/JIJr+hxYr1Z8BBjyXoQCz argut9niFOcnSqwvZolAYqjMPrkWuaeJn+bJ4kCEuLGdrQJDHvlzOS6r3By80IUc 2L4W7yJL7Am82wTWD4s5ANBQz8FCwLtLMivUTvqsg/Zp8v7vSQ1FfEIsg30XXtBL 6QBYtnYnAAAwCEOrv6DavDTfhWl72D6VfiOLrHIHtEQf3iwb5JFHGRaMpX88VlSU W7qy163o78rIEL3WEak4pwmnf28P =v9gz -----END PGP MESSAGE----- 93=1689=................10=161",
  "messageType": "A",
  "messageTypeDescription": "The logon message authenticates a user establishing a connection to a remote system. The logon message must be the first message sent by the application requesting to initiate a FIX session.",
  "structure": [
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "EncryptMethod",
        "added": "FIX.2.7",
        "description": "Method of encryption.",
        "id": "98",
        "name": "EncryptMethod",
        "type": "EncryptMethodCodeSet",
      },
      "id": "98",
      "presence": "required",
    },
    {
      "added": "FIX.3.0",
      "data": {
        "abbrName": "HeartBtInt",
        "added": "FIX.3.0",
        "description": "Heartbeat interval (seconds)",
        "id": "108",
        "name": "HeartBtInt",
        "type": "int",
      },
      "id": "108",
      "presence": "required",
    },
    {
      "added": "FIX.4.4",
      "addedEP": "-1",
      "data": {
        "abbrName": "DefApplVerID",
        "added": "FIX.4.4",
        "addedEP": "16",
        "description": "Specifies the service pack release being applied, by default, to message at the session level. Enumerated field with values assigned at time of service pack release. Uses same values as ApplVerID",
        "id": "1137",
        "name": "DefaultApplVerID",
        "type": "ApplVerIDCodeSet",
      },
      "id": "1137",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
  ],
}
`;

exports[`FIXParser #parse: Logon should match snapshot 5`] = `
Message {
  "bodyLengthExpected": 61,
  "bodyLengthValid": true,
  "bodyLengthValue": 61,
  "checksumExpected": "003",
  "checksumValid": true,
  "checksumValue": "003",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": null,
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.1",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 61,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Logon

The logon message authenticates a user establishing a connection to a remote system. The logon message must be the first message sent by the application requesting to initiate a FIX session.",
        "group": undefined,
        "id": "35011",
        "name": "Logon",
        "sort": 11,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "A",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "A",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 1,
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "EXEC",
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20121105-23:24:06",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "BANZAI",
    },
    Field {
      "category": null,
      "description": "Method of encryption.",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "EncryptMethodCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "None / Other",
        "group": undefined,
        "id": "98001",
        "name": "None",
        "sort": 1,
        "tag": 98,
        "type": "int",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "0",
      },
      "name": "EncryptMethod",
      "section": null,
      "tag": 98,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Heartbeat interval (seconds)",
      "enumeration": null,
      "name": "HeartBtInt",
      "section": null,
      "tag": 108,
      "type": {
        "added": "FIX.2.7",
        "description": "Sequence of digits without commas or decimals and optional sign character (ASCII characters "-" and "0" - "9" ). The sign character utilizes one byte (i.e. positive int is "99999" while negative int is "-99999"). Note that int values may contain leading zeros (e.g. "00023" = "23").",
        "mappedDatatype": {
          "base": "xs:integer",
          "builtin": "true",
          "standard": "XML",
        },
        "name": "int",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "value": 30,
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "003",
    },
  ],
  "description": "Logon",
  "fixVersion": "FIX.4.1",
  "messageSequence": 1,
  "messageString": "8=FIX.4.19=6135=A34=149=EXEC52=20121105-23:24:0656=BANZAI98=0108=3010=003",
  "messageType": "A",
  "messageTypeDescription": "The logon message authenticates a user establishing a connection to a remote system. The logon message must be the first message sent by the application requesting to initiate a FIX session.",
  "structure": [
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "EncryptMethod",
        "added": "FIX.2.7",
        "description": "Method of encryption.",
        "id": "98",
        "name": "EncryptMethod",
        "type": "EncryptMethodCodeSet",
      },
      "id": "98",
      "presence": "required",
    },
    {
      "added": "FIX.3.0",
      "data": {
        "abbrName": "HeartBtInt",
        "added": "FIX.3.0",
        "description": "Heartbeat interval (seconds)",
        "id": "108",
        "name": "HeartBtInt",
        "type": "int",
      },
      "id": "108",
      "presence": "required",
    },
    {
      "added": "FIX.4.4",
      "addedEP": "-1",
      "data": {
        "abbrName": "DefApplVerID",
        "added": "FIX.4.4",
        "addedEP": "16",
        "description": "Specifies the service pack release being applied, by default, to message at the session level. Enumerated field with values assigned at time of service pack release. Uses same values as ApplVerID",
        "id": "1137",
        "name": "DefaultApplVerID",
        "type": "ApplVerIDCodeSet",
      },
      "id": "1137",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
  ],
}
`;

exports[`FIXParser #parse: Logon should match snapshot 6`] = `
Message {
  "bodyLengthExpected": 69,
  "bodyLengthValid": true,
  "bodyLengthValue": 69,
  "checksumExpected": "238",
  "checksumValid": true,
  "checksumValue": "238",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX.4.2",
        "group": undefined,
        "id": "8001",
        "name": "FIX42",
        "sort": 1,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.2",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.2",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 69,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Logon

The logon message authenticates a user establishing a connection to a remote system. The logon message must be the first message sent by the application requesting to initiate a FIX session.",
        "group": undefined,
        "id": "35011",
        "name": "Logon",
        "sort": 11,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "A",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "A",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 12,
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "SENDER",
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20140228-05:42:38.026",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "TARGET",
    },
    Field {
      "category": null,
      "description": "Method of encryption.",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "EncryptMethodCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "None / Other",
        "group": undefined,
        "id": "98001",
        "name": "None",
        "sort": 1,
        "tag": 98,
        "type": "int",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "0",
      },
      "name": "EncryptMethod",
      "section": null,
      "tag": 98,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Heartbeat interval (seconds)",
      "enumeration": null,
      "name": "HeartBtInt",
      "section": null,
      "tag": 108,
      "type": {
        "added": "FIX.2.7",
        "description": "Sequence of digits without commas or decimals and optional sign character (ASCII characters "-" and "0" - "9" ). The sign character utilizes one byte (i.e. positive int is "99999" while negative int is "-99999"). Note that int values may contain leading zeros (e.g. "00023" = "23").",
        "mappedDatatype": {
          "base": "xs:integer",
          "builtin": "true",
          "standard": "XML",
        },
        "name": "int",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "value": 120,
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "238",
    },
  ],
  "description": "Logon",
  "fixVersion": "FIX.4.2",
  "messageSequence": 12,
  "messageString": "8=FIX.4.29=6935=A34=1249=SENDER52=20140228-05:42:38.02656=TARGET98=0108=12010=238",
  "messageType": "A",
  "messageTypeDescription": "The logon message authenticates a user establishing a connection to a remote system. The logon message must be the first message sent by the application requesting to initiate a FIX session.",
  "structure": [
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "EncryptMethod",
        "added": "FIX.2.7",
        "description": "Method of encryption.",
        "id": "98",
        "name": "EncryptMethod",
        "type": "EncryptMethodCodeSet",
      },
      "id": "98",
      "presence": "required",
    },
    {
      "added": "FIX.3.0",
      "data": {
        "abbrName": "HeartBtInt",
        "added": "FIX.3.0",
        "description": "Heartbeat interval (seconds)",
        "id": "108",
        "name": "HeartBtInt",
        "type": "int",
      },
      "id": "108",
      "presence": "required",
    },
    {
      "added": "FIX.4.4",
      "addedEP": "-1",
      "data": {
        "abbrName": "DefApplVerID",
        "added": "FIX.4.4",
        "addedEP": "16",
        "description": "Specifies the service pack release being applied, by default, to message at the session level. Enumerated field with values assigned at time of service pack release. Uses same values as ApplVerID",
        "id": "1137",
        "name": "DefaultApplVerID",
        "type": "ApplVerIDCodeSet",
      },
      "id": "1137",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
  ],
}
`;

exports[`FIXParser #parse: Logon should match snapshot 7`] = `
Message {
  "bodyLengthExpected": 69,
  "bodyLengthValid": true,
  "bodyLengthValue": 69,
  "checksumExpected": "245",
  "checksumValid": true,
  "checksumValue": "245",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX.4.2",
        "group": undefined,
        "id": "8001",
        "name": "FIX42",
        "sort": 1,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.2",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.2",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 69,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Logon

The logon message authenticates a user establishing a connection to a remote system. The logon message must be the first message sent by the application requesting to initiate a FIX session.",
        "group": undefined,
        "id": "35011",
        "name": "Logon",
        "sort": 11,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "A",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "A",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 18,
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "TARGET",
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20140228-05:42:38.054",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "SENDER",
    },
    Field {
      "category": null,
      "description": "Method of encryption.",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "EncryptMethodCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "None / Other",
        "group": undefined,
        "id": "98001",
        "name": "None",
        "sort": 1,
        "tag": 98,
        "type": "int",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "0",
      },
      "name": "EncryptMethod",
      "section": null,
      "tag": 98,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Heartbeat interval (seconds)",
      "enumeration": null,
      "name": "HeartBtInt",
      "section": null,
      "tag": 108,
      "type": {
        "added": "FIX.2.7",
        "description": "Sequence of digits without commas or decimals and optional sign character (ASCII characters "-" and "0" - "9" ). The sign character utilizes one byte (i.e. positive int is "99999" while negative int is "-99999"). Note that int values may contain leading zeros (e.g. "00023" = "23").",
        "mappedDatatype": {
          "base": "xs:integer",
          "builtin": "true",
          "standard": "XML",
        },
        "name": "int",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "value": 120,
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "245",
    },
  ],
  "description": "Logon",
  "fixVersion": "FIX.4.2",
  "messageSequence": 18,
  "messageString": "8=FIX.4.29=6935=A34=1849=TARGET52=20140228-05:42:38.05456=SENDER98=0108=12010=245",
  "messageType": "A",
  "messageTypeDescription": "The logon message authenticates a user establishing a connection to a remote system. The logon message must be the first message sent by the application requesting to initiate a FIX session.",
  "structure": [
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "EncryptMethod",
        "added": "FIX.2.7",
        "description": "Method of encryption.",
        "id": "98",
        "name": "EncryptMethod",
        "type": "EncryptMethodCodeSet",
      },
      "id": "98",
      "presence": "required",
    },
    {
      "added": "FIX.3.0",
      "data": {
        "abbrName": "HeartBtInt",
        "added": "FIX.3.0",
        "description": "Heartbeat interval (seconds)",
        "id": "108",
        "name": "HeartBtInt",
        "type": "int",
      },
      "id": "108",
      "presence": "required",
    },
    {
      "added": "FIX.4.4",
      "addedEP": "-1",
      "data": {
        "abbrName": "DefApplVerID",
        "added": "FIX.4.4",
        "addedEP": "16",
        "description": "Specifies the service pack release being applied, by default, to message at the session level. Enumerated field with values assigned at time of service pack release. Uses same values as ApplVerID",
        "id": "1137",
        "name": "DefaultApplVerID",
        "type": "ApplVerIDCodeSet",
      },
      "id": "1137",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
  ],
}
`;

exports[`FIXParser #parse: MarketDataIncrementalRefresh should match snapshot 1`] = `
Message {
  "bodyLengthExpected": 196,
  "bodyLengthValid": true,
  "bodyLengthValue": 196,
  "checksumExpected": "171",
  "checksumValid": true,
  "checksumValue": "171",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX.4.2",
        "group": undefined,
        "id": "8001",
        "name": "FIX42",
        "sort": 1,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.2",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.2",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 196,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "MarketDataIncrementalRefresh

The Market Data message for incremental updates may contain any combination of new, changed, or deleted Market Data Entries, for any combination of instruments, with any combination of trades, imbalances, quotes, index values, open, close, settlement, high, low, and VWAP prices, trade volume and open interest so long as the maximum FIX message size is not exceeded. All of these types of Market Data Entries can be changed and deleted.",
        "group": undefined,
        "id": "35031",
        "name": "MarketDataIncrementalRefresh",
        "sort": 31,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "X",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "X",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "A",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "B",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 12,
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20100318-03:21:11.364",
    },
    Field {
      "category": null,
      "description": "Unique identifier for Market Data Request",
      "enumeration": null,
      "name": "MDReqID",
      "section": null,
      "tag": 262,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "A",
    },
    Field {
      "category": null,
      "description": "Number of entries in Market Data message.",
      "enumeration": null,
      "name": "NoMDEntries",
      "section": null,
      "tag": 268,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the number of entries in a repeating group. Value must be positive.",
        "name": "NumInGroup",
      },
      "value": 2,
    },
    Field {
      "category": null,
      "description": "Type of Market Data update action.",
      "enumeration": EnumType {
        "added": "FIX.4.2",
        "addedEP": undefined,
        "codeSet": "MDUpdateActionCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "New",
        "group": undefined,
        "id": "279001",
        "name": "New",
        "sort": 1,
        "tag": 279,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "0",
      },
      "name": "MDUpdateAction",
      "section": null,
      "tag": 279,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Type of market data entry.",
      "enumeration": EnumType {
        "added": "FIX.4.2",
        "addedEP": undefined,
        "codeSet": "MDEntryTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Bid",
        "group": undefined,
        "id": "269001",
        "name": "Bid",
        "sort": 1,
        "tag": 269,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "0",
      },
      "name": "MDEntryType",
      "section": null,
      "tag": 269,
      "type": null,
      "value": "0",
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Unique Market Data Entry identifier.",
      "enumeration": null,
      "name": "MDEntryID",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 278,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "BID",
    },
    Field {
      "category": null,
      "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
      "enumeration": null,
      "name": "Symbol",
      "section": null,
      "tag": 55,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "EUR/USD",
    },
    Field {
      "category": null,
      "description": "Price of the Market Data Entry.",
      "enumeration": null,
      "name": "MDEntryPx",
      "section": null,
      "tag": 270,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "standard": "XML",
        },
        "name": "Price",
      },
      "value": 1.37215,
    },
    Field {
      "category": null,
      "description": "Identifies currency used for price or quantity fields, depending on the asset class being traded. CurrencyCodeSource(2897) may be used to disambiguate the code source scheme used, and ISO 4217 is the default scheme if absent.

Absence of this field is interpreted as the default currency for the security as defined by the respective reference data. It is recommended that systems provide the currency value whenever possible.

For securities trading and digital assets traded securities-style, identifies the currency used to denote the price. Absence of this field is interpreted as the default for the security. For Foreign Exchange (FX) and digital assets traded FX-style, identifies the dealt currency used to denominate the quantity related field(s).",
      "enumeration": null,
      "name": "Currency",
      "section": null,
      "tag": 15,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing a currency type using ISO 4217 Currency code (3 character) values (see Appendix 6-A).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "false",
          "description": "string field representing a currency type using ISO 4217 Currency code (3 character) values (see Appendix 6-A).",
          "pattern": ".{3}",
          "standard": "XML",
        },
        "name": "Currency",
      },
      "value": "EUR",
    },
    Field {
      "category": null,
      "description": "Quantity or volume represented by the Market Data Entry.",
      "enumeration": null,
      "name": "MDEntrySize",
      "section": null,
      "tag": 271,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 2500000,
    },
    Field {
      "category": null,
      "description": "Number of orders in the market.",
      "enumeration": null,
      "name": "NumberOfOrders",
      "section": null,
      "tag": 346,
      "type": {
        "added": "FIX.2.7",
        "description": "Sequence of digits without commas or decimals and optional sign character (ASCII characters "-" and "0" - "9" ). The sign character utilizes one byte (i.e. positive int is "99999" while negative int is "-99999"). Note that int values may contain leading zeros (e.g. "00023" = "23").",
        "mappedDatatype": {
          "base": "xs:integer",
          "builtin": "true",
          "standard": "XML",
        },
        "name": "int",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "value": 1,
    },
    Field {
      "category": null,
      "description": "Type of Market Data update action.",
      "enumeration": EnumType {
        "added": "FIX.4.2",
        "addedEP": undefined,
        "codeSet": "MDUpdateActionCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "New",
        "group": undefined,
        "id": "279001",
        "name": "New",
        "sort": 1,
        "tag": 279,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "0",
      },
      "name": "MDUpdateAction",
      "section": null,
      "tag": 279,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Type of market data entry.",
      "enumeration": EnumType {
        "added": "FIX.4.2",
        "addedEP": undefined,
        "codeSet": "MDEntryTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Offer",
        "group": undefined,
        "id": "269002",
        "name": "Offer",
        "sort": 2,
        "tag": 269,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "1",
      },
      "name": "MDEntryType",
      "section": null,
      "tag": 269,
      "type": null,
      "value": "1",
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Unique Market Data Entry identifier.",
      "enumeration": null,
      "name": "MDEntryID",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 278,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "OFFER",
    },
    Field {
      "category": null,
      "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
      "enumeration": null,
      "name": "Symbol",
      "section": null,
      "tag": 55,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "EUR/USD",
    },
    Field {
      "category": null,
      "description": "Price of the Market Data Entry.",
      "enumeration": null,
      "name": "MDEntryPx",
      "section": null,
      "tag": 270,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "standard": "XML",
        },
        "name": "Price",
      },
      "value": 1.37224,
    },
    Field {
      "category": null,
      "description": "Identifies currency used for price or quantity fields, depending on the asset class being traded. CurrencyCodeSource(2897) may be used to disambiguate the code source scheme used, and ISO 4217 is the default scheme if absent.

Absence of this field is interpreted as the default currency for the security as defined by the respective reference data. It is recommended that systems provide the currency value whenever possible.

For securities trading and digital assets traded securities-style, identifies the currency used to denote the price. Absence of this field is interpreted as the default for the security. For Foreign Exchange (FX) and digital assets traded FX-style, identifies the dealt currency used to denominate the quantity related field(s).",
      "enumeration": null,
      "name": "Currency",
      "section": null,
      "tag": 15,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing a currency type using ISO 4217 Currency code (3 character) values (see Appendix 6-A).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "false",
          "description": "string field representing a currency type using ISO 4217 Currency code (3 character) values (see Appendix 6-A).",
          "pattern": ".{3}",
          "standard": "XML",
        },
        "name": "Currency",
      },
      "value": "EUR",
    },
    Field {
      "category": null,
      "description": "Quantity or volume represented by the Market Data Entry.",
      "enumeration": null,
      "name": "MDEntrySize",
      "section": null,
      "tag": 271,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 2503200,
    },
    Field {
      "category": null,
      "description": "Number of orders in the market.",
      "enumeration": null,
      "name": "NumberOfOrders",
      "section": null,
      "tag": 346,
      "type": {
        "added": "FIX.2.7",
        "description": "Sequence of digits without commas or decimals and optional sign character (ASCII characters "-" and "0" - "9" ). The sign character utilizes one byte (i.e. positive int is "99999" while negative int is "-99999"). Note that int values may contain leading zeros (e.g. "00023" = "23").",
        "mappedDatatype": {
          "base": "xs:integer",
          "builtin": "true",
          "standard": "XML",
        },
        "name": "int",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "value": 1,
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "171",
    },
  ],
  "description": "MarketDataIncrementalRefresh",
  "fixVersion": "FIX.4.2",
  "messageSequence": 12,
  "messageString": "8=FIX.4.29=19635=X49=A56=B34=1252=20100318-03:21:11.364262=A268=2279=0269=0278=BID55=EUR/USD270=1.3721515=EUR271=2500000346=1279=0269=1278=OFFER55=EUR/USD270=1.3722415=EUR271=2503200346=110=171",
  "messageType": "X",
  "messageTypeDescription": "The Market Data message for incremental updates may contain any combination of new, changed, or deleted Market Data Entries, for any combination of instruments, with any combination of trades, imbalances, quotes, index values, open, close, settlement, high, low, and VWAP prices, trade volume and open interest so long as the maximum FIX message size is not exceeded. All of these types of Market Data Entries can be changed and deleted.",
  "structure": [
    {
      "added": "FIX.4.2",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.4.4",
      "data": {
        "abbrName": "Inc",
        "added": "FIX.4.4",
        "category": "MarketData",
        "description": "

",
        "fieldRef": [
          {
            "added": "FIX.4.4",
            "description": "Required if NoMDEntries(268) > 0.",
            "id": "279",
            "name": "MDUpdateAction",
            "presence": "required",
            "updated": "FIX.Latest",
            "updatedEP": "289",
          },
        ],
        "id": "2032",
        "name": "MDIncGrp",
        "numInGroup": {
          "added": "FIX.4.4",
          "id": "268",
        },
        "type": "group",
      },
      "id": "2032",
      "presence": "required",
    },
    {
      "added": "FIX.4.2",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
  ],
}
`;

exports[`FIXParser #parse: MarketDataSnapshotFullRefresh should match snapshot 1`] = `
Message {
  "bodyLengthExpected": 140,
  "bodyLengthValid": true,
  "bodyLengthValue": 140,
  "checksumExpected": "092",
  "checksumValid": true,
  "checksumValue": "092",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX4",
        "group": undefined,
        "id": "8002",
        "name": "FIX44",
        "sort": 2,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.4",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.4",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 140,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "MarketDataSnapshotFullRefresh

The Market Data messages are used as the response to a Market Data Request message. In all cases, one Market Data message refers only to one Market Data Request. It can be used to transmit a 2-sided book of orders or list of quotes, a list of trades, index values, opening, closing, settlement, high, low, or VWAP prices, the trade volume or open interest for a security, or any combination of these.",
        "group": undefined,
        "id": "35030",
        "name": "MarketDataSnapshotFullRefresh",
        "sort": 30,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "W",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "W",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 39630,
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20181029-11:11:28.985",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "FXAGGR_RATES",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "u2071",
    },
    Field {
      "category": null,
      "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
      "enumeration": null,
      "name": "Symbol",
      "section": null,
      "tag": 55,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "EURUSD",
    },
    Field {
      "category": null,
      "description": "Number of entries in Market Data message.",
      "enumeration": null,
      "name": "NoMDEntries",
      "section": null,
      "tag": 268,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the number of entries in a repeating group. Value must be positive.",
        "name": "NumInGroup",
      },
      "value": 2,
    },
    Field {
      "category": null,
      "description": "Type of market data entry.",
      "enumeration": EnumType {
        "added": "FIX.4.2",
        "addedEP": undefined,
        "codeSet": "MDEntryTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Bid",
        "group": undefined,
        "id": "269001",
        "name": "Bid",
        "sort": 1,
        "tag": 269,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "0",
      },
      "name": "MDEntryType",
      "section": null,
      "tag": 269,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Price of the Market Data Entry.",
      "enumeration": null,
      "name": "MDEntryPx",
      "section": null,
      "tag": 270,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "standard": "XML",
        },
        "name": "Price",
      },
      "value": 1.14073,
    },
    Field {
      "category": null,
      "description": "Quantity or volume represented by the Market Data Entry.",
      "enumeration": null,
      "name": "MDEntrySize",
      "section": null,
      "tag": 271,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 1400000,
    },
    Field {
      "category": null,
      "description": "Type of market data entry.",
      "enumeration": EnumType {
        "added": "FIX.4.2",
        "addedEP": undefined,
        "codeSet": "MDEntryTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Offer",
        "group": undefined,
        "id": "269002",
        "name": "Offer",
        "sort": 2,
        "tag": 269,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "1",
      },
      "name": "MDEntryType",
      "section": null,
      "tag": 269,
      "type": null,
      "value": "1",
    },
    Field {
      "category": null,
      "description": "Price of the Market Data Entry.",
      "enumeration": null,
      "name": "MDEntryPx",
      "section": null,
      "tag": 270,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "standard": "XML",
        },
        "name": "Price",
      },
      "value": 1.14074,
    },
    Field {
      "category": null,
      "description": "Quantity or volume represented by the Market Data Entry.",
      "enumeration": null,
      "name": "MDEntrySize",
      "section": null,
      "tag": 271,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 2800000,
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "092",
    },
  ],
  "description": "MarketDataSnapshotFullRefresh",
  "fixVersion": "FIX.4.4",
  "messageSequence": 39630,
  "messageString": "8=FIX.4.49=14035=W34=3963052=20181029-11:11:28.98549=FXAGGR_RATES56=u207155=EURUSD268=2269=0270=1.14073271=1400000269=1270=1.14074271=280000010=092",
  "messageType": "W",
  "messageTypeDescription": "The Market Data messages are used as the response to a Market Data Request message. In all cases, one Market Data message refers only to one Market Data Request. It can be used to transmit a 2-sided book of orders or list of quotes, a list of trades, index values, opening, closing, settlement, high, low, or VWAP prices, the trade volume or open interest for a security, or any combination of these.",
  "structure": [
    {
      "added": "FIX.4.2",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.5.0SP2",
      "addedEP": "190",
      "data": {
        "abbrName": "LastUpdateTm",
        "added": "FIX.4.4",
        "description": "Timestamp of last update to data item (or creation if no updates made since creation).",
        "id": "779",
        "name": "LastUpdateTime",
        "type": "UTCTimestamp",
      },
      "id": "779",
      "presence": "required",
    },
    {
      "added": "FIX.4.4",
      "data": {
        "abbrName": "Full",
        "added": "FIX.4.4",
        "category": "MarketData",
        "description": "

",
        "fieldRef": [
          {
            "added": "FIX.4.4",
            "description": "Required if NoMDEntries(268) > 0.",
            "id": "269",
            "name": "MDEntryType",
            "presence": "required",
            "updated": "FIX.5.0SP2",
            "updatedEP": "190",
          },
        ],
        "id": "2031",
        "name": "MDFullGrp",
        "numInGroup": {
          "added": "FIX.4.4",
          "id": "268",
        },
        "type": "group",
      },
      "id": "2031",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "190",
    },
    {
      "added": "FIX.4.2",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "Instrmt",
        "added": "FIX.4.3",
        "category": "Common",
        "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
        "id": "1003",
        "name": "Instrument",
        "type": "component",
      },
      "id": "1003",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "190",
    },
  ],
}
`;

exports[`FIXParser #parse: NewOrderSingle should match snapshot 1`] = `
Message {
  "bodyLengthExpected": 146,
  "bodyLengthValid": true,
  "bodyLengthValue": 146,
  "checksumExpected": "195",
  "checksumValid": false,
  "checksumValue": "139",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX.4.2",
        "group": undefined,
        "id": "8001",
        "name": "FIX42",
        "sort": 1,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.2",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.2",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 146,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "NewOrderSingle

The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
        "group": undefined,
        "id": "35014",
        "name": "NewOrderSingle",
        "sort": 14,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "D",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "D",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 4,
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "ABC_DEFG01",
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20090323-15:40:29",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "CCG",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm originating message if the message was delivered by a third party i.e. the third party firm identifier would be delivered in the SenderCompID field and the firm originating the message in this field.",
      "enumeration": null,
      "name": "OnBehalfOfCompID",
      "section": null,
      "tag": 115,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "XYZ",
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
      "enumeration": null,
      "name": "ClOrdID",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 11,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "NF 0542/03232009",
    },
    Field {
      "category": null,
      "description": "Side of order (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "SideCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Buy

For Securities Financing indicates the receipt of securities or collateral.",
        "group": undefined,
        "id": "54001",
        "name": "Buy",
        "sort": 1,
        "tag": 54,
        "type": "char",
        "updated": "FIX.5.0SP2",
        "updatedEP": "254",
        "value": "1",
      },
      "name": "Side",
      "section": null,
      "tag": 54,
      "type": null,
      "value": "1",
    },
    Field {
      "category": null,
      "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "OrderQty",
      "section": null,
      "tag": 38,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 100,
    },
    Field {
      "category": null,
      "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
      "enumeration": null,
      "name": "Symbol",
      "section": null,
      "tag": 55,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "CVS",
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "OrdTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Market",
        "group": undefined,
        "id": "40001",
        "name": "Market",
        "sort": 1,
        "tag": 40,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "1",
      },
      "name": "OrdType",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 40,
      "type": null,
      "value": "1",
    },
    Field {
      "category": null,
      "description": "Specifies how long the order remains in effect. Absence of this field is interpreted as DAY. NOTE not applicable to CIV Orders.",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "TimeInForceCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Day (or session)

A buy or sell order that, if not executed expires at the end of the trading day on which it was entered.",
        "group": undefined,
        "id": "59001",
        "name": "Day",
        "sort": 1,
        "tag": 59,
        "type": "char",
        "updated": "FIX.5.0SP2",
        "updatedEP": "253",
        "value": "0",
      },
      "name": "TimeInForce",
      "section": null,
      "tag": 59,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": null,
      "enumeration": null,
      "name": null,
      "section": null,
      "tag": 47,
      "type": null,
      "value": "A",
    },
    Field {
      "category": null,
      "description": "Timestamp when the business transaction represented by the message occurred.",
      "enumeration": null,
      "name": "TransactTime",
      "section": null,
      "tag": 60,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20090323-15:40:29",
    },
    Field {
      "category": null,
      "description": "Instructions for order handling on Broker trading floor",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "HandlInstCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Automated execution order, private, no Broker intervention",
        "group": undefined,
        "id": "21001",
        "name": "AutomatedExecutionNoIntervention",
        "sort": 1,
        "tag": 21,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "1",
      },
      "name": "HandlInst",
      "section": null,
      "tag": 21,
      "type": null,
      "value": "1",
    },
    Field {
      "category": null,
      "description": "Market used to help identify a security.

Valid values:

See "Appendix 6-C"",
      "enumeration": null,
      "name": "SecurityExchange",
      "section": null,
      "tag": 207,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "false",
          "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
          "pattern": ".*",
          "standard": "XML",
        },
        "name": "Exchange",
      },
      "value": "N",
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "139",
    },
  ],
  "description": "NewOrderSingle",
  "fixVersion": "FIX.4.2",
  "messageSequence": 4,
  "messageString": "8=FIX.4.29=14635=D34=449=ABC_DEFG0152=20090323-15:40:2956=CCG115=XYZ11=NF 0542/0323200954=138=10055=CVS40=159=047=A60=20090323-15:40:2921=1207=N10=139",
  "messageType": "D",
  "messageTypeDescription": "The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
  "structure": [
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "ClOrdID",
        "added": "FIX.2.7",
        "baseCategory": "SingleGeneralOrderHandling",
        "baseCategoryAbbrName": "ID",
        "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
        "id": "11",
        "name": "ClOrdID",
        "type": "String",
        "updated": "FIX.Latest",
        "updatedEP": "282",
      },
      "id": "11",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "OrdTyp",
        "added": "FIX.2.7",
        "baseCategory": "SingleGeneralOrderHandling",
        "baseCategoryAbbrName": "Typ",
        "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "id": "40",
        "name": "OrdType",
        "type": "OrdTypeCodeSet",
      },
      "id": "40",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Side",
        "added": "FIX.2.7",
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "id": "54",
        "name": "Side",
        "type": "SideCodeSet",
      },
      "id": "54",
      "presence": "required",
    },
    {
      "added": "FIX.4.2",
      "data": {
        "abbrName": "TxnTm",
        "added": "FIX.2.7",
        "description": "Timestamp when the business transaction represented by the message occurred.",
        "id": "60",
        "name": "TransactTime",
        "type": "UTCTimestamp",
        "updated": "FIX.5.0SP1",
        "updatedEP": "94",
      },
      "id": "60",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "Instrmt",
        "added": "FIX.4.3",
        "category": "Common",
        "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
        "id": "1003",
        "name": "Instrument",
        "type": "component",
      },
      "id": "1003",
      "presence": "required",
    },
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "OrdQty",
        "added": "FIX.4.3",
        "category": "Common",
        "description": "The OrderQtyData component block contains the fields commonly used for indicating the amount or quantity of an order. Note that when this component block is marked as "required" in a message either one of these three fields must be used to identify the amount: OrderQty, CashOrderQty or OrderPercent (in the case of CIV).

",
        "id": "1011",
        "name": "OrderQtyData",
        "type": "component",
      },
      "id": "1011",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "221",
    },
  ],
}
`;

exports[`FIXParser #parse: NewOrderSingle should match snapshot 2`] = `
Message {
  "bodyLengthExpected": 157,
  "bodyLengthValid": true,
  "bodyLengthValue": 157,
  "checksumExpected": "099",
  "checksumValid": false,
  "checksumValue": "050",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX.4.2",
        "group": undefined,
        "id": "8001",
        "name": "FIX42",
        "sort": 1,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.2",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.2",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 157,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "NewOrderSingle

The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
        "group": undefined,
        "id": "35014",
        "name": "NewOrderSingle",
        "sort": 14,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "D",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "D",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 124,
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "ABC_DEFG04",
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20100208-18:51:42",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "CCG",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm originating message if the message was delivered by a third party i.e. the third party firm identifier would be delivered in the SenderCompID field and the firm originating the message in this field.",
      "enumeration": null,
      "name": "OnBehalfOfCompID",
      "section": null,
      "tag": 115,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "XYZ",
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
      "enumeration": null,
      "name": "ClOrdID",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 11,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "NF 0015/02082010",
    },
    Field {
      "category": null,
      "description": "Side of order (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "SideCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Sell

For Securities Financing indicates the delivery of securities or collateral.",
        "group": undefined,
        "id": "54002",
        "name": "Sell",
        "sort": 2,
        "tag": 54,
        "type": "char",
        "updated": "FIX.5.0SP2",
        "updatedEP": "254",
        "value": "2",
      },
      "name": "Side",
      "section": null,
      "tag": 54,
      "type": null,
      "value": "2",
    },
    Field {
      "category": null,
      "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "OrderQty",
      "section": null,
      "tag": 38,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 1000,
    },
    Field {
      "category": null,
      "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
      "enumeration": null,
      "name": "Symbol",
      "section": null,
      "tag": 55,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "RRC",
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "OrdTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Limit",
        "group": undefined,
        "id": "40002",
        "name": "Limit",
        "sort": 2,
        "tag": 40,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "2",
      },
      "name": "OrdType",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 40,
      "type": null,
      "value": "2",
    },
    Field {
      "category": null,
      "description": "Price per unit of quantity (e.g. per share)",
      "enumeration": null,
      "name": "Price",
      "section": null,
      "tag": 44,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "standard": "XML",
        },
        "name": "Price",
      },
      "value": 55.36,
    },
    Field {
      "category": null,
      "description": "Specifies how long the order remains in effect. Absence of this field is interpreted as DAY. NOTE not applicable to CIV Orders.",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "TimeInForceCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Day (or session)

A buy or sell order that, if not executed expires at the end of the trading day on which it was entered.",
        "group": undefined,
        "id": "59001",
        "name": "Day",
        "sort": 1,
        "tag": 59,
        "type": "char",
        "updated": "FIX.5.0SP2",
        "updatedEP": "253",
        "value": "0",
      },
      "name": "TimeInForce",
      "section": null,
      "tag": 59,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Account mnemonic as agreed between buy and sell sides, e.g. broker and institution or investor/intermediary and fund manager.",
      "enumeration": null,
      "name": "Account",
      "section": null,
      "tag": 1,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "ABC123ZYX",
    },
    Field {
      "category": null,
      "description": "Instructions for order handling on Broker trading floor",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "HandlInstCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Automated execution order, private, no Broker intervention",
        "group": undefined,
        "id": "21001",
        "name": "AutomatedExecutionNoIntervention",
        "sort": 1,
        "tag": 21,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "1",
      },
      "name": "HandlInst",
      "section": null,
      "tag": 21,
      "type": null,
      "value": "1",
    },
    Field {
      "category": null,
      "description": "Market used to help identify a security.

Valid values:

See "Appendix 6-C"",
      "enumeration": null,
      "name": "SecurityExchange",
      "section": null,
      "tag": 207,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "false",
          "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
          "pattern": ".*",
          "standard": "XML",
        },
        "name": "Exchange",
      },
      "value": "N",
    },
    Field {
      "category": null,
      "description": null,
      "enumeration": null,
      "name": null,
      "section": null,
      "tag": 47,
      "type": null,
      "value": "A",
    },
    Field {
      "category": null,
      "description": null,
      "enumeration": null,
      "name": null,
      "section": null,
      "tag": 9487,
      "type": null,
      "value": "CO",
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "050",
    },
  ],
  "description": "NewOrderSingle",
  "fixVersion": "FIX.4.2",
  "messageSequence": 124,
  "messageString": "8=FIX.4.29=15735=D34=12449=ABC_DEFG0452=20100208-18:51:4256=CCG115=XYZ11=NF 0015/0208201054=238=100055=RRC40=244=55.3659=01=ABC123ZYX21=1207=N47=A9487=CO10=050",
  "messageType": "D",
  "messageTypeDescription": "The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
  "structure": [
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "ClOrdID",
        "added": "FIX.2.7",
        "baseCategory": "SingleGeneralOrderHandling",
        "baseCategoryAbbrName": "ID",
        "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
        "id": "11",
        "name": "ClOrdID",
        "type": "String",
        "updated": "FIX.Latest",
        "updatedEP": "282",
      },
      "id": "11",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "OrdTyp",
        "added": "FIX.2.7",
        "baseCategory": "SingleGeneralOrderHandling",
        "baseCategoryAbbrName": "Typ",
        "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "id": "40",
        "name": "OrdType",
        "type": "OrdTypeCodeSet",
      },
      "id": "40",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Side",
        "added": "FIX.2.7",
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "id": "54",
        "name": "Side",
        "type": "SideCodeSet",
      },
      "id": "54",
      "presence": "required",
    },
    {
      "added": "FIX.4.2",
      "data": {
        "abbrName": "TxnTm",
        "added": "FIX.2.7",
        "description": "Timestamp when the business transaction represented by the message occurred.",
        "id": "60",
        "name": "TransactTime",
        "type": "UTCTimestamp",
        "updated": "FIX.5.0SP1",
        "updatedEP": "94",
      },
      "id": "60",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "Instrmt",
        "added": "FIX.4.3",
        "category": "Common",
        "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
        "id": "1003",
        "name": "Instrument",
        "type": "component",
      },
      "id": "1003",
      "presence": "required",
    },
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "OrdQty",
        "added": "FIX.4.3",
        "category": "Common",
        "description": "The OrderQtyData component block contains the fields commonly used for indicating the amount or quantity of an order. Note that when this component block is marked as "required" in a message either one of these three fields must be used to identify the amount: OrderQty, CashOrderQty or OrderPercent (in the case of CIV).

",
        "id": "1011",
        "name": "OrderQtyData",
        "type": "component",
      },
      "id": "1011",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "221",
    },
  ],
}
`;

exports[`FIXParser #parse: NewOrderSingle should match snapshot 3`] = `
Message {
  "bodyLengthExpected": 154,
  "bodyLengthValid": true,
  "bodyLengthValue": 154,
  "checksumExpected": "035",
  "checksumValid": true,
  "checksumValue": "035",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX.4.2",
        "group": undefined,
        "id": "8001",
        "name": "FIX42",
        "sort": 1,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.2",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.2",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 154,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "NewOrderSingle

The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
        "group": undefined,
        "id": "35014",
        "name": "NewOrderSingle",
        "sort": 14,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "D",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "D",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 11,
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "ABC_DEFG04",
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20091216-17:23:52",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "CCG",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify specific individual or unit intended to receive message. "ADMIN" reserved for administrative messages not intended for a specific user.",
      "enumeration": null,
      "name": "TargetSubID",
      "section": null,
      "tag": 57,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "ARCA",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm originating message if the message was delivered by a third party i.e. the third party firm identifier would be delivered in the SenderCompID field and the firm originating the message in this field.",
      "enumeration": null,
      "name": "OnBehalfOfCompID",
      "section": null,
      "tag": 115,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "XYZ",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify the firm targeted to receive the message if the message is delivered by a third party i.e. the third party firm identifier would be delivered in the TargetCompID (56) field and the ultimate receiver firm ID in this field.",
      "enumeration": null,
      "name": "DeliverToCompID",
      "section": null,
      "tag": 128,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "MP",
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
      "enumeration": null,
      "name": "ClOrdID",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 11,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "NF 0921/12162009",
    },
    Field {
      "category": null,
      "description": "Side of order (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "SideCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Sell

For Securities Financing indicates the delivery of securities or collateral.",
        "group": undefined,
        "id": "54002",
        "name": "Sell",
        "sort": 2,
        "tag": 54,
        "type": "char",
        "updated": "FIX.5.0SP2",
        "updatedEP": "254",
        "value": "2",
      },
      "name": "Side",
      "section": null,
      "tag": 54,
      "type": null,
      "value": "2",
    },
    Field {
      "category": null,
      "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "OrderQty",
      "section": null,
      "tag": 38,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 1000,
    },
    Field {
      "category": null,
      "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
      "enumeration": null,
      "name": "Symbol",
      "section": null,
      "tag": 55,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "MMM",
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "OrdTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Market",
        "group": undefined,
        "id": "40001",
        "name": "Market",
        "sort": 1,
        "tag": 40,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "1",
      },
      "name": "OrdType",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 40,
      "type": null,
      "value": "1",
    },
    Field {
      "category": null,
      "description": "Specifies how long the order remains in effect. Absence of this field is interpreted as DAY. NOTE not applicable to CIV Orders.",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "TimeInForceCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Day (or session)

A buy or sell order that, if not executed expires at the end of the trading day on which it was entered.",
        "group": undefined,
        "id": "59001",
        "name": "Day",
        "sort": 1,
        "tag": 59,
        "type": "char",
        "updated": "FIX.5.0SP2",
        "updatedEP": "253",
        "value": "0",
      },
      "name": "TimeInForce",
      "section": null,
      "tag": 59,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Account mnemonic as agreed between buy and sell sides, e.g. broker and institution or investor/intermediary and fund manager.",
      "enumeration": null,
      "name": "Account",
      "section": null,
      "tag": 1,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "ABC123ZYX",
    },
    Field {
      "category": null,
      "description": "Instructions for order handling on Broker trading floor",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "HandlInstCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Automated execution order, private, no Broker intervention",
        "group": undefined,
        "id": "21001",
        "name": "AutomatedExecutionNoIntervention",
        "sort": 1,
        "tag": 21,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "1",
      },
      "name": "HandlInst",
      "section": null,
      "tag": 21,
      "type": null,
      "value": "1",
    },
    Field {
      "category": null,
      "description": "Market used to help identify a security.

Valid values:

See "Appendix 6-C"",
      "enumeration": null,
      "name": "SecurityExchange",
      "section": null,
      "tag": 207,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "false",
          "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
          "pattern": ".*",
          "standard": "XML",
        },
        "name": "Exchange",
      },
      "value": "N",
    },
    Field {
      "category": null,
      "description": null,
      "enumeration": null,
      "name": null,
      "section": null,
      "tag": 47,
      "type": null,
      "value": "A",
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "035",
    },
  ],
  "description": "NewOrderSingle",
  "fixVersion": "FIX.4.2",
  "messageSequence": 11,
  "messageString": "8=FIX.4.29=15435=D34=1149=ABC_DEFG0452=20091216-17:23:5256=CCG57=ARCA115=XYZ128=MP11=NF 0921/1216200954=238=100055=MMM40=159=01=ABC123ZYX21=1207=N47=A10=035",
  "messageType": "D",
  "messageTypeDescription": "The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
  "structure": [
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "ClOrdID",
        "added": "FIX.2.7",
        "baseCategory": "SingleGeneralOrderHandling",
        "baseCategoryAbbrName": "ID",
        "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
        "id": "11",
        "name": "ClOrdID",
        "type": "String",
        "updated": "FIX.Latest",
        "updatedEP": "282",
      },
      "id": "11",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "OrdTyp",
        "added": "FIX.2.7",
        "baseCategory": "SingleGeneralOrderHandling",
        "baseCategoryAbbrName": "Typ",
        "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "id": "40",
        "name": "OrdType",
        "type": "OrdTypeCodeSet",
      },
      "id": "40",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Side",
        "added": "FIX.2.7",
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "id": "54",
        "name": "Side",
        "type": "SideCodeSet",
      },
      "id": "54",
      "presence": "required",
    },
    {
      "added": "FIX.4.2",
      "data": {
        "abbrName": "TxnTm",
        "added": "FIX.2.7",
        "description": "Timestamp when the business transaction represented by the message occurred.",
        "id": "60",
        "name": "TransactTime",
        "type": "UTCTimestamp",
        "updated": "FIX.5.0SP1",
        "updatedEP": "94",
      },
      "id": "60",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "Instrmt",
        "added": "FIX.4.3",
        "category": "Common",
        "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
        "id": "1003",
        "name": "Instrument",
        "type": "component",
      },
      "id": "1003",
      "presence": "required",
    },
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "OrdQty",
        "added": "FIX.4.3",
        "category": "Common",
        "description": "The OrderQtyData component block contains the fields commonly used for indicating the amount or quantity of an order. Note that when this component block is marked as "required" in a message either one of these three fields must be used to identify the amount: OrderQty, CashOrderQty or OrderPercent (in the case of CIV).

",
        "id": "1011",
        "name": "OrderQtyData",
        "type": "component",
      },
      "id": "1011",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "221",
    },
  ],
}
`;

exports[`FIXParser #parse: NewOrderSingle should match snapshot 4`] = `
Message {
  "bodyLengthExpected": 148,
  "bodyLengthValid": true,
  "bodyLengthValue": 148,
  "checksumExpected": "149",
  "checksumValid": false,
  "checksumValue": "100",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX.4.2",
        "group": undefined,
        "id": "8001",
        "name": "FIX42",
        "sort": 1,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.2",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.2",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 148,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "NewOrderSingle

The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
        "group": undefined,
        "id": "35014",
        "name": "NewOrderSingle",
        "sort": 14,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "D",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "D",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 215,
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "ABC_DEFG04",
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20100208-19:36:45",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "CCG",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm originating message if the message was delivered by a third party i.e. the third party firm identifier would be delivered in the SenderCompID field and the firm originating the message in this field.",
      "enumeration": null,
      "name": "OnBehalfOfCompID",
      "section": null,
      "tag": 115,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "XYZ",
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
      "enumeration": null,
      "name": "ClOrdID",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 11,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "NF 0016/02082010",
    },
    Field {
      "category": null,
      "description": "Side of order (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "SideCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Buy

For Securities Financing indicates the receipt of securities or collateral.",
        "group": undefined,
        "id": "54001",
        "name": "Buy",
        "sort": 1,
        "tag": 54,
        "type": "char",
        "updated": "FIX.5.0SP2",
        "updatedEP": "254",
        "value": "1",
      },
      "name": "Side",
      "section": null,
      "tag": 54,
      "type": null,
      "value": "1",
    },
    Field {
      "category": null,
      "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "OrderQty",
      "section": null,
      "tag": 38,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 1000,
    },
    Field {
      "category": null,
      "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
      "enumeration": null,
      "name": "Symbol",
      "section": null,
      "tag": 55,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "VOD",
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "OrdTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Limit",
        "group": undefined,
        "id": "40002",
        "name": "Limit",
        "sort": 2,
        "tag": 40,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "2",
      },
      "name": "OrdType",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 40,
      "type": null,
      "value": "2",
    },
    Field {
      "category": null,
      "description": "Price per unit of quantity (e.g. per share)",
      "enumeration": null,
      "name": "Price",
      "section": null,
      "tag": 44,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "standard": "XML",
        },
        "name": "Price",
      },
      "value": 0.995,
    },
    Field {
      "category": null,
      "description": "Specifies how long the order remains in effect. Absence of this field is interpreted as DAY. NOTE not applicable to CIV Orders.",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "TimeInForceCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Day (or session)

A buy or sell order that, if not executed expires at the end of the trading day on which it was entered.",
        "group": undefined,
        "id": "59001",
        "name": "Day",
        "sort": 1,
        "tag": 59,
        "type": "char",
        "updated": "FIX.5.0SP2",
        "updatedEP": "253",
        "value": "0",
      },
      "name": "TimeInForce",
      "section": null,
      "tag": 59,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Account mnemonic as agreed between buy and sell sides, e.g. broker and institution or investor/intermediary and fund manager.",
      "enumeration": null,
      "name": "Account",
      "section": null,
      "tag": 1,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "ABC123ZYX",
    },
    Field {
      "category": null,
      "description": "Instructions for order handling on Broker trading floor",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "HandlInstCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Automated execution order, private, no Broker intervention",
        "group": undefined,
        "id": "21001",
        "name": "AutomatedExecutionNoIntervention",
        "sort": 1,
        "tag": 21,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "1",
      },
      "name": "HandlInst",
      "section": null,
      "tag": 21,
      "type": null,
      "value": "1",
    },
    Field {
      "category": null,
      "description": "Market used to help identify a security.

Valid values:

See "Appendix 6-C"",
      "enumeration": null,
      "name": "SecurityExchange",
      "section": null,
      "tag": 207,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "false",
          "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
          "pattern": ".*",
          "standard": "XML",
        },
        "name": "Exchange",
      },
      "value": "N",
    },
    Field {
      "category": null,
      "description": null,
      "enumeration": null,
      "name": null,
      "section": null,
      "tag": 47,
      "type": null,
      "value": "A",
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "100",
    },
  ],
  "description": "NewOrderSingle",
  "fixVersion": "FIX.4.2",
  "messageSequence": 215,
  "messageString": "8=FIX.4.29=14835=D34=21549=ABC_DEFG0452=20100208-19:36:4556=CCG115=XYZ11=NF 0016/0208201054=138=100055=VOD40=244=.99559=01=ABC123ZYX21=1207=N47=A10=100",
  "messageType": "D",
  "messageTypeDescription": "The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
  "structure": [
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "ClOrdID",
        "added": "FIX.2.7",
        "baseCategory": "SingleGeneralOrderHandling",
        "baseCategoryAbbrName": "ID",
        "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
        "id": "11",
        "name": "ClOrdID",
        "type": "String",
        "updated": "FIX.Latest",
        "updatedEP": "282",
      },
      "id": "11",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "OrdTyp",
        "added": "FIX.2.7",
        "baseCategory": "SingleGeneralOrderHandling",
        "baseCategoryAbbrName": "Typ",
        "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "id": "40",
        "name": "OrdType",
        "type": "OrdTypeCodeSet",
      },
      "id": "40",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Side",
        "added": "FIX.2.7",
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "id": "54",
        "name": "Side",
        "type": "SideCodeSet",
      },
      "id": "54",
      "presence": "required",
    },
    {
      "added": "FIX.4.2",
      "data": {
        "abbrName": "TxnTm",
        "added": "FIX.2.7",
        "description": "Timestamp when the business transaction represented by the message occurred.",
        "id": "60",
        "name": "TransactTime",
        "type": "UTCTimestamp",
        "updated": "FIX.5.0SP1",
        "updatedEP": "94",
      },
      "id": "60",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "Instrmt",
        "added": "FIX.4.3",
        "category": "Common",
        "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
        "id": "1003",
        "name": "Instrument",
        "type": "component",
      },
      "id": "1003",
      "presence": "required",
    },
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "OrdQty",
        "added": "FIX.4.3",
        "category": "Common",
        "description": "The OrderQtyData component block contains the fields commonly used for indicating the amount or quantity of an order. Note that when this component block is marked as "required" in a message either one of these three fields must be used to identify the amount: OrderQty, CashOrderQty or OrderPercent (in the case of CIV).

",
        "id": "1011",
        "name": "OrderQtyData",
        "type": "component",
      },
      "id": "1011",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "221",
    },
  ],
}
`;

exports[`FIXParser #parse: NewOrderSingle should match snapshot 5`] = `
Message {
  "bodyLengthExpected": 128,
  "bodyLengthValid": true,
  "bodyLengthValue": 128,
  "checksumExpected": "155",
  "checksumValid": true,
  "checksumValue": "155",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX.4.2",
        "group": undefined,
        "id": "8001",
        "name": "FIX42",
        "sort": 1,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.2",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.2",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 128,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "NewOrderSingle

The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
        "group": undefined,
        "id": "35014",
        "name": "NewOrderSingle",
        "sort": 14,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "D",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "D",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 13,
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "SENDER",
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20140228-05:42:52.258",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "TARGET",
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
      "enumeration": null,
      "name": "ClOrdID",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 11,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "1393566172244",
    },
    Field {
      "category": null,
      "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "OrderQty",
      "section": null,
      "tag": 38,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 100,
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "OrdTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Market",
        "group": undefined,
        "id": "40001",
        "name": "Market",
        "sort": 1,
        "tag": 40,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "1",
      },
      "name": "OrdType",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 40,
      "type": null,
      "value": "1",
    },
    Field {
      "category": null,
      "description": "Side of order (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "SideCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Buy

For Securities Financing indicates the receipt of securities or collateral.",
        "group": undefined,
        "id": "54001",
        "name": "Buy",
        "sort": 1,
        "tag": 54,
        "type": "char",
        "updated": "FIX.5.0SP2",
        "updatedEP": "254",
        "value": "1",
      },
      "name": "Side",
      "section": null,
      "tag": 54,
      "type": null,
      "value": "1",
    },
    Field {
      "category": null,
      "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
      "enumeration": null,
      "name": "Symbol",
      "section": null,
      "tag": 55,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "TEST",
    },
    Field {
      "category": null,
      "description": "Specifies how long the order remains in effect. Absence of this field is interpreted as DAY. NOTE not applicable to CIV Orders.",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "TimeInForceCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Day (or session)

A buy or sell order that, if not executed expires at the end of the trading day on which it was entered.",
        "group": undefined,
        "id": "59001",
        "name": "Day",
        "sort": 1,
        "tag": 59,
        "type": "char",
        "updated": "FIX.5.0SP2",
        "updatedEP": "253",
        "value": "0",
      },
      "name": "TimeInForce",
      "section": null,
      "tag": 59,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Timestamp when the business transaction represented by the message occurred.",
      "enumeration": null,
      "name": "TransactTime",
      "section": null,
      "tag": 60,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20140228-05:42:52.256",
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "155",
    },
  ],
  "description": "NewOrderSingle",
  "fixVersion": "FIX.4.2",
  "messageSequence": 13,
  "messageString": "8=FIX.4.29=12835=D34=1349=SENDER52=20140228-05:42:52.25856=TARGET11=139356617224438=10040=154=155=TEST59=060=20140228-05:42:52.25610=155",
  "messageType": "D",
  "messageTypeDescription": "The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
  "structure": [
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "ClOrdID",
        "added": "FIX.2.7",
        "baseCategory": "SingleGeneralOrderHandling",
        "baseCategoryAbbrName": "ID",
        "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
        "id": "11",
        "name": "ClOrdID",
        "type": "String",
        "updated": "FIX.Latest",
        "updatedEP": "282",
      },
      "id": "11",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "OrdTyp",
        "added": "FIX.2.7",
        "baseCategory": "SingleGeneralOrderHandling",
        "baseCategoryAbbrName": "Typ",
        "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "id": "40",
        "name": "OrdType",
        "type": "OrdTypeCodeSet",
      },
      "id": "40",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Side",
        "added": "FIX.2.7",
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "id": "54",
        "name": "Side",
        "type": "SideCodeSet",
      },
      "id": "54",
      "presence": "required",
    },
    {
      "added": "FIX.4.2",
      "data": {
        "abbrName": "TxnTm",
        "added": "FIX.2.7",
        "description": "Timestamp when the business transaction represented by the message occurred.",
        "id": "60",
        "name": "TransactTime",
        "type": "UTCTimestamp",
        "updated": "FIX.5.0SP1",
        "updatedEP": "94",
      },
      "id": "60",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "Instrmt",
        "added": "FIX.4.3",
        "category": "Common",
        "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
        "id": "1003",
        "name": "Instrument",
        "type": "component",
      },
      "id": "1003",
      "presence": "required",
    },
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "OrdQty",
        "added": "FIX.4.3",
        "category": "Common",
        "description": "The OrderQtyData component block contains the fields commonly used for indicating the amount or quantity of an order. Note that when this component block is marked as "required" in a message either one of these three fields must be used to identify the amount: OrderQty, CashOrderQty or OrderPercent (in the case of CIV).

",
        "id": "1011",
        "name": "OrderQtyData",
        "type": "component",
      },
      "id": "1011",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "221",
    },
  ],
}
`;

exports[`FIXParser #parse: NewOrderSingle should match snapshot 6`] = `
Message {
  "bodyLengthExpected": 145,
  "bodyLengthValid": true,
  "bodyLengthValue": 145,
  "checksumExpected": "216",
  "checksumValid": true,
  "checksumValue": "216",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX.4.2",
        "group": undefined,
        "id": "8001",
        "name": "FIX42",
        "sort": 1,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.2",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.2",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 145,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "NewOrderSingle

The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
        "group": undefined,
        "id": "35014",
        "name": "NewOrderSingle",
        "sort": 14,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "D",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "D",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 14,
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "SENDER",
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20140228-05:43:10.531",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "TARGET",
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
      "enumeration": null,
      "name": "ClOrdID",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 11,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "1393566190533",
    },
    Field {
      "category": null,
      "description": "Instructions for order handling on Broker trading floor",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "HandlInstCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Automated execution order, private, no Broker intervention",
        "group": undefined,
        "id": "21001",
        "name": "AutomatedExecutionNoIntervention",
        "sort": 1,
        "tag": 21,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "1",
      },
      "name": "HandlInst",
      "section": null,
      "tag": 21,
      "type": null,
      "value": "1",
    },
    Field {
      "category": null,
      "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "OrderQty",
      "section": null,
      "tag": 38,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 200,
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "OrdTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Limit",
        "group": undefined,
        "id": "40002",
        "name": "Limit",
        "sort": 2,
        "tag": 40,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "2",
      },
      "name": "OrdType",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 40,
      "type": null,
      "value": "2",
    },
    Field {
      "category": null,
      "description": "Price per unit of quantity (e.g. per share)",
      "enumeration": null,
      "name": "Price",
      "section": null,
      "tag": 44,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "standard": "XML",
        },
        "name": "Price",
      },
      "value": 45.67,
    },
    Field {
      "category": null,
      "description": "Side of order (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "SideCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Buy

For Securities Financing indicates the receipt of securities or collateral.",
        "group": undefined,
        "id": "54001",
        "name": "Buy",
        "sort": 1,
        "tag": 54,
        "type": "char",
        "updated": "FIX.5.0SP2",
        "updatedEP": "254",
        "value": "1",
      },
      "name": "Side",
      "section": null,
      "tag": 54,
      "type": null,
      "value": "1",
    },
    Field {
      "category": null,
      "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
      "enumeration": null,
      "name": "Symbol",
      "section": null,
      "tag": 55,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "FIXSPEC",
    },
    Field {
      "category": null,
      "description": "Specifies how long the order remains in effect. Absence of this field is interpreted as DAY. NOTE not applicable to CIV Orders.",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "TimeInForceCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Day (or session)

A buy or sell order that, if not executed expires at the end of the trading day on which it was entered.",
        "group": undefined,
        "id": "59001",
        "name": "Day",
        "sort": 1,
        "tag": 59,
        "type": "char",
        "updated": "FIX.5.0SP2",
        "updatedEP": "253",
        "value": "0",
      },
      "name": "TimeInForce",
      "section": null,
      "tag": 59,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Timestamp when the business transaction represented by the message occurred.",
      "enumeration": null,
      "name": "TransactTime",
      "section": null,
      "tag": 60,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20140228-05:43:10.531",
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "216",
    },
  ],
  "description": "NewOrderSingle",
  "fixVersion": "FIX.4.2",
  "messageSequence": 14,
  "messageString": "8=FIX.4.29=14535=D34=1449=SENDER52=20140228-05:43:10.53156=TARGET11=139356619053321=138=20040=244=45.6754=155=FIXSPEC59=060=20140228-05:43:10.53110=216",
  "messageType": "D",
  "messageTypeDescription": "The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
  "structure": [
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "ClOrdID",
        "added": "FIX.2.7",
        "baseCategory": "SingleGeneralOrderHandling",
        "baseCategoryAbbrName": "ID",
        "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
        "id": "11",
        "name": "ClOrdID",
        "type": "String",
        "updated": "FIX.Latest",
        "updatedEP": "282",
      },
      "id": "11",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "OrdTyp",
        "added": "FIX.2.7",
        "baseCategory": "SingleGeneralOrderHandling",
        "baseCategoryAbbrName": "Typ",
        "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "id": "40",
        "name": "OrdType",
        "type": "OrdTypeCodeSet",
      },
      "id": "40",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Side",
        "added": "FIX.2.7",
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "id": "54",
        "name": "Side",
        "type": "SideCodeSet",
      },
      "id": "54",
      "presence": "required",
    },
    {
      "added": "FIX.4.2",
      "data": {
        "abbrName": "TxnTm",
        "added": "FIX.2.7",
        "description": "Timestamp when the business transaction represented by the message occurred.",
        "id": "60",
        "name": "TransactTime",
        "type": "UTCTimestamp",
        "updated": "FIX.5.0SP1",
        "updatedEP": "94",
      },
      "id": "60",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "Instrmt",
        "added": "FIX.4.3",
        "category": "Common",
        "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
        "id": "1003",
        "name": "Instrument",
        "type": "component",
      },
      "id": "1003",
      "presence": "required",
    },
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "OrdQty",
        "added": "FIX.4.3",
        "category": "Common",
        "description": "The OrderQtyData component block contains the fields commonly used for indicating the amount or quantity of an order. Note that when this component block is marked as "required" in a message either one of these three fields must be used to identify the amount: OrderQty, CashOrderQty or OrderPercent (in the case of CIV).

",
        "id": "1011",
        "name": "OrderQtyData",
        "type": "component",
      },
      "id": "1011",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "221",
    },
  ],
}
`;

exports[`FIXParser #parse: NewOrderSingle should match snapshot 7`] = `
Message {
  "bodyLengthExpected": 141,
  "bodyLengthValid": true,
  "bodyLengthValue": 141,
  "checksumExpected": "219",
  "checksumValid": true,
  "checksumValue": "219",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX.4.2",
        "group": undefined,
        "id": "8001",
        "name": "FIX42",
        "sort": 1,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.2",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.2",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 141,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "NewOrderSingle

The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
        "group": undefined,
        "id": "35014",
        "name": "NewOrderSingle",
        "sort": 14,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "D",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "D",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 20,
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "SENDER",
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20140228-05:45:28.373",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "TARGET",
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
      "enumeration": null,
      "name": "ClOrdID",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 11,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "1393566328381",
    },
    Field {
      "category": null,
      "description": "Instructions for order handling on Broker trading floor",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "HandlInstCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Automated execution order, private, no Broker intervention",
        "group": undefined,
        "id": "21001",
        "name": "AutomatedExecutionNoIntervention",
        "sort": 1,
        "tag": 21,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "1",
      },
      "name": "HandlInst",
      "section": null,
      "tag": 21,
      "type": null,
      "value": "1",
    },
    Field {
      "category": null,
      "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "OrderQty",
      "section": null,
      "tag": 38,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 125,
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "OrdTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Limit",
        "group": undefined,
        "id": "40002",
        "name": "Limit",
        "sort": 2,
        "tag": 40,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "2",
      },
      "name": "OrdType",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 40,
      "type": null,
      "value": "2",
    },
    Field {
      "category": null,
      "description": "Price per unit of quantity (e.g. per share)",
      "enumeration": null,
      "name": "Price",
      "section": null,
      "tag": 44,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "standard": "XML",
        },
        "name": "Price",
      },
      "value": 34.7,
    },
    Field {
      "category": null,
      "description": "Side of order (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "SideCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Sell

For Securities Financing indicates the delivery of securities or collateral.",
        "group": undefined,
        "id": "54002",
        "name": "Sell",
        "sort": 2,
        "tag": 54,
        "type": "char",
        "updated": "FIX.5.0SP2",
        "updatedEP": "254",
        "value": "2",
      },
      "name": "Side",
      "section": null,
      "tag": 54,
      "type": null,
      "value": "2",
    },
    Field {
      "category": null,
      "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
      "enumeration": null,
      "name": "Symbol",
      "section": null,
      "tag": 55,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "EXAM",
    },
    Field {
      "category": null,
      "description": "Specifies how long the order remains in effect. Absence of this field is interpreted as DAY. NOTE not applicable to CIV Orders.",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "TimeInForceCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Day (or session)

A buy or sell order that, if not executed expires at the end of the trading day on which it was entered.",
        "group": undefined,
        "id": "59001",
        "name": "Day",
        "sort": 1,
        "tag": 59,
        "type": "char",
        "updated": "FIX.5.0SP2",
        "updatedEP": "253",
        "value": "0",
      },
      "name": "TimeInForce",
      "section": null,
      "tag": 59,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Timestamp when the business transaction represented by the message occurred.",
      "enumeration": null,
      "name": "TransactTime",
      "section": null,
      "tag": 60,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20140228-05:45:28.373",
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "219",
    },
  ],
  "description": "NewOrderSingle",
  "fixVersion": "FIX.4.2",
  "messageSequence": 20,
  "messageString": "8=FIX.4.29=14135=D34=2049=SENDER52=20140228-05:45:28.37356=TARGET11=139356632838121=138=12540=244=34.754=255=EXAM59=060=20140228-05:45:28.37310=219",
  "messageType": "D",
  "messageTypeDescription": "The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
  "structure": [
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "ClOrdID",
        "added": "FIX.2.7",
        "baseCategory": "SingleGeneralOrderHandling",
        "baseCategoryAbbrName": "ID",
        "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
        "id": "11",
        "name": "ClOrdID",
        "type": "String",
        "updated": "FIX.Latest",
        "updatedEP": "282",
      },
      "id": "11",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "OrdTyp",
        "added": "FIX.2.7",
        "baseCategory": "SingleGeneralOrderHandling",
        "baseCategoryAbbrName": "Typ",
        "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "id": "40",
        "name": "OrdType",
        "type": "OrdTypeCodeSet",
      },
      "id": "40",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Side",
        "added": "FIX.2.7",
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "id": "54",
        "name": "Side",
        "type": "SideCodeSet",
      },
      "id": "54",
      "presence": "required",
    },
    {
      "added": "FIX.4.2",
      "data": {
        "abbrName": "TxnTm",
        "added": "FIX.2.7",
        "description": "Timestamp when the business transaction represented by the message occurred.",
        "id": "60",
        "name": "TransactTime",
        "type": "UTCTimestamp",
        "updated": "FIX.5.0SP1",
        "updatedEP": "94",
      },
      "id": "60",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "Instrmt",
        "added": "FIX.4.3",
        "category": "Common",
        "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
        "id": "1003",
        "name": "Instrument",
        "type": "component",
      },
      "id": "1003",
      "presence": "required",
    },
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "OrdQty",
        "added": "FIX.4.3",
        "category": "Common",
        "description": "The OrderQtyData component block contains the fields commonly used for indicating the amount or quantity of an order. Note that when this component block is marked as "required" in a message either one of these three fields must be used to identify the amount: OrderQty, CashOrderQty or OrderPercent (in the case of CIV).

",
        "id": "1011",
        "name": "OrderQtyData",
        "type": "component",
      },
      "id": "1011",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "221",
    },
  ],
}
`;

exports[`FIXParser #parse: NewOrderSingle should match snapshot 8`] = `
Message {
  "bodyLengthExpected": 152,
  "bodyLengthValid": false,
  "bodyLengthValue": 153,
  "checksumExpected": "013",
  "checksumValid": false,
  "checksumValue": "061",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX.4.2",
        "group": undefined,
        "id": "8001",
        "name": "FIX42",
        "sort": 1,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.2",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.2",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 153,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "NewOrderSingle

The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
        "group": undefined,
        "id": "35014",
        "name": "NewOrderSingle",
        "sort": 14,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "D",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "D",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "BLP",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "SCHB",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 1,
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify specific message originator (desk, trader, etc.)",
      "enumeration": null,
      "name": "SenderSubID",
      "section": null,
      "tag": 50,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "30737",
    },
    Field {
      "category": null,
      "description": "Indicates that message may contain information that has been sent under another sequence number.",
      "enumeration": EnumType {
        "added": "FIX.4.1",
        "addedEP": undefined,
        "codeSet": "PossResendCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Possible Resend",
        "group": undefined,
        "id": "97002",
        "name": "PossibleResend",
        "sort": 2,
        "tag": 97,
        "type": "Boolean",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "Y",
      },
      "name": "PossResend",
      "section": null,
      "tag": 97,
      "type": null,
      "value": "Y",
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20000809-20:20:50",
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
      "enumeration": null,
      "name": "ClOrdID",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 11,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "90001008",
    },
    Field {
      "category": null,
      "description": "Account mnemonic as agreed between buy and sell sides, e.g. broker and institution or investor/intermediary and fund manager.",
      "enumeration": null,
      "name": "Account",
      "section": null,
      "tag": 1,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "10030003",
    },
    Field {
      "category": null,
      "description": "Instructions for order handling on Broker trading floor",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "HandlInstCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Automated execution order, public, Broker intervention OK",
        "group": undefined,
        "id": "21002",
        "name": "AutomatedExecutionInterventionOK",
        "sort": 2,
        "tag": 21,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "2",
      },
      "name": "HandlInst",
      "section": null,
      "tag": 21,
      "type": null,
      "value": "2",
    },
    Field {
      "category": null,
      "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
      "enumeration": null,
      "name": "Symbol",
      "section": null,
      "tag": 55,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "TESTA",
    },
    Field {
      "category": null,
      "description": "Side of order (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "SideCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Buy

For Securities Financing indicates the receipt of securities or collateral.",
        "group": undefined,
        "id": "54001",
        "name": "Buy",
        "sort": 1,
        "tag": 54,
        "type": "char",
        "updated": "FIX.5.0SP2",
        "updatedEP": "254",
        "value": "1",
      },
      "name": "Side",
      "section": null,
      "tag": 54,
      "type": null,
      "value": "1",
    },
    Field {
      "category": null,
      "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "OrderQty",
      "section": null,
      "tag": 38,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 4000,
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "OrdTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Limit",
        "group": undefined,
        "id": "40002",
        "name": "Limit",
        "sort": 2,
        "tag": 40,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "2",
      },
      "name": "OrdType",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 40,
      "type": null,
      "value": "2",
    },
    Field {
      "category": null,
      "description": "Specifies how long the order remains in effect. Absence of this field is interpreted as DAY. NOTE not applicable to CIV Orders.",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "TimeInForceCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Day (or session)

A buy or sell order that, if not executed expires at the end of the trading day on which it was entered.",
        "group": undefined,
        "id": "59001",
        "name": "Day",
        "sort": 1,
        "tag": 59,
        "type": "char",
        "updated": "FIX.5.0SP2",
        "updatedEP": "253",
        "value": "0",
      },
      "name": "TimeInForce",
      "section": null,
      "tag": 59,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Price per unit of quantity (e.g. per share)",
      "enumeration": null,
      "name": "Price",
      "section": null,
      "tag": 44,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "standard": "XML",
        },
        "name": "Price",
      },
      "value": 30,
    },
    Field {
      "category": null,
      "description": null,
      "enumeration": null,
      "name": null,
      "section": null,
      "tag": 47,
      "type": null,
      "value": "I",
    },
    Field {
      "category": null,
      "description": "Timestamp when the business transaction represented by the message occurred.",
      "enumeration": null,
      "name": "TransactTime",
      "section": null,
      "tag": 60,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20000809-18:20:32",
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "061",
    },
  ],
  "description": "NewOrderSingle",
  "fixVersion": "FIX.4.2",
  "messageSequence": 1,
  "messageString": "8=FIX.4.29=15335=D49=BLP56=SCHB34=150=3073797=Y52=20000809-20:20:5011=900010081=1003000321=255=TESTA54=138=400040=259=044=3047=I60=20000809-18:20:3210=061",
  "messageType": "D",
  "messageTypeDescription": "The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
  "structure": [
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "ClOrdID",
        "added": "FIX.2.7",
        "baseCategory": "SingleGeneralOrderHandling",
        "baseCategoryAbbrName": "ID",
        "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
        "id": "11",
        "name": "ClOrdID",
        "type": "String",
        "updated": "FIX.Latest",
        "updatedEP": "282",
      },
      "id": "11",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "OrdTyp",
        "added": "FIX.2.7",
        "baseCategory": "SingleGeneralOrderHandling",
        "baseCategoryAbbrName": "Typ",
        "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "id": "40",
        "name": "OrdType",
        "type": "OrdTypeCodeSet",
      },
      "id": "40",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Side",
        "added": "FIX.2.7",
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "id": "54",
        "name": "Side",
        "type": "SideCodeSet",
      },
      "id": "54",
      "presence": "required",
    },
    {
      "added": "FIX.4.2",
      "data": {
        "abbrName": "TxnTm",
        "added": "FIX.2.7",
        "description": "Timestamp when the business transaction represented by the message occurred.",
        "id": "60",
        "name": "TransactTime",
        "type": "UTCTimestamp",
        "updated": "FIX.5.0SP1",
        "updatedEP": "94",
      },
      "id": "60",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "Instrmt",
        "added": "FIX.4.3",
        "category": "Common",
        "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
        "id": "1003",
        "name": "Instrument",
        "type": "component",
      },
      "id": "1003",
      "presence": "required",
    },
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "OrdQty",
        "added": "FIX.4.3",
        "category": "Common",
        "description": "The OrderQtyData component block contains the fields commonly used for indicating the amount or quantity of an order. Note that when this component block is marked as "required" in a message either one of these three fields must be used to identify the amount: OrderQty, CashOrderQty or OrderPercent (in the case of CIV).

",
        "id": "1011",
        "name": "OrderQtyData",
        "type": "component",
      },
      "id": "1011",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "221",
    },
  ],
}
`;

exports[`FIXParser #parse: NewOrderSingle should match snapshot 9`] = `
Message {
  "bodyLengthExpected": 122,
  "bodyLengthValid": true,
  "bodyLengthValue": 122,
  "checksumExpected": "072",
  "checksumValid": true,
  "checksumValue": "072",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX4",
        "group": undefined,
        "id": "8002",
        "name": "FIX44",
        "sort": 2,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.4",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.4",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 122,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "NewOrderSingle

The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
        "group": undefined,
        "id": "35014",
        "name": "NewOrderSingle",
        "sort": 14,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "D",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "D",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 215,
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "CLIENT12",
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20100225-19:41:57.316",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "B",
    },
    Field {
      "category": null,
      "description": "Account mnemonic as agreed between buy and sell sides, e.g. broker and institution or investor/intermediary and fund manager.",
      "enumeration": null,
      "name": "Account",
      "section": null,
      "tag": 1,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "Marcel",
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
      "enumeration": null,
      "name": "ClOrdID",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 11,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "13346",
    },
    Field {
      "category": null,
      "description": "Instructions for order handling on Broker trading floor",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "HandlInstCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Automated execution order, private, no Broker intervention",
        "group": undefined,
        "id": "21001",
        "name": "AutomatedExecutionNoIntervention",
        "sort": 1,
        "tag": 21,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "1",
      },
      "name": "HandlInst",
      "section": null,
      "tag": 21,
      "type": null,
      "value": "1",
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "OrdTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Limit",
        "group": undefined,
        "id": "40002",
        "name": "Limit",
        "sort": 2,
        "tag": 40,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "2",
      },
      "name": "OrdType",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 40,
      "type": null,
      "value": "2",
    },
    Field {
      "category": null,
      "description": "Price per unit of quantity (e.g. per share)",
      "enumeration": null,
      "name": "Price",
      "section": null,
      "tag": 44,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "standard": "XML",
        },
        "name": "Price",
      },
      "value": 5,
    },
    Field {
      "category": null,
      "description": "Side of order (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "SideCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Buy

For Securities Financing indicates the receipt of securities or collateral.",
        "group": undefined,
        "id": "54001",
        "name": "Buy",
        "sort": 1,
        "tag": 54,
        "type": "char",
        "updated": "FIX.5.0SP2",
        "updatedEP": "254",
        "value": "1",
      },
      "name": "Side",
      "section": null,
      "tag": 54,
      "type": null,
      "value": "1",
    },
    Field {
      "category": null,
      "description": "Specifies how long the order remains in effect. Absence of this field is interpreted as DAY. NOTE not applicable to CIV Orders.",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "TimeInForceCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Day (or session)

A buy or sell order that, if not executed expires at the end of the trading day on which it was entered.",
        "group": undefined,
        "id": "59001",
        "name": "Day",
        "sort": 1,
        "tag": 59,
        "type": "char",
        "updated": "FIX.5.0SP2",
        "updatedEP": "253",
        "value": "0",
      },
      "name": "TimeInForce",
      "section": null,
      "tag": 59,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Timestamp when the business transaction represented by the message occurred.",
      "enumeration": null,
      "name": "TransactTime",
      "section": null,
      "tag": 60,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20100225-19:39:52.020",
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "072",
    },
  ],
  "description": "NewOrderSingle",
  "fixVersion": "FIX.4.4",
  "messageSequence": 215,
  "messageString": "8=FIX.4.49=12235=D34=21549=CLIENT1252=20100225-19:41:57.31656=B1=Marcel11=1334621=140=244=554=159=060=20100225-19:39:52.02010=072",
  "messageType": "D",
  "messageTypeDescription": "The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
  "structure": [
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "ClOrdID",
        "added": "FIX.2.7",
        "baseCategory": "SingleGeneralOrderHandling",
        "baseCategoryAbbrName": "ID",
        "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
        "id": "11",
        "name": "ClOrdID",
        "type": "String",
        "updated": "FIX.Latest",
        "updatedEP": "282",
      },
      "id": "11",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "OrdTyp",
        "added": "FIX.2.7",
        "baseCategory": "SingleGeneralOrderHandling",
        "baseCategoryAbbrName": "Typ",
        "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "id": "40",
        "name": "OrdType",
        "type": "OrdTypeCodeSet",
      },
      "id": "40",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Side",
        "added": "FIX.2.7",
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "id": "54",
        "name": "Side",
        "type": "SideCodeSet",
      },
      "id": "54",
      "presence": "required",
    },
    {
      "added": "FIX.4.2",
      "data": {
        "abbrName": "TxnTm",
        "added": "FIX.2.7",
        "description": "Timestamp when the business transaction represented by the message occurred.",
        "id": "60",
        "name": "TransactTime",
        "type": "UTCTimestamp",
        "updated": "FIX.5.0SP1",
        "updatedEP": "94",
      },
      "id": "60",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "Instrmt",
        "added": "FIX.4.3",
        "category": "Common",
        "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
        "id": "1003",
        "name": "Instrument",
        "type": "component",
      },
      "id": "1003",
      "presence": "required",
    },
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "OrdQty",
        "added": "FIX.4.3",
        "category": "Common",
        "description": "The OrderQtyData component block contains the fields commonly used for indicating the amount or quantity of an order. Note that when this component block is marked as "required" in a message either one of these three fields must be used to identify the amount: OrderQty, CashOrderQty or OrderPercent (in the case of CIV).

",
        "id": "1011",
        "name": "OrderQtyData",
        "type": "component",
      },
      "id": "1011",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "221",
    },
  ],
}
`;

exports[`FIXParser #parse: NewOrderSingle should match snapshot 10`] = `
Message {
  "bodyLengthExpected": 122,
  "bodyLengthValid": true,
  "bodyLengthValue": 122,
  "checksumExpected": "072",
  "checksumValid": true,
  "checksumValue": "072",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX4",
        "group": undefined,
        "id": "8002",
        "name": "FIX44",
        "sort": 2,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.4",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.4",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 122,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "NewOrderSingle

The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
        "group": undefined,
        "id": "35014",
        "name": "NewOrderSingle",
        "sort": 14,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "D",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "D",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 215,
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "CLIENT12",
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20100225-19:41:57.316",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "B",
    },
    Field {
      "category": null,
      "description": "Account mnemonic as agreed between buy and sell sides, e.g. broker and institution or investor/intermediary and fund manager.",
      "enumeration": null,
      "name": "Account",
      "section": null,
      "tag": 1,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "Marcel",
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
      "enumeration": null,
      "name": "ClOrdID",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 11,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "13346",
    },
    Field {
      "category": null,
      "description": "Instructions for order handling on Broker trading floor",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "HandlInstCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Automated execution order, private, no Broker intervention",
        "group": undefined,
        "id": "21001",
        "name": "AutomatedExecutionNoIntervention",
        "sort": 1,
        "tag": 21,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "1",
      },
      "name": "HandlInst",
      "section": null,
      "tag": 21,
      "type": null,
      "value": "1",
    },
    Field {
      "category": CategoryType {
        "categoryID": "SingleGeneralOrderHandling",
        "componentType": "Message",
        "fixmlFileName": "order",
        "includeFile": "components",
        "sectionID": "Trade",
      },
      "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "OrdTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Limit",
        "group": undefined,
        "id": "40002",
        "name": "Limit",
        "sort": 2,
        "tag": 40,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "2",
      },
      "name": "OrdType",
      "section": SectionType {
        "description": "Order handling and execution messages",
        "displayOrder": 2,
        "fixmlFileName": "trade",
        "name": "Trade",
        "notReqXML": false,
        "sectionID": "Trade",
        "volume": "4",
      },
      "tag": 40,
      "type": null,
      "value": "2",
    },
    Field {
      "category": null,
      "description": "Price per unit of quantity (e.g. per share)",
      "enumeration": null,
      "name": "Price",
      "section": null,
      "tag": 44,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "standard": "XML",
        },
        "name": "Price",
      },
      "value": 5,
    },
    Field {
      "category": null,
      "description": "Side of order (see Volume : "Glossary" for value definitions)",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "SideCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Buy

For Securities Financing indicates the receipt of securities or collateral.",
        "group": undefined,
        "id": "54001",
        "name": "Buy",
        "sort": 1,
        "tag": 54,
        "type": "char",
        "updated": "FIX.5.0SP2",
        "updatedEP": "254",
        "value": "1",
      },
      "name": "Side",
      "section": null,
      "tag": 54,
      "type": null,
      "value": "1",
    },
    Field {
      "category": null,
      "description": "Specifies how long the order remains in effect. Absence of this field is interpreted as DAY. NOTE not applicable to CIV Orders.",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "TimeInForceCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Day (or session)

A buy or sell order that, if not executed expires at the end of the trading day on which it was entered.",
        "group": undefined,
        "id": "59001",
        "name": "Day",
        "sort": 1,
        "tag": 59,
        "type": "char",
        "updated": "FIX.5.0SP2",
        "updatedEP": "253",
        "value": "0",
      },
      "name": "TimeInForce",
      "section": null,
      "tag": 59,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Timestamp when the business transaction represented by the message occurred.",
      "enumeration": null,
      "name": "TransactTime",
      "section": null,
      "tag": 60,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20100225-19:39:52.020",
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "072",
    },
  ],
  "description": "NewOrderSingle",
  "fixVersion": "FIX.4.4",
  "messageSequence": 215,
  "messageString": "8=FIX.4.49=12235=D34=21549=CLIENT1252=20100225-19:41:57.31656=B1=Marcel11=1334621=140=244=554=159=060=20100225-19:39:52.02010=072",
  "messageType": "D",
  "messageTypeDescription": "The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.

The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.",
  "structure": [
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "ClOrdID",
        "added": "FIX.2.7",
        "baseCategory": "SingleGeneralOrderHandling",
        "baseCategoryAbbrName": "ID",
        "description": "Unique identifier for Order as assigned by the buy-side (institution, broker, intermediary etc.) (identified by SenderCompID(49) or OnBehalfOfCompID(115) as appropriate). Uniqueness must be guaranteed within a single trading day. Firms, particularly those which electronically submit multi-day orders, trade globally or throughout market close periods, should ensure uniqueness across days, for example by embedding a date within the ClOrdID(11) field.",
        "id": "11",
        "name": "ClOrdID",
        "type": "String",
        "updated": "FIX.Latest",
        "updatedEP": "282",
      },
      "id": "11",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "OrdTyp",
        "added": "FIX.2.7",
        "baseCategory": "SingleGeneralOrderHandling",
        "baseCategoryAbbrName": "Typ",
        "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "id": "40",
        "name": "OrdType",
        "type": "OrdTypeCodeSet",
      },
      "id": "40",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Side",
        "added": "FIX.2.7",
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "id": "54",
        "name": "Side",
        "type": "SideCodeSet",
      },
      "id": "54",
      "presence": "required",
    },
    {
      "added": "FIX.4.2",
      "data": {
        "abbrName": "TxnTm",
        "added": "FIX.2.7",
        "description": "Timestamp when the business transaction represented by the message occurred.",
        "id": "60",
        "name": "TransactTime",
        "type": "UTCTimestamp",
        "updated": "FIX.5.0SP1",
        "updatedEP": "94",
      },
      "id": "60",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "Instrmt",
        "added": "FIX.4.3",
        "category": "Common",
        "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
        "id": "1003",
        "name": "Instrument",
        "type": "component",
      },
      "id": "1003",
      "presence": "required",
    },
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "OrdQty",
        "added": "FIX.4.3",
        "category": "Common",
        "description": "The OrderQtyData component block contains the fields commonly used for indicating the amount or quantity of an order. Note that when this component block is marked as "required" in a message either one of these three fields must be used to identify the amount: OrderQty, CashOrderQty or OrderPercent (in the case of CIV).

",
        "id": "1011",
        "name": "OrderQtyData",
        "type": "component",
      },
      "id": "1011",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "221",
    },
  ],
}
`;

exports[`FIXParser #parse: Reject should match snapshot 1`] = `
Message {
  "bodyLengthExpected": 102,
  "bodyLengthValid": true,
  "bodyLengthValue": 102,
  "checksumExpected": "067",
  "checksumValid": true,
  "checksumValue": "067",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX.4.2",
        "group": undefined,
        "id": "8001",
        "name": "FIX42",
        "sort": 1,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.2",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.2",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 102,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Reject

The reject message should be issued when a message is received but cannot be properly processed due to a session-level rule violation. An example of when a reject may be appropriate would be the receipt of a message with invalid basic data which successfully passes de-encryption, CheckSum and BodyLength checks.",
        "group": undefined,
        "id": "35004",
        "name": "Reject",
        "sort": 4,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "3",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "3",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 19,
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "TARGET",
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20140228-05:42:52.279",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "SENDER",
    },
    Field {
      "category": null,
      "description": "Reference message sequence number",
      "enumeration": null,
      "name": "RefSeqNum",
      "section": null,
      "tag": 45,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 13,
    },
    Field {
      "category": null,
      "description": "Free format text string

(Note: this field does not have a specified maximum length)",
      "enumeration": null,
      "name": "Text",
      "section": null,
      "tag": 58,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "Required tag missing, field=21",
    },
    Field {
      "category": null,
      "description": "The MsgType (35) of the FIX message being referenced.",
      "enumeration": null,
      "name": "RefMsgType",
      "section": null,
      "tag": 372,
      "type": null,
      "value": "D",
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "067",
    },
  ],
  "description": "Reject",
  "fixVersion": "FIX.4.2",
  "messageSequence": 19,
  "messageString": "8=FIX.4.29=10235=334=1949=TARGET52=20140228-05:42:52.27956=SENDER45=1358=Required tag missing, field=21372=D10=067",
  "messageType": "3",
  "messageTypeDescription": "The reject message should be issued when a message is received but cannot be properly processed due to a session-level rule violation. An example of when a reject may be appropriate would be the receipt of a message with invalid basic data which successfully passes de-encryption, CheckSum and BodyLength checks.",
  "structure": [
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "RefSeqNum",
        "added": "FIX.2.7",
        "description": "Reference message sequence number",
        "id": "45",
        "name": "RefSeqNum",
        "type": "SeqNum",
      },
      "id": "45",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
  ],
}
`;

exports[`FIXParser #parse: Reject should match snapshot 2`] = `
Message {
  "bodyLengthExpected": 94,
  "bodyLengthValid": true,
  "bodyLengthValue": 94,
  "checksumExpected": "058",
  "checksumValid": true,
  "checksumValue": "058",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX4",
        "group": undefined,
        "id": "8002",
        "name": "FIX44",
        "sort": 2,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.4",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.4",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 94,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Reject

The reject message should be issued when a message is received but cannot be properly processed due to a session-level rule violation. An example of when a reject may be appropriate would be the receipt of a message with invalid basic data which successfully passes de-encryption, CheckSum and BodyLength checks.",
        "group": undefined,
        "id": "35004",
        "name": "Reject",
        "sort": 4,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "3",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "3",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 214,
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "A",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify specific message originator (desk, trader, etc.)",
      "enumeration": null,
      "name": "SenderSubID",
      "section": null,
      "tag": 50,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "U1",
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20100304-09:42:23.130",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "AB",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify the firm targeted to receive the message if the message is delivered by a third party i.e. the third party firm identifier would be delivered in the TargetCompID (56) field and the ultimate receiver firm ID in this field.",
      "enumeration": null,
      "name": "DeliverToCompID",
      "section": null,
      "tag": 128,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "B1",
    },
    Field {
      "category": null,
      "description": "Reference message sequence number",
      "enumeration": null,
      "name": "RefSeqNum",
      "section": null,
      "tag": 45,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 176,
    },
    Field {
      "category": null,
      "description": "Free format text string

(Note: this field does not have a specified maximum length)",
      "enumeration": null,
      "name": "Text",
      "section": null,
      "tag": 58,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "txt",
    },
    Field {
      "category": null,
      "description": "The tag number of the FIX field being referenced.",
      "enumeration": null,
      "name": "RefTagID",
      "section": null,
      "tag": 371,
      "type": {
        "added": "FIX.2.7",
        "description": "Sequence of digits without commas or decimals and optional sign character (ASCII characters "-" and "0" - "9" ). The sign character utilizes one byte (i.e. positive int is "99999" while negative int is "-99999"). Note that int values may contain leading zeros (e.g. "00023" = "23").",
        "mappedDatatype": {
          "base": "xs:integer",
          "builtin": "true",
          "standard": "XML",
        },
        "name": "int",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "value": 15,
    },
    Field {
      "category": null,
      "description": "The MsgType (35) of the FIX message being referenced.",
      "enumeration": null,
      "name": "RefMsgType",
      "section": null,
      "tag": 372,
      "type": null,
      "value": "X",
    },
    Field {
      "category": null,
      "description": "Code to identify reason for a session-level Reject message.",
      "enumeration": EnumType {
        "added": "FIX.4.2",
        "addedEP": undefined,
        "codeSet": "SessionRejectReasonCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Required Tag Missing",
        "group": undefined,
        "id": "373002",
        "name": "RequiredTagMissing",
        "sort": 1,
        "tag": 373,
        "type": "int",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "1",
      },
      "name": "SessionRejectReason",
      "section": null,
      "tag": 373,
      "type": null,
      "value": "1",
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "058",
    },
  ],
  "description": "Reject",
  "fixVersion": "FIX.4.4",
  "messageSequence": 214,
  "messageString": "8=FIX.4.49=9435=334=21449=A50=U152=20100304-09:42:23.13056=AB128=B145=17658=txt371=15372=X373=110=058",
  "messageType": "3",
  "messageTypeDescription": "The reject message should be issued when a message is received but cannot be properly processed due to a session-level rule violation. An example of when a reject may be appropriate would be the receipt of a message with invalid basic data which successfully passes de-encryption, CheckSum and BodyLength checks.",
  "structure": [
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "RefSeqNum",
        "added": "FIX.2.7",
        "description": "Reference message sequence number",
        "id": "45",
        "name": "RefSeqNum",
        "type": "SeqNum",
      },
      "id": "45",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
  ],
}
`;

exports[`FIXParser #parse: ResendRequest should match snapshot 1`] = `
Message {
  "bodyLengthExpected": 80,
  "bodyLengthValid": true,
  "bodyLengthValue": 80,
  "checksumExpected": "085",
  "checksumValid": true,
  "checksumValue": "085",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX.4.2",
        "group": undefined,
        "id": "8001",
        "name": "FIX42",
        "sort": 1,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.2",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.2",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 80,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "ResendRequest

The resend request is sent by the receiving application to initiate the retransmission of messages. This function is utilized if a sequence number gap is detected, if the receiving application lost a message, or as a function of the initialization process.",
        "group": undefined,
        "id": "35003",
        "name": "ResendRequest",
        "sort": 3,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "2",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "2",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 7,
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "J79519N",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify specific message originator (desk, trader, etc.)",
      "enumeration": null,
      "name": "SenderSubID",
      "section": null,
      "tag": 50,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "LZL",
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20060412-00:08:21.304",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "CME",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify specific individual or unit intended to receive message. "ADMIN" reserved for administrative messages not intended for a specific user.",
      "enumeration": null,
      "name": "TargetSubID",
      "section": null,
      "tag": 57,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "G",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify specific message originator's location (i.e. geographic location and/or desk, trader)",
      "enumeration": null,
      "name": "SenderLocationID",
      "section": null,
      "tag": 142,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "3",
    },
    Field {
      "category": null,
      "description": "Message sequence number of first message in range to be resent",
      "enumeration": null,
      "name": "BeginSeqNo",
      "section": null,
      "tag": 7,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 6,
    },
    Field {
      "category": null,
      "description": "Message sequence number of last message in range to be resent. If request is for a single message BeginSeqNo (7) = EndSeqNo. If request is for all messages subsequent to a particular message, EndSeqNo = "0" (representing infinity).",
      "enumeration": null,
      "name": "EndSeqNo",
      "section": null,
      "tag": 16,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 0,
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "085",
    },
  ],
  "description": "ResendRequest",
  "fixVersion": "FIX.4.2",
  "messageSequence": 7,
  "messageString": "8=FIX.4.29=8035=234=749=J79519N50=LZL52=20060412-00:08:21.30456=CME57=G142=37=616=010=085",
  "messageType": "2",
  "messageTypeDescription": "The resend request is sent by the receiving application to initiate the retransmission of messages. This function is utilized if a sequence number gap is detected, if the receiving application lost a message, or as a function of the initialization process.",
  "structure": [
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "BeginSeqNo",
        "added": "FIX.2.7",
        "description": "Message sequence number of first message in range to be resent",
        "id": "7",
        "name": "BeginSeqNo",
        "type": "SeqNum",
      },
      "id": "7",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "EndSeqNo",
        "added": "FIX.2.7",
        "description": "Message sequence number of last message in range to be resent. If request is for a single message BeginSeqNo (7) = EndSeqNo. If request is for all messages subsequent to a particular message, EndSeqNo = "0" (representing infinity).",
        "id": "16",
        "name": "EndSeqNo",
        "type": "SeqNum",
      },
      "id": "16",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
  ],
}
`;

exports[`FIXParser #parse: SequenceReset should match snapshot 1`] = `
Message {
  "bodyLengthExpected": 70,
  "bodyLengthValid": true,
  "bodyLengthValue": 70,
  "checksumExpected": "192",
  "checksumValid": true,
  "checksumValue": "192",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX4",
        "group": undefined,
        "id": "8002",
        "name": "FIX44",
        "sort": 2,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.4",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.4",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 70,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "SequenceReset

The sequence reset message is used by the sending application to reset the incoming sequence number on the opposing side.",
        "group": undefined,
        "id": "35005",
        "name": "SequenceReset",
        "sort": 5,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "4",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "4",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "A",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "XYZ",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 129,
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20100302-19:38:21",
    },
    Field {
      "category": null,
      "description": "Indicates possible retransmission of message with this sequence number",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "PossDupFlagCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Possible duplicate",
        "group": undefined,
        "id": "43002",
        "name": "PossibleDuplicate",
        "sort": 2,
        "tag": 43,
        "type": "Boolean",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "Y",
      },
      "name": "PossDupFlag",
      "section": null,
      "tag": 43,
      "type": null,
      "value": "Y",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify specific individual or unit intended to receive message. "ADMIN" reserved for administrative messages not intended for a specific user.",
      "enumeration": null,
      "name": "TargetSubID",
      "section": null,
      "tag": 57,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "LOL",
    },
    Field {
      "category": null,
      "description": "Indicates that the Sequence Reset message is replacing administrative or application messages which will not be resent.",
      "enumeration": EnumType {
        "added": "FIX.4.0",
        "addedEP": undefined,
        "codeSet": "GapFillFlagCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Gap Fill Message, Msg Seq Num Field Valid",
        "group": undefined,
        "id": "123002",
        "name": "GapFillMessage",
        "sort": 2,
        "tag": 123,
        "type": "Boolean",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "Y",
      },
      "name": "GapFillFlag",
      "section": null,
      "tag": 123,
      "type": null,
      "value": "Y",
    },
    Field {
      "category": null,
      "description": "New sequence number",
      "enumeration": null,
      "name": "NewSeqNo",
      "section": null,
      "tag": 36,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 175,
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "192",
    },
  ],
  "description": "SequenceReset",
  "fixVersion": "FIX.4.4",
  "messageSequence": 129,
  "messageString": "8=FIX.4.49=7035=449=A56=XYZ34=12952=20100302-19:38:2143=Y57=LOL123=Y36=17510=192",
  "messageType": "4",
  "messageTypeDescription": "The sequence reset message is used by the sending application to reset the incoming sequence number on the opposing side.",
  "structure": [
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "NewSeqNo",
        "added": "FIX.2.7",
        "description": "New sequence number",
        "id": "36",
        "name": "NewSeqNo",
        "type": "SeqNum",
      },
      "id": "36",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
  ],
}
`;

exports[`FIXParser #parse: TestRequest should match snapshot 1`] = `
Message {
  "bodyLengthExpected": 65,
  "bodyLengthValid": true,
  "bodyLengthValue": 65,
  "checksumExpected": "173",
  "checksumValid": true,
  "checksumValue": "173",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX.4.2",
        "group": undefined,
        "id": "8001",
        "name": "FIX42",
        "sort": 1,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.2",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.2",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 65,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "TestRequest

The test request message forces a heartbeat from the opposing application. The test request message checks sequence numbers or verifies communication line status. The opposite application responds to the Test Request with a Heartbeat containing the TestReqID.",
        "group": undefined,
        "id": "35002",
        "name": "TestRequest",
        "sort": 2,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "1",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "1",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 30,
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "TARGET",
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20140228-05:48:28.553",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "SENDER",
    },
    Field {
      "category": null,
      "description": "Identifier included in Test Request message to be returned in resulting Heartbeat",
      "enumeration": null,
      "name": "TestReqID",
      "section": null,
      "tag": 112,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "TEST",
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "173",
    },
  ],
  "description": "TestRequest",
  "fixVersion": "FIX.4.2",
  "messageSequence": 30,
  "messageString": "8=FIX.4.29=6535=134=3049=TARGET52=20140228-05:48:28.55356=SENDER112=TEST10=173",
  "messageType": "1",
  "messageTypeDescription": "The test request message forces a heartbeat from the opposing application. The test request message checks sequence numbers or verifies communication line status. The opposite application responds to the Test Request with a Heartbeat containing the TestReqID.",
  "structure": [
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.4.0",
      "data": {
        "abbrName": "TestReqID",
        "added": "FIX.3.0",
        "description": "Identifier included in Test Request message to be returned in resulting Heartbeat",
        "id": "112",
        "name": "TestReqID",
        "type": "String",
      },
      "id": "112",
      "presence": "required",
    },
    {
      "added": "FIX.2.7",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
  ],
}
`;

exports[`FIXParser #parse: TradeCaptureReport should match snapshot 1`] = `
Message {
  "bodyLengthExpected": 178,
  "bodyLengthValid": true,
  "bodyLengthValue": 178,
  "checksumExpected": "206",
  "checksumValid": true,
  "checksumValue": "206",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX.4.2",
        "group": undefined,
        "id": "8001",
        "name": "FIX42",
        "sort": 1,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.2",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.2",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 178,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "TradeCaptureReport

The Trade Capture Report message can be:

- Used to report trades between counterparties.

- Used to report trades to a trade matching system.

- Sent unsolicited between counterparties.

- Sent as a reply to a Trade Capture Report Request.

- Used to report unmatched and matched trades.",
        "group": undefined,
        "id": "35064",
        "name": "TradeCaptureReport",
        "sort": 64,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "AE",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "AE",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "LSEHub",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "BROKERX",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify the firm targeted to receive the message if the message is delivered by a third party i.e. the third party firm identifier would be delivered in the TargetCompID (56) field and the ultimate receiver firm ID in this field.",
      "enumeration": null,
      "name": "DeliverToCompID",
      "section": null,
      "tag": 128,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "LSETR",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 2175,
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20120126-15:15:54",
    },
    Field {
      "category": null,
      "description": "Contractual currency forming the basis of a financing agreement and associated transactions. Usually, but not always, the same as the trade currency.",
      "enumeration": null,
      "name": "AgreementCurrency",
      "section": null,
      "tag": 918,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing a currency type using ISO 4217 Currency code (3 character) values (see Appendix 6-A).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "false",
          "description": "string field representing a currency type using ISO 4217 Currency code (3 character) values (see Appendix 6-A).",
          "pattern": ".{3}",
          "standard": "XML",
        },
        "name": "Currency",
      },
      "value": "GBP",
    },
    Field {
      "category": null,
      "description": "Price of this (last) fill.",
      "enumeration": null,
      "name": "LastPx",
      "section": null,
      "tag": 31,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "standard": "XML",
        },
        "name": "Price",
      },
      "value": 89,
    },
    Field {
      "category": null,
      "description": "Specific date of trade settlement (SettlementDate) in YYYYMMDD format.

If present, this field overrides SettlType (63). This field is required if the value of SettlType (63) is 6 (Future) or 8 (Sellers Option). This field must be omitted if the value of SettlType (63) is 7 (When and If Issued)

(expressed in local time at place of settlement)",
      "enumeration": null,
      "name": "SettlDate",
      "section": null,
      "tag": 64,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing a Date of Local Market (as opposed to UTC) in YYYYMMDD format. This is the "normal" date field used by the FIX Protocol.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31",
        "mappedDatatype": {
          "base": "xs:date",
          "builtin": "false",
          "description": "string field representing a Date of Local Market (as opposed to UTC) in YYYY-MM-DD format. This is the "normal" date field used by the FIX Protocol.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31.",
          "standard": "XML",
        },
        "name": "LocalMktDate",
        "updated": "FIX.5.0SP2",
        "updatedEP": "206",
      },
      "value": "20120126",
    },
    Field {
      "category": null,
      "description": "Type of trade assigned to a trade. SecondaryTrdType(855) and TertiaryTrdType(2896) may be used in addition to TrdType(828) to assign up to three different trade types to a single trade.

Note: several enumerations of this field duplicate the enumerations in TradePriceCondition(1839) field. These may be deprecated from TrdType(828) in the future. TradePriceCondition(1839) is preferred in messages that support it.",
      "enumeration": EnumType {
        "added": "FIX.4.4",
        "addedEP": undefined,
        "codeSet": "TrdTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Block trade",
        "group": undefined,
        "id": "828002",
        "name": "BlockTrade",
        "sort": 1,
        "tag": 828,
        "type": "int",
        "updated": "FIX.5.0SP2",
        "updatedEP": "141",
        "value": "1",
      },
      "name": "TrdType",
      "section": null,
      "tag": 828,
      "type": null,
      "value": "1",
    },
    Field {
      "category": null,
      "description": "Timestamp when the business transaction represented by the message occurred.",
      "enumeration": null,
      "name": "TransactTime",
      "section": null,
      "tag": 60,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20120126-13:32:49",
    },
    Field {
      "category": null,
      "description": "Quantity (e.g. shares) bought/sold on this (last) fill.

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "LastQty",
      "section": null,
      "tag": 32,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 6,
    },
    Field {
      "category": null,
      "description": "Identifies class or source of the SecurityID(48) value.",
      "enumeration": EnumType {
        "added": "FIX.3.0",
        "addedEP": undefined,
        "codeSet": "SecurityIDSourceCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "ISIN",
        "group": undefined,
        "id": "22004",
        "name": "ISINNumber",
        "sort": 4,
        "tag": 22,
        "type": "String",
        "updated": "FIX.5.0SP2",
        "updatedEP": "232",
        "value": "4",
      },
      "name": "SecurityIDSource",
      "section": null,
      "tag": 22,
      "type": null,
      "value": "4",
    },
    Field {
      "category": null,
      "description": "Unique identifier of trade capture report",
      "enumeration": null,
      "name": "TradeReportID",
      "section": null,
      "tag": 571,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "124",
    },
    Field {
      "category": null,
      "description": "Indicates possible retransmission of message with this sequence number",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "PossDupFlagCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Original transmission",
        "group": undefined,
        "id": "43001",
        "name": "OriginalTransmission",
        "sort": 1,
        "tag": 43,
        "type": "Boolean",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "N",
      },
      "name": "PossDupFlag",
      "section": null,
      "tag": 43,
      "type": null,
      "value": "N",
    },
    Field {
      "category": null,
      "description": "Indicates if the transaction was previously reported to the counterparty or market.",
      "enumeration": EnumType {
        "added": "FIX.4.3",
        "addedEP": undefined,
        "codeSet": "PreviouslyReportedCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Not reported to counterparty or market

In the context of RTS 13 Article 16 when a trade is reported to more than one "approved publication arrangement" (APA) the original report can be flagged as "original". This is the ESMA "ORGN" flag.",
        "group": undefined,
        "id": "570001",
        "name": "NotReportedToCounterparty",
        "sort": 1,
        "tag": 570,
        "type": "Boolean",
        "updated": "FIX.5.0SP2",
        "updatedEP": "229",
        "value": "N",
      },
      "name": "PreviouslyReported",
      "section": null,
      "tag": 570,
      "type": null,
      "value": "N",
    },
    Field {
      "category": null,
      "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
      "enumeration": EnumType {
        "added": "FIX.4.1",
        "addedEP": undefined,
        "codeSet": "ExecTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "New",
        "group": undefined,
        "id": "150001",
        "name": "New",
        "sort": 1,
        "tag": 150,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "0",
      },
      "name": "ExecType",
      "section": null,
      "tag": 150,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Security identifier value of SecurityIDSource (22) type (e.g. CUSIP, SEDOL, ISIN, etc). Requires SecurityIDSource.",
      "enumeration": null,
      "name": "SecurityID",
      "section": null,
      "tag": 48,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "GB0007188757",
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "206",
    },
  ],
  "description": "TradeCaptureReport",
  "fixVersion": "FIX.4.2",
  "messageSequence": 2175,
  "messageString": "8=FIX.4.29=17835=AE56=LSEHub49=BROKERX128=LSETR34=217552=20120126-15:15:54918=GBP31=89.000000064=20120126828=160=20120126-13:32:4932=622=4571=12443=N570=N150=048=GB000718875710=206",
  "messageType": "AE",
  "messageTypeDescription": "The Trade Capture Report message can be:

- Used to report trades between counterparties.

- Used to report trades to a trade matching system.

- Sent unsolicited between counterparties.

- Sent as a reply to a Trade Capture Report Request.

- Used to report unmatched and matched trades.",
  "structure": [
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.4.4",
      "data": {
        "abbrName": "RptSide",
        "added": "FIX.4.4",
        "category": "TradeCapture",
        "description": "

",
        "fieldRef": [
          {
            "added": "FIX.4.4",
            "description": "Required when NoSides(552) > 0.",
            "id": "54",
            "name": "Side",
            "presence": "required",
            "updated": "FIX.5.0SP2",
            "updatedEP": "141",
          },
        ],
        "id": "2061",
        "name": "TrdCapRptSideGrp",
        "numInGroup": {
          "added": "FIX.4.4",
          "id": "552",
          "updated": "FIX.5.0SP2",
          "updatedEP": "141",
        },
        "type": "group",
      },
      "id": "2061",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "141",
    },
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "167",
    },
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "Instrmt",
        "added": "FIX.4.3",
        "category": "Common",
        "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
        "id": "1003",
        "name": "Instrument",
        "type": "component",
      },
      "id": "1003",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "141",
    },
  ],
}
`;

exports[`FIXParser #parse: TradeCaptureReport should match snapshot 2`] = `
Message {
  "bodyLengthExpected": 130,
  "bodyLengthValid": true,
  "bodyLengthValue": 130,
  "checksumExpected": "074",
  "checksumValid": true,
  "checksumValue": "074",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX.4.2",
        "group": undefined,
        "id": "8001",
        "name": "FIX42",
        "sort": 1,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.2",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.2",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 130,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "TradeCaptureReport

The Trade Capture Report message can be:

- Used to report trades between counterparties.

- Used to report trades to a trade matching system.

- Sent unsolicited between counterparties.

- Sent as a reply to a Trade Capture Report Request.

- Used to report unmatched and matched trades.",
        "group": undefined,
        "id": "35064",
        "name": "TradeCaptureReport",
        "sort": 64,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "AE",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "AE",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "LSEHub",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "LSETR",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm originating message if the message was delivered by a third party i.e. the third party firm identifier would be delivered in the SenderCompID field and the firm originating the message in this field.",
      "enumeration": null,
      "name": "OnBehalfOfCompID",
      "section": null,
      "tag": 115,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "BROKERX",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 2287,
    },
    Field {
      "category": null,
      "description": "Indicates possible retransmission of message with this sequence number",
      "enumeration": EnumType {
        "added": "FIX.2.7",
        "addedEP": undefined,
        "codeSet": "PossDupFlagCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Original transmission",
        "group": undefined,
        "id": "43001",
        "name": "OriginalTransmission",
        "sort": 1,
        "tag": 43,
        "type": "Boolean",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "N",
      },
      "name": "PossDupFlag",
      "section": null,
      "tag": 43,
      "type": null,
      "value": "N",
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20120330-12:14:09",
    },
    Field {
      "category": null,
      "description": null,
      "enumeration": null,
      "name": null,
      "section": null,
      "tag": 370,
      "type": null,
      "value": "20120330-12:14:09.816",
    },
    Field {
      "category": null,
      "description": "Unique identifier of trade capture report",
      "enumeration": null,
      "name": "TradeReportID",
      "section": null,
      "tag": 571,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "00008661533TRLO1-1-1-0",
    },
    Field {
      "category": null,
      "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
      "enumeration": EnumType {
        "added": "FIX.4.3",
        "addedEP": undefined,
        "codeSet": "ExecTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Trade Cancel",
        "group": undefined,
        "id": "150016",
        "name": "TradeCancel",
        "sort": 16,
        "tag": 150,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "H",
      },
      "name": "ExecType",
      "section": null,
      "tag": 150,
      "type": null,
      "value": "H",
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "074",
    },
  ],
  "description": "TradeCaptureReport",
  "fixVersion": "FIX.4.2",
  "messageSequence": 2287,
  "messageString": "8=FIX.4.29=13035=AE49=LSEHub56=LSETR115=BROKERX34=228743=N52=20120330-12:14:09370=20120330-12:14:09.816571=00008661533TRLO1-1-1-0150=H10=074",
  "messageType": "AE",
  "messageTypeDescription": "The Trade Capture Report message can be:

- Used to report trades between counterparties.

- Used to report trades to a trade matching system.

- Sent unsolicited between counterparties.

- Sent as a reply to a Trade Capture Report Request.

- Used to report unmatched and matched trades.",
  "structure": [
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.4.4",
      "data": {
        "abbrName": "RptSide",
        "added": "FIX.4.4",
        "category": "TradeCapture",
        "description": "

",
        "fieldRef": [
          {
            "added": "FIX.4.4",
            "description": "Required when NoSides(552) > 0.",
            "id": "54",
            "name": "Side",
            "presence": "required",
            "updated": "FIX.5.0SP2",
            "updatedEP": "141",
          },
        ],
        "id": "2061",
        "name": "TrdCapRptSideGrp",
        "numInGroup": {
          "added": "FIX.4.4",
          "id": "552",
          "updated": "FIX.5.0SP2",
          "updatedEP": "141",
        },
        "type": "group",
      },
      "id": "2061",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "141",
    },
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "167",
    },
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "Instrmt",
        "added": "FIX.4.3",
        "category": "Common",
        "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
        "id": "1003",
        "name": "Instrument",
        "type": "component",
      },
      "id": "1003",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "141",
    },
  ],
}
`;

exports[`FIXParser #parse: TradeCaptureReport should match snapshot 3`] = `
Message {
  "bodyLengthExpected": 175,
  "bodyLengthValid": true,
  "bodyLengthValue": 175,
  "checksumExpected": "076",
  "checksumValid": true,
  "checksumValue": "076",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX.4.2",
        "group": undefined,
        "id": "8001",
        "name": "FIX42",
        "sort": 1,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.2",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.2",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 175,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "TradeCaptureReport

The Trade Capture Report message can be:

- Used to report trades between counterparties.

- Used to report trades to a trade matching system.

- Sent unsolicited between counterparties.

- Sent as a reply to a Trade Capture Report Request.

- Used to report unmatched and matched trades.",
        "group": undefined,
        "id": "35064",
        "name": "TradeCaptureReport",
        "sort": 64,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "AE",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "AE",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "BROKERX",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "LSEHub",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 17,
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20120202-16:04:44",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify the firm targeted to receive the message if the message is delivered by a third party i.e. the third party firm identifier would be delivered in the TargetCompID (56) field and the ultimate receiver firm ID in this field.",
      "enumeration": null,
      "name": "DeliverToCompID",
      "section": null,
      "tag": 128,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "LSETR",
    },
    Field {
      "category": null,
      "description": "Contractual currency forming the basis of a financing agreement and associated transactions. Usually, but not always, the same as the trade currency.",
      "enumeration": null,
      "name": "AgreementCurrency",
      "section": null,
      "tag": 918,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing a currency type using ISO 4217 Currency code (3 character) values (see Appendix 6-A).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "false",
          "description": "string field representing a currency type using ISO 4217 Currency code (3 character) values (see Appendix 6-A).",
          "pattern": ".{3}",
          "standard": "XML",
        },
        "name": "Currency",
      },
      "value": "EUR",
    },
    Field {
      "category": null,
      "description": "Price of this (last) fill.",
      "enumeration": null,
      "name": "LastPx",
      "section": null,
      "tag": 31,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "standard": "XML",
        },
        "name": "Price",
      },
      "value": 89,
    },
    Field {
      "category": null,
      "description": "Specific date of trade settlement (SettlementDate) in YYYYMMDD format.

If present, this field overrides SettlType (63). This field is required if the value of SettlType (63) is 6 (Future) or 8 (Sellers Option). This field must be omitted if the value of SettlType (63) is 7 (When and If Issued)

(expressed in local time at place of settlement)",
      "enumeration": null,
      "name": "SettlDate",
      "section": null,
      "tag": 64,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing a Date of Local Market (as opposed to UTC) in YYYYMMDD format. This is the "normal" date field used by the FIX Protocol.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31",
        "mappedDatatype": {
          "base": "xs:date",
          "builtin": "false",
          "description": "string field representing a Date of Local Market (as opposed to UTC) in YYYY-MM-DD format. This is the "normal" date field used by the FIX Protocol.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31.",
          "standard": "XML",
        },
        "name": "LocalMktDate",
        "updated": "FIX.5.0SP2",
        "updatedEP": "206",
      },
      "value": "20120202",
    },
    Field {
      "category": null,
      "description": "Type of trade assigned to a trade. SecondaryTrdType(855) and TertiaryTrdType(2896) may be used in addition to TrdType(828) to assign up to three different trade types to a single trade.

Note: several enumerations of this field duplicate the enumerations in TradePriceCondition(1839) field. These may be deprecated from TrdType(828) in the future. TradePriceCondition(1839) is preferred in messages that support it.",
      "enumeration": null,
      "name": "TrdType",
      "section": null,
      "tag": 828,
      "type": null,
      "value": "1007",
    },
    Field {
      "category": null,
      "description": "Timestamp when the business transaction represented by the message occurred.",
      "enumeration": null,
      "name": "TransactTime",
      "section": null,
      "tag": 60,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20120202-16:04:44",
    },
    Field {
      "category": null,
      "description": "Quantity (e.g. shares) bought/sold on this (last) fill.

(Prior to FIX 4.2 this field was of type int)",
      "enumeration": null,
      "name": "LastQty",
      "section": null,
      "tag": 32,
      "type": {
        "added": "FIX.4.2",
        "baseType": "float",
        "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
        "mappedDatatype": {
          "base": "xs:decimal",
          "builtin": "false",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "standard": "XML",
        },
        "name": "Qty",
      },
      "value": 6,
    },
    Field {
      "category": null,
      "description": "Identifies class or source of the SecurityID(48) value.",
      "enumeration": EnumType {
        "added": "FIX.3.0",
        "addedEP": undefined,
        "codeSet": "SecurityIDSourceCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "ISIN",
        "group": undefined,
        "id": "22004",
        "name": "ISINNumber",
        "sort": 4,
        "tag": 22,
        "type": "String",
        "updated": "FIX.5.0SP2",
        "updatedEP": "232",
        "value": "4",
      },
      "name": "SecurityIDSource",
      "section": null,
      "tag": 22,
      "type": null,
      "value": "4",
    },
    Field {
      "category": null,
      "description": "Unique identifier of trade capture report",
      "enumeration": null,
      "name": "TradeReportID",
      "section": null,
      "tag": 571,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "1698",
    },
    Field {
      "category": null,
      "description": "Indicates if the transaction was previously reported to the counterparty or market.",
      "enumeration": EnumType {
        "added": "FIX.4.3",
        "addedEP": undefined,
        "codeSet": "PreviouslyReportedCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Not reported to counterparty or market

In the context of RTS 13 Article 16 when a trade is reported to more than one "approved publication arrangement" (APA) the original report can be flagged as "original". This is the ESMA "ORGN" flag.",
        "group": undefined,
        "id": "570001",
        "name": "NotReportedToCounterparty",
        "sort": 1,
        "tag": 570,
        "type": "Boolean",
        "updated": "FIX.5.0SP2",
        "updatedEP": "229",
        "value": "N",
      },
      "name": "PreviouslyReported",
      "section": null,
      "tag": 570,
      "type": null,
      "value": "N",
    },
    Field {
      "category": null,
      "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
      "enumeration": EnumType {
        "added": "FIX.4.1",
        "addedEP": undefined,
        "codeSet": "ExecTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "New",
        "group": undefined,
        "id": "150001",
        "name": "New",
        "sort": 1,
        "tag": 150,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "0",
      },
      "name": "ExecType",
      "section": null,
      "tag": 150,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Security identifier value of SecurityIDSource (22) type (e.g. CUSIP, SEDOL, ISIN, etc). Requires SecurityIDSource.",
      "enumeration": null,
      "name": "SecurityID",
      "section": null,
      "tag": 48,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "AT0000785555",
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "076",
    },
  ],
  "description": "TradeCaptureReport",
  "fixVersion": "FIX.4.2",
  "messageSequence": 17,
  "messageString": "8=FIX.4.29=17535=AE49=BROKERX56=LSEHub34=1752=20120202-16:04:44128=LSETR918=EUR31=89.000000064=20120202828=100760=20120202-16:04:4432=622=4571=1698570=N150=048=AT000078555510=076",
  "messageType": "AE",
  "messageTypeDescription": "The Trade Capture Report message can be:

- Used to report trades between counterparties.

- Used to report trades to a trade matching system.

- Sent unsolicited between counterparties.

- Sent as a reply to a Trade Capture Report Request.

- Used to report unmatched and matched trades.",
  "structure": [
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.4.4",
      "data": {
        "abbrName": "RptSide",
        "added": "FIX.4.4",
        "category": "TradeCapture",
        "description": "

",
        "fieldRef": [
          {
            "added": "FIX.4.4",
            "description": "Required when NoSides(552) > 0.",
            "id": "54",
            "name": "Side",
            "presence": "required",
            "updated": "FIX.5.0SP2",
            "updatedEP": "141",
          },
        ],
        "id": "2061",
        "name": "TrdCapRptSideGrp",
        "numInGroup": {
          "added": "FIX.4.4",
          "id": "552",
          "updated": "FIX.5.0SP2",
          "updatedEP": "141",
        },
        "type": "group",
      },
      "id": "2061",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "141",
    },
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "167",
    },
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "Instrmt",
        "added": "FIX.4.3",
        "category": "Common",
        "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
        "id": "1003",
        "name": "Instrument",
        "type": "component",
      },
      "id": "1003",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "141",
    },
  ],
}
`;

exports[`FIXParser #parse: TradeCaptureReportAck should match snapshot 1`] = `
Message {
  "bodyLengthExpected": 112,
  "bodyLengthValid": true,
  "bodyLengthValue": 112,
  "checksumExpected": "059",
  "checksumValid": true,
  "checksumValue": "059",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX.4.2",
        "group": undefined,
        "id": "8001",
        "name": "FIX42",
        "sort": 1,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.2",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.2",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 112,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "TradeCaptureReportAck

The Trade Capture Report Ack message can be:

- Used to acknowledge trade capture reports received from a counterparty.

- Used to reject a trade capture report received from a counterparty.",
        "group": undefined,
        "id": "35077",
        "name": "TradeCaptureReportAck",
        "sort": 77,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "AR",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "AR",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "LSEHub",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "BROKERX",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm originating message if the message was delivered by a third party i.e. the third party firm identifier would be delivered in the SenderCompID field and the firm originating the message in this field.",
      "enumeration": null,
      "name": "OnBehalfOfCompID",
      "section": null,
      "tag": 115,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "LSETR",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 2006,
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20120126-15:15:54",
    },
    Field {
      "category": null,
      "description": null,
      "enumeration": null,
      "name": null,
      "section": null,
      "tag": 370,
      "type": null,
      "value": "20120126-15:15:54.822",
    },
    Field {
      "category": null,
      "description": "Unique identifier of trade capture report",
      "enumeration": null,
      "name": "TradeReportID",
      "section": null,
      "tag": 571,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "124",
    },
    Field {
      "category": null,
      "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
      "enumeration": EnumType {
        "added": "FIX.4.1",
        "addedEP": undefined,
        "codeSet": "ExecTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "New",
        "group": undefined,
        "id": "150001",
        "name": "New",
        "sort": 1,
        "tag": 150,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "0",
      },
      "name": "ExecType",
      "section": null,
      "tag": 150,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Trade Report Status",
      "enumeration": EnumType {
        "added": "FIX.4.4",
        "addedEP": undefined,
        "codeSet": "TrdRptStatusCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Accepted",
        "group": undefined,
        "id": "939001",
        "name": "Accepted",
        "sort": 1,
        "tag": 939,
        "type": "int",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "0",
      },
      "name": "TrdRptStatus",
      "section": null,
      "tag": 939,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "059",
    },
  ],
  "description": "TradeCaptureReportAck",
  "fixVersion": "FIX.4.2",
  "messageSequence": 2006,
  "messageString": "8=FIX.4.29=11235=AR49=LSEHub56=BROKERX115=LSETR34=200652=20120126-15:15:54370=20120126-15:15:54.822571=124150=0939=010=059",
  "messageType": "AR",
  "messageTypeDescription": "The Trade Capture Report Ack message can be:

- Used to acknowledge trade capture reports received from a counterparty.

- Used to reject a trade capture report received from a counterparty.",
  "structure": [
    {
      "added": "FIX.4.4",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.4.4",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
    {
      "added": "FIX.4.4",
      "data": {
        "abbrName": "Instrmt",
        "added": "FIX.4.3",
        "category": "Common",
        "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
        "id": "1003",
        "name": "Instrument",
        "type": "component",
      },
      "id": "1003",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "141",
    },
  ],
}
`;

exports[`FIXParser #parse: TradeCaptureReportAck should match snapshot 2`] = `
Message {
  "bodyLengthExpected": 109,
  "bodyLengthValid": true,
  "bodyLengthValue": 109,
  "checksumExpected": "073",
  "checksumValid": true,
  "checksumValue": "073",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX.4.2",
        "group": undefined,
        "id": "8001",
        "name": "FIX42",
        "sort": 1,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.2",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.2",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 109,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "TradeCaptureReportAck

The Trade Capture Report Ack message can be:

- Used to acknowledge trade capture reports received from a counterparty.

- Used to reject a trade capture report received from a counterparty.",
        "group": undefined,
        "id": "35077",
        "name": "TradeCaptureReportAck",
        "sort": 77,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "AR",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "AR",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 2486,
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "LSETR",
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20120330-12:14:10.379",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "LSEHub",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify the firm targeted to receive the message if the message is delivered by a third party i.e. the third party firm identifier would be delivered in the TargetCompID (56) field and the ultimate receiver firm ID in this field.",
      "enumeration": null,
      "name": "DeliverToCompID",
      "section": null,
      "tag": 128,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "BROKERX",
    },
    Field {
      "category": null,
      "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
      "enumeration": EnumType {
        "added": "FIX.4.3",
        "addedEP": undefined,
        "codeSet": "ExecTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Trade Cancel",
        "group": undefined,
        "id": "150016",
        "name": "TradeCancel",
        "sort": 16,
        "tag": 150,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "H",
      },
      "name": "ExecType",
      "section": null,
      "tag": 150,
      "type": null,
      "value": "H",
    },
    Field {
      "category": null,
      "description": "Unique identifier of trade capture report",
      "enumeration": null,
      "name": "TradeReportID",
      "section": null,
      "tag": 571,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "00008661533TRLO1-1-1-0",
    },
    Field {
      "category": null,
      "description": "Trade Report Status",
      "enumeration": EnumType {
        "added": "FIX.4.4",
        "addedEP": undefined,
        "codeSet": "TrdRptStatusCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Accepted",
        "group": undefined,
        "id": "939001",
        "name": "Accepted",
        "sort": 1,
        "tag": 939,
        "type": "int",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "0",
      },
      "name": "TrdRptStatus",
      "section": null,
      "tag": 939,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "073",
    },
  ],
  "description": "TradeCaptureReportAck",
  "fixVersion": "FIX.4.2",
  "messageSequence": 2486,
  "messageString": "8=FIX.4.29=10935=AR34=248649=LSETR52=20120330-12:14:10.37956=LSEHub128=BROKERX150=H571=00008661533TRLO1-1-1-0939=010=073",
  "messageType": "AR",
  "messageTypeDescription": "The Trade Capture Report Ack message can be:

- Used to acknowledge trade capture reports received from a counterparty.

- Used to reject a trade capture report received from a counterparty.",
  "structure": [
    {
      "added": "FIX.4.4",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.4.4",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
    {
      "added": "FIX.4.4",
      "data": {
        "abbrName": "Instrmt",
        "added": "FIX.4.3",
        "category": "Common",
        "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
        "id": "1003",
        "name": "Instrument",
        "type": "component",
      },
      "id": "1003",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "141",
    },
  ],
}
`;

exports[`FIXParser #parse: TradeCaptureReportAck should match snapshot 3`] = `
Message {
  "bodyLengthExpected": 111,
  "bodyLengthValid": true,
  "bodyLengthValue": 111,
  "checksumExpected": "015",
  "checksumValid": true,
  "checksumValue": "015",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX.4.2",
        "group": undefined,
        "id": "8001",
        "name": "FIX42",
        "sort": 1,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.2",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.2",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 111,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "TradeCaptureReportAck

The Trade Capture Report Ack message can be:

- Used to acknowledge trade capture reports received from a counterparty.

- Used to reject a trade capture report received from a counterparty.",
        "group": undefined,
        "id": "35077",
        "name": "TradeCaptureReportAck",
        "sort": 77,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "AR",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "AR",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "LSEHub",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "BROKERX",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm originating message if the message was delivered by a third party i.e. the third party firm identifier would be delivered in the SenderCompID field and the firm originating the message in this field.",
      "enumeration": null,
      "name": "OnBehalfOfCompID",
      "section": null,
      "tag": 115,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "LSETR",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 16,
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20120202-16:04:44",
    },
    Field {
      "category": null,
      "description": null,
      "enumeration": null,
      "name": null,
      "section": null,
      "tag": 370,
      "type": null,
      "value": "20120202-16:04:45.257",
    },
    Field {
      "category": null,
      "description": "Unique identifier of trade capture report",
      "enumeration": null,
      "name": "TradeReportID",
      "section": null,
      "tag": 571,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "1698",
    },
    Field {
      "category": null,
      "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
      "enumeration": EnumType {
        "added": "FIX.4.1",
        "addedEP": undefined,
        "codeSet": "ExecTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "New",
        "group": undefined,
        "id": "150001",
        "name": "New",
        "sort": 1,
        "tag": 150,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "0",
      },
      "name": "ExecType",
      "section": null,
      "tag": 150,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Trade Report Status",
      "enumeration": EnumType {
        "added": "FIX.4.4",
        "addedEP": undefined,
        "codeSet": "TrdRptStatusCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Accepted",
        "group": undefined,
        "id": "939001",
        "name": "Accepted",
        "sort": 1,
        "tag": 939,
        "type": "int",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "0",
      },
      "name": "TrdRptStatus",
      "section": null,
      "tag": 939,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "015",
    },
  ],
  "description": "TradeCaptureReportAck",
  "fixVersion": "FIX.4.2",
  "messageSequence": 16,
  "messageString": "8=FIX.4.29=11135=AR49=LSEHub56=BROKERX115=LSETR34=1652=20120202-16:04:44370=20120202-16:04:45.257571=1698150=0939=010=015",
  "messageType": "AR",
  "messageTypeDescription": "The Trade Capture Report Ack message can be:

- Used to acknowledge trade capture reports received from a counterparty.

- Used to reject a trade capture report received from a counterparty.",
  "structure": [
    {
      "added": "FIX.4.4",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.4.4",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
    {
      "added": "FIX.4.4",
      "data": {
        "abbrName": "Instrmt",
        "added": "FIX.4.3",
        "category": "Common",
        "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
        "id": "1003",
        "name": "Instrument",
        "type": "component",
      },
      "id": "1003",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "141",
    },
  ],
}
`;

exports[`FIXParser #parse: TradeCaptureReportRequest should match snapshot 1`] = `
Message {
  "bodyLengthExpected": 117,
  "bodyLengthValid": true,
  "bodyLengthValue": 117,
  "checksumExpected": "202",
  "checksumValid": true,
  "checksumValue": "202",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIX4",
        "group": undefined,
        "id": "8002",
        "name": "FIX44",
        "sort": 2,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIX.4.4",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIX.4.4",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 117,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "TradeCaptureReportRequest

The Trade Capture Report Request can be used to:

• Request one or more trade capture reports based upon selection criteria provided on the trade capture report request

• Subscribe for trade capture reports based upon selection criteria provided on the trade capture report request.",
        "group": undefined,
        "id": "35063",
        "name": "TradeCaptureReportRequest",
        "sort": 63,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "AD",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "AD",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 2,
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "A",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify specific message originator (desk, trader, etc.)",
      "enumeration": null,
      "name": "SenderSubID",
      "section": null,
      "tag": 50,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "1",
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20100219-14:33:32.258",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "B",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify specific individual or unit intended to receive message. "ADMIN" reserved for administrative messages not intended for a specific user.",
      "enumeration": null,
      "name": "TargetSubID",
      "section": null,
      "tag": 57,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "M",
    },
    Field {
      "category": null,
      "description": "Subscription Request Type",
      "enumeration": EnumType {
        "added": "FIX.4.2",
        "addedEP": undefined,
        "codeSet": "SubscriptionRequestTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Snapshot + Updates (Subscribe)",
        "group": undefined,
        "id": "263002",
        "name": "SnapshotAndUpdates",
        "sort": 2,
        "tag": 263,
        "type": "char",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "1",
      },
      "name": "SubscriptionRequestType",
      "section": null,
      "tag": 263,
      "type": null,
      "value": "1",
    },
    Field {
      "category": null,
      "description": "Trade Capture Report Request ID",
      "enumeration": null,
      "name": "TradeRequestID",
      "section": null,
      "tag": 568,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "1",
    },
    Field {
      "category": null,
      "description": "Type of Trade Capture Report.",
      "enumeration": EnumType {
        "added": "FIX.4.3",
        "addedEP": undefined,
        "codeSet": "TradeRequestTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "All Trades",
        "group": undefined,
        "id": "569001",
        "name": "AllTrades",
        "sort": 0,
        "tag": 569,
        "type": "int",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "0",
      },
      "name": "TradeRequestType",
      "section": null,
      "tag": 569,
      "type": null,
      "value": "0",
    },
    Field {
      "category": null,
      "description": "Number of Date fields provided in date range",
      "enumeration": null,
      "name": "NoDates",
      "section": null,
      "tag": 580,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the number of entries in a repeating group. Value must be positive.",
        "name": "NumInGroup",
      },
      "value": 1,
    },
    Field {
      "category": null,
      "description": "Indicates date of trading day. Absence of this field indicates current day (expressed in local time at place of trade).",
      "enumeration": null,
      "name": "TradeDate",
      "section": null,
      "tag": 75,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing a Date of Local Market (as opposed to UTC) in YYYYMMDD format. This is the "normal" date field used by the FIX Protocol.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31",
        "mappedDatatype": {
          "base": "xs:date",
          "builtin": "false",
          "description": "string field representing a Date of Local Market (as opposed to UTC) in YYYY-MM-DD format. This is the "normal" date field used by the FIX Protocol.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31.",
          "standard": "XML",
        },
        "name": "LocalMktDate",
        "updated": "FIX.5.0SP2",
        "updatedEP": "206",
      },
      "value": "20100218",
    },
    Field {
      "category": null,
      "description": "Timestamp when the business transaction represented by the message occurred.",
      "enumeration": null,
      "name": "TransactTime",
      "section": null,
      "tag": 60,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20100218-00:00:00.000",
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "202",
    },
  ],
  "description": "TradeCaptureReportRequest",
  "fixVersion": "FIX.4.4",
  "messageSequence": 2,
  "messageString": "8=FIX.4.49=11735=AD34=249=A50=152=20100219-14:33:32.25856=B57=M263=1568=1569=0580=175=2010021860=20100218-00:00:00.00010=202",
  "messageType": "AD",
  "messageTypeDescription": "The Trade Capture Report Request can be used to:

• Request one or more trade capture reports based upon selection criteria provided on the trade capture report request

• Subscribe for trade capture reports based upon selection criteria provided on the trade capture report request.",
  "structure": [
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "ReqID",
        "added": "FIX.4.3",
        "description": "Trade Capture Report Request ID",
        "id": "568",
        "name": "TradeRequestID",
        "type": "String",
      },
      "id": "568",
      "presence": "required",
      "updated": "FIX.5.0SP2",
      "updatedEP": "141",
    },
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "ReqTyp",
        "added": "FIX.4.3",
        "description": "Type of Trade Capture Report.",
        "id": "569",
        "name": "TradeRequestType",
        "type": "TradeRequestTypeCodeSet",
      },
      "id": "569",
      "presence": "required",
    },
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
  ],
}
`;

exports[`FIXParser #parse: XMLnonFIX should match snapshot 1`] = `
Message {
  "bodyLengthExpected": 77,
  "bodyLengthValid": true,
  "bodyLengthValue": 77,
  "checksumExpected": "220",
  "checksumValid": false,
  "checksumValue": "210",
  "data": [
    Field {
      "category": null,
      "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
      "enumeration": EnumType {
        "added": "FIX.Latest",
        "addedEP": "270",
        "codeSet": "BeginStringCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "Session profile FIXT or LFXIT

The choice between FIXT and LFIXT is subject to counterparty agreement.",
        "group": undefined,
        "id": "8003",
        "name": "FIXT11",
        "sort": 3,
        "tag": 8,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "FIXT.1.1",
      },
      "name": "BeginString",
      "section": null,
      "tag": 8,
      "type": null,
      "value": "FIXT.1.1",
    },
    Field {
      "category": null,
      "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
      "enumeration": null,
      "name": "BodyLength",
      "section": null,
      "tag": 9,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 77,
    },
    Field {
      "category": null,
      "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
      "enumeration": EnumType {
        "added": undefined,
        "addedEP": undefined,
        "codeSet": "MsgTypeCodeSet",
        "deprecated": undefined,
        "deprecatedEP": undefined,
        "description": "XMLnonFIX

",
        "group": undefined,
        "id": "35047",
        "name": "XMLnonFIX",
        "sort": 47,
        "tag": 35,
        "type": "String",
        "updated": undefined,
        "updatedEP": undefined,
        "value": "n",
      },
      "name": "MsgType",
      "section": null,
      "tag": 35,
      "type": null,
      "value": "n",
    },
    Field {
      "category": null,
      "description": "Integer message sequence number.",
      "enumeration": null,
      "name": "MsgSeqNum",
      "section": null,
      "tag": 34,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing a message sequence number. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:positiveInteger",
          "builtin": "false",
          "description": "int field representing a message sequence number. Value must be positive.",
          "standard": "XML",
        },
        "name": "SeqNum",
      },
      "value": 352,
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify firm sending message.",
      "enumeration": null,
      "name": "SenderCompID",
      "section": null,
      "tag": 49,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "SOURCE",
    },
    Field {
      "category": null,
      "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
      "enumeration": null,
      "name": "SendingTime",
      "section": null,
      "tag": 52,
      "type": {
        "added": "FIX.4.2",
        "baseType": "String",
        "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
        "mappedDatatype": {
          "base": "xs:dateTime",
          "builtin": "false",
          "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "standard": "XML",
        },
        "name": "UTCTimestamp",
        "updated": "FIX.5.0SP2",
        "updatedEP": "256",
      },
      "value": "20170808-12:08:08.060",
    },
    Field {
      "category": null,
      "description": "Assigned value used to identify receiving firm.",
      "enumeration": null,
      "name": "TargetCompID",
      "section": null,
      "tag": 56,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "TARGET",
    },
    Field {
      "category": null,
      "description": "Length of the XmlData data block.",
      "enumeration": null,
      "name": "XmlDataLen",
      "section": null,
      "tag": 212,
      "type": {
        "added": "FIX.4.3",
        "baseType": "int",
        "description": "int field representing the length in bytes. Value must be positive.",
        "mappedDatatype": {
          "base": "xs:nonNegativeInteger",
          "builtin": "false",
          "description": "int field representing the length in bytes. Value must be positive.",
          "standard": "XML",
        },
        "name": "Length",
      },
      "value": 9885,
    },
    Field {
      "category": null,
      "description": "Actual XML data stream (e.g. FIXML). See appropriate XML reference (e.g. FIXML). Note: may contain embedded SOH characters.",
      "enumeration": null,
      "name": "XmlData",
      "section": null,
      "tag": 213,
      "type": {
        "added": "FIX.5.0",
        "addedEP": "-1",
        "baseType": "String",
        "description": "Contains an XML document raw data with no format or content restrictions. XMLData fields are always immediately preceded by a length field. The length field should specify the number of bytes of the value of the data field (up to but not including the terminating SOH).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "false",
          "standard": "XML",
        },
        "name": "XMLData",
      },
      "value": "<foo/>",
    },
    Field {
      "category": null,
      "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
      "enumeration": null,
      "name": "CheckSum",
      "section": null,
      "tag": 10,
      "type": {
        "added": "FIX.4.2",
        "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
        "mappedDatatype": {
          "base": "xs:string",
          "builtin": "true",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "standard": "XML",
        },
        "name": "String",
      },
      "value": "210",
    },
  ],
  "description": "XMLnonFIX",
  "fixVersion": "FIXT.1.1",
  "messageSequence": 352,
  "messageString": "8=FIXT.1.19=7735=n34=35249=SOURCE52=20170808-12:08:08.06056=TARGET212=9885213=<foo/>10=210",
  "messageType": "n",
  "messageTypeDescription": "",
  "structure": [
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "Hdr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message header

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
            "id": "8",
            "name": "BeginString",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be second field in message)",
            "id": "9",
            "name": "BodyLength",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, must be third field in message)",
            "id": "35",
            "name": "MsgType",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "49",
            "name": "SenderCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted)",
            "id": "56",
            "name": "TargetCompID",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "34",
            "name": "MsgSeqNum",
            "presence": "required",
          },
          {
            "added": "FIX.4.0",
            "description": "(Can be embedded within encrypted data section.)",
            "id": "52",
            "name": "SendingTime",
            "presence": "required",
          },
        ],
        "id": "1024",
        "name": "StandardHeader",
        "type": "component",
        "updated": "FIX.Latest",
        "updatedEP": "271",
      },
      "id": "1024",
      "presence": "required",
    },
    {
      "added": "FIX.4.3",
      "data": {
        "abbrName": "Trlr",
        "added": "FIX.4.0",
        "category": "Session",
        "description": "The standard FIX message trailer

",
        "fieldRef": [
          {
            "added": "FIX.4.0",
            "description": "(Always unencrypted, always last field in message)",
            "id": "10",
            "name": "CheckSum",
            "presence": "required",
          },
        ],
        "id": "1025",
        "name": "StandardTrailer",
        "type": "component",
      },
      "id": "1025",
      "presence": "required",
    },
  ],
}
`;

exports[`FIXParser #parse: checksum validation should validate checksum correctly 1`] = `"8=FIX.4.49=10935=AN49=ctrader.154678556=cServer57=TRADE50=154678534=252=20190109-10:48:02710=140511721=530521510=175"`;

exports[`FIXParser #parse: checksum validation should validate checksum correctly 2`] = `"8=FIX.4.49=10935=AN49=ctrader.154678556=cServer57=TRADE50=154678534=252=20190109-10:48:02110=555710=140511721=530521510=221"`;

exports[`FIXParser #parse: invalid message should return null when having incorrect message 1`] = `[]`;

exports[`FIXParser #parse: unknown SOH "/" should parse the message, SOH "/" 1`] = `"8=FIX.4.29=10635=A34=149=U1par50=U1fix52=20090206-21:13:36.88756=FixServer98=0108=30141=Y553=U1fix554=hotspot10=061"`;

exports[`FIXParser #parse: unknown SOH should parse the message, SOH " " 1`] = `
[
  Message {
    "bodyLengthExpected": 106,
    "bodyLengthValid": true,
    "bodyLengthValue": 106,
    "checksumExpected": "206",
    "checksumValid": false,
    "checksumValue": "061",
    "data": [
      Field {
        "category": null,
        "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
        "enumeration": EnumType {
          "added": "FIX.Latest",
          "addedEP": "270",
          "codeSet": "BeginStringCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Session profile FIX.4.2",
          "group": undefined,
          "id": "8001",
          "name": "FIX42",
          "sort": 1,
          "tag": 8,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "FIX.4.2",
        },
        "name": "BeginString",
        "section": null,
        "tag": 8,
        "type": null,
        "value": "FIX.4.2",
      },
      Field {
        "category": null,
        "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
        "enumeration": null,
        "name": "BodyLength",
        "section": null,
        "tag": 9,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the length in bytes. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:nonNegativeInteger",
            "builtin": "false",
            "description": "int field representing the length in bytes. Value must be positive.",
            "standard": "XML",
          },
          "name": "Length",
        },
        "value": 106,
      },
      Field {
        "category": null,
        "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
        "enumeration": EnumType {
          "added": undefined,
          "addedEP": undefined,
          "codeSet": "MsgTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Logon

The logon message authenticates a user establishing a connection to a remote system. The logon message must be the first message sent by the application requesting to initiate a FIX session.",
          "group": undefined,
          "id": "35011",
          "name": "Logon",
          "sort": 11,
          "tag": 35,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "A",
        },
        "name": "MsgType",
        "section": null,
        "tag": 35,
        "type": null,
        "value": "A",
      },
      Field {
        "category": null,
        "description": "Integer message sequence number.",
        "enumeration": null,
        "name": "MsgSeqNum",
        "section": null,
        "tag": 34,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing a message sequence number. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:positiveInteger",
            "builtin": "false",
            "description": "int field representing a message sequence number. Value must be positive.",
            "standard": "XML",
          },
          "name": "SeqNum",
        },
        "value": 1,
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm sending message.",
        "enumeration": null,
        "name": "SenderCompID",
        "section": null,
        "tag": 49,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "U1par",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify specific message originator (desk, trader, etc.)",
        "enumeration": null,
        "name": "SenderSubID",
        "section": null,
        "tag": 50,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "U1fix",
      },
      Field {
        "category": null,
        "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
        "enumeration": null,
        "name": "SendingTime",
        "section": null,
        "tag": 52,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20090206-21:13:36.887",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify receiving firm.",
        "enumeration": null,
        "name": "TargetCompID",
        "section": null,
        "tag": 56,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "FixServer",
      },
      Field {
        "category": null,
        "description": "Method of encryption.",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "EncryptMethodCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "None / Other",
          "group": undefined,
          "id": "98001",
          "name": "None",
          "sort": 1,
          "tag": 98,
          "type": "int",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "0",
        },
        "name": "EncryptMethod",
        "section": null,
        "tag": 98,
        "type": null,
        "value": "0",
      },
      Field {
        "category": null,
        "description": "Heartbeat interval (seconds)",
        "enumeration": null,
        "name": "HeartBtInt",
        "section": null,
        "tag": 108,
        "type": {
          "added": "FIX.2.7",
          "description": "Sequence of digits without commas or decimals and optional sign character (ASCII characters "-" and "0" - "9" ). The sign character utilizes one byte (i.e. positive int is "99999" while negative int is "-99999"). Note that int values may contain leading zeros (e.g. "00023" = "23").",
          "mappedDatatype": {
            "base": "xs:integer",
            "builtin": "true",
            "standard": "XML",
          },
          "name": "int",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "value": 30,
      },
      Field {
        "category": null,
        "description": "Indicates that both sides of the FIX session should reset sequence numbers.",
        "enumeration": EnumType {
          "added": "FIX.4.1",
          "addedEP": undefined,
          "codeSet": "ResetSeqNumFlagCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Yes, reset sequence numbers",
          "group": undefined,
          "id": "141002",
          "name": "Yes",
          "sort": 2,
          "tag": 141,
          "type": "Boolean",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "Y",
        },
        "name": "ResetSeqNumFlag",
        "section": null,
        "tag": 141,
        "type": null,
        "value": "Y",
      },
      Field {
        "category": null,
        "description": "Userid or username.",
        "enumeration": null,
        "name": "Username",
        "section": null,
        "tag": 553,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "U1fix",
      },
      Field {
        "category": null,
        "description": "Password or passphrase.",
        "enumeration": null,
        "name": "Password",
        "section": null,
        "tag": 554,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "hotspot",
      },
      Field {
        "category": null,
        "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
        "enumeration": null,
        "name": "CheckSum",
        "section": null,
        "tag": 10,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "061",
      },
    ],
    "description": "Logon",
    "fixVersion": "FIX.4.2",
    "messageSequence": 1,
    "messageString": "8=FIX.4.29=10635=A34=149=U1par50=U1fix52=20090206-21:13:36.88756=FixServer98=0108=30141=Y553=U1fix554=hotspot10=061",
    "messageType": "A",
    "messageTypeDescription": "The logon message authenticates a user establishing a connection to a remote system. The logon message must be the first message sent by the application requesting to initiate a FIX session.",
    "structure": [
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Hdr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message header

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
              "id": "8",
              "name": "BeginString",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be second field in message)",
              "id": "9",
              "name": "BodyLength",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be third field in message)",
              "id": "35",
              "name": "MsgType",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "49",
              "name": "SenderCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "56",
              "name": "TargetCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "34",
              "name": "MsgSeqNum",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "52",
              "name": "SendingTime",
              "presence": "required",
            },
          ],
          "id": "1024",
          "name": "StandardHeader",
          "type": "component",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "id": "1024",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "EncryptMethod",
          "added": "FIX.2.7",
          "description": "Method of encryption.",
          "id": "98",
          "name": "EncryptMethod",
          "type": "EncryptMethodCodeSet",
        },
        "id": "98",
        "presence": "required",
      },
      {
        "added": "FIX.3.0",
        "data": {
          "abbrName": "HeartBtInt",
          "added": "FIX.3.0",
          "description": "Heartbeat interval (seconds)",
          "id": "108",
          "name": "HeartBtInt",
          "type": "int",
        },
        "id": "108",
        "presence": "required",
      },
      {
        "added": "FIX.4.4",
        "addedEP": "-1",
        "data": {
          "abbrName": "DefApplVerID",
          "added": "FIX.4.4",
          "addedEP": "16",
          "description": "Specifies the service pack release being applied, by default, to message at the session level. Enumerated field with values assigned at time of service pack release. Uses same values as ApplVerID",
          "id": "1137",
          "name": "DefaultApplVerID",
          "type": "ApplVerIDCodeSet",
        },
        "id": "1137",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Trlr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message trailer

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, always last field in message)",
              "id": "10",
              "name": "CheckSum",
              "presence": "required",
            },
          ],
          "id": "1025",
          "name": "StandardTrailer",
          "type": "component",
        },
        "id": "1025",
        "presence": "required",
      },
    ],
  },
]
`;

exports[`FIXParser ExecutionReport (Snapshot) should have the expected format 1`] = `
[
  Message {
    "bodyLengthExpected": 266,
    "bodyLengthValid": true,
    "bodyLengthValue": 266,
    "checksumExpected": "136",
    "checksumValid": true,
    "checksumValue": "136",
    "data": [
      Field {
        "category": null,
        "description": "Identifies beginning of new message and session protocol version by means of a session profile identifier (see FIX Session Layer for details). ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted).",
        "enumeration": EnumType {
          "added": "FIX.Latest",
          "addedEP": "270",
          "codeSet": "BeginStringCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Session profile FIX.4.2",
          "group": undefined,
          "id": "8001",
          "name": "FIX42",
          "sort": 1,
          "tag": 8,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "FIX.4.2",
        },
        "name": "BeginString",
        "section": null,
        "tag": 8,
        "type": null,
        "value": "FIX.4.2",
      },
      Field {
        "category": null,
        "description": "Message length, in bytes, forward to the CheckSum field. ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)",
        "enumeration": null,
        "name": "BodyLength",
        "section": null,
        "tag": 9,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing the length in bytes. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:nonNegativeInteger",
            "builtin": "false",
            "description": "int field representing the length in bytes. Value must be positive.",
            "standard": "XML",
          },
          "name": "Length",
        },
        "value": 266,
      },
      Field {
        "category": null,
        "description": "Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always unencrypted)

Note: A "U" as the first character in the MsgType field (i.e. U, U2, etc) indicates that the message format is privately defined between the sender and receiver.

*** Note the use of lower case letters ***",
        "enumeration": EnumType {
          "added": undefined,
          "addedEP": undefined,
          "codeSet": "MsgTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "ExecutionReport

The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
          "group": undefined,
          "id": "35009",
          "name": "ExecutionReport",
          "sort": 9,
          "tag": 35,
          "type": "String",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "8",
        },
        "name": "MsgType",
        "section": null,
        "tag": 35,
        "type": null,
        "value": "8",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify firm sending message.",
        "enumeration": null,
        "name": "SenderCompID",
        "section": null,
        "tag": 49,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "ABC",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify receiving firm.",
        "enumeration": null,
        "name": "TargetCompID",
        "section": null,
        "tag": 56,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "XYZ",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify specific message originator (desk, trader, etc.)",
        "enumeration": null,
        "name": "SenderSubID",
        "section": null,
        "tag": 50,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "AZ12",
      },
      Field {
        "category": null,
        "description": "Assigned value used to identify specific individual or unit intended to receive message. "ADMIN" reserved for administrative messages not intended for a specific user.",
        "enumeration": null,
        "name": "TargetSubID",
        "section": null,
        "tag": 57,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "NA",
      },
      Field {
        "category": null,
        "description": "Integer message sequence number.",
        "enumeration": null,
        "name": "MsgSeqNum",
        "section": null,
        "tag": 34,
        "type": {
          "added": "FIX.4.3",
          "baseType": "int",
          "description": "int field representing a message sequence number. Value must be positive.",
          "mappedDatatype": {
            "base": "xs:positiveInteger",
            "builtin": "false",
            "description": "int field representing a message sequence number. Value must be positive.",
            "standard": "XML",
          },
          "name": "SeqNum",
        },
        "value": 833,
      },
      Field {
        "category": null,
        "description": "Time of message transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT")",
        "enumeration": null,
        "name": "SendingTime",
        "section": null,
        "tag": 52,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20100130-08:00:51.992",
      },
      Field {
        "category": null,
        "description": "Ticker symbol. Common, "human understood" representation of the security. SecurityID (48) value can be specified if no symbol exists (e.g. non-exchange traded Collective Investment Vehicles)

Use "[N/A]" for products which do not have a symbol.",
        "enumeration": null,
        "name": "Symbol",
        "section": null,
        "tag": 55,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "GLD",
      },
      Field {
        "category": null,
        "description": "Security identifier value of SecurityIDSource (22) type (e.g. CUSIP, SEDOL, ISIN, etc). Requires SecurityIDSource.",
        "enumeration": null,
        "name": "SecurityID",
        "section": null,
        "tag": 48,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "PL11YA",
      },
      Field {
        "category": null,
        "description": "Indicates type of security. Security type enumerations are grouped by Product(460) field value. NOTE: Additional values may be used by mutual agreement of the counterparties.",
        "enumeration": EnumType {
          "added": "FIX.4.1",
          "addedEP": undefined,
          "codeSet": "SecurityTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Future",
          "group": "Derivatives",
          "id": "167036",
          "name": "Future",
          "sort": 8,
          "tag": 167,
          "type": "String",
          "updated": "FIX.5.0SP2",
          "updatedEP": "169",
          "value": "FUT",
        },
        "name": "SecurityType",
        "section": null,
        "tag": 167,
        "type": null,
        "value": "FUT",
      },
      Field {
        "category": null,
        "description": "Market used to help identify a security.

Valid values:

See "Appendix 6-C"",
        "enumeration": null,
        "name": "SecurityExchange",
        "section": null,
        "tag": 207,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "false",
            "description": "string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).",
            "pattern": ".*",
            "standard": "XML",
          },
          "name": "Exchange",
        },
        "value": "LIFFE",
      },
      Field {
        "category": null,
        "description": "Account mnemonic as agreed between buy and sell sides, e.g. broker and institution or investor/intermediary and fund manager.",
        "enumeration": null,
        "name": "Account",
        "section": null,
        "tag": 1,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "AA1",
      },
      Field {
        "category": null,
        "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
        "enumeration": null,
        "name": "OrderID",
        "section": null,
        "tag": 37,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "ABC1",
      },
      Field {
        "category": null,
        "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
        "enumeration": null,
        "name": "ExecID",
        "section": null,
        "tag": 17,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "INDNTHDOG",
      },
      Field {
        "category": null,
        "description": "Free format text string

(Note: this field does not have a specified maximum length)",
        "enumeration": null,
        "name": "Text",
        "section": null,
        "tag": 58,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "Fill",
      },
      Field {
        "category": null,
        "description": "Can be used with standardized derivatives vs. the MaturityDate (541) field. Month and Year of the maturity (used for standardized futures and options).

Format:

YYYYMM (e.g. 199903)

YYYYMMDD (e.g. 20030323)

YYYYMMwN (e.g. 200303w) for week

A specific date or can be appended to the MaturityMonthYear. For instance, if multiple standard products exist that mature in the same Year and Month, but actually mature at a different time, a value can be appended, such as "w" or "w2" to indicate week as opposed to week 2 expiration. Likewise, the date (0-3) can be appended to indicate a specific expiration (maturity date).",
        "enumeration": null,
        "name": "MaturityMonthYear",
        "section": null,
        "tag": 200,
        "type": {
          "added": "FIX.4.1",
          "baseType": "String",
          "description": "string field representing month of a year. An optional day of the month can be appended or an optional week code.

Valid formats:

YYYYMM

YYYYMMDD

YYYYMMWW

Valid values:

YYYY = 0000-9999; MM = 01-12; DD = 01-31; WW = w1, w2, w3, w4, w5.",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "false",
            "description": "string field representing month of a year. An optional day of the month can be appended or an optional week code.

Valid formats:

YYYYMM

YYYYMMDD

YYYYMMWW

Valid values:

YYYY = 0000-9999; MM = 01-12; DD = 01-31; WW = w1, w2, w3, w4, w5.",
            "pattern": "\\d{4}(0|1)\\d([0-3wW]\\d)?",
            "standard": "XML",
          },
          "name": "MonthYear",
        },
        "value": "201009",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 205,
        "type": null,
        "value": "13",
      },
      Field {
        "category": null,
        "description": "Quantity (e.g. shares) bought/sold on this (last) fill.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "LastQty",
        "section": null,
        "tag": 32,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 25,
      },
      Field {
        "category": null,
        "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "LeavesQty",
        "section": null,
        "tag": 151,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 0,
      },
      Field {
        "category": null,
        "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "CumQty",
        "section": null,
        "tag": 14,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 25,
      },
      Field {
        "category": null,
        "description": "Side of order (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "SideCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Sell

For Securities Financing indicates the delivery of securities or collateral.",
          "group": undefined,
          "id": "54002",
          "name": "Sell",
          "sort": 2,
          "tag": 54,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "254",
          "value": "2",
        },
        "name": "Side",
        "section": null,
        "tag": 54,
        "type": null,
        "value": "2",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Order type. *** SOME VALUES ARE NO LONGER USED - See "Deprecated (Phased-out) Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "OrdTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Limit",
          "group": undefined,
          "id": "40002",
          "name": "Limit",
          "sort": 2,
          "tag": 40,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "2",
        },
        "name": "OrdType",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 40,
        "type": null,
        "value": "2",
      },
      Field {
        "category": null,
        "description": "Indicates whether the resulting position after a trade should be an opening position or closing position. Used for omnibus accounting - where accounts are held on a gross basis instead of being netted together.",
        "enumeration": EnumType {
          "added": "FIX.4.1",
          "addedEP": undefined,
          "codeSet": "PositionEffectCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Open",
          "group": undefined,
          "id": "77003",
          "name": "Open",
          "sort": 3,
          "tag": 77,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "O",
        },
        "name": "PositionEffect",
        "section": null,
        "tag": 77,
        "type": null,
        "value": "O",
      },
      Field {
        "category": null,
        "description": "Specifies how long the order remains in effect. Absence of this field is interpreted as DAY. NOTE not applicable to CIV Orders.",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "TimeInForceCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Day (or session)

A buy or sell order that, if not executed expires at the end of the trading day on which it was entered.",
          "group": undefined,
          "id": "59001",
          "name": "Day",
          "sort": 1,
          "tag": 59,
          "type": "char",
          "updated": "FIX.5.0SP2",
          "updatedEP": "253",
          "value": "0",
        },
        "name": "TimeInForce",
        "section": null,
        "tag": 59,
        "type": null,
        "value": "0",
      },
      Field {
        "category": null,
        "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
        "enumeration": null,
        "name": "ExecType",
        "section": null,
        "tag": 150,
        "type": null,
        "value": "2",
      },
      Field {
        "category": null,
        "description": null,
        "enumeration": null,
        "name": null,
        "section": null,
        "tag": 20,
        "type": null,
        "value": "0",
      },
      Field {
        "category": CategoryType {
          "categoryID": "SingleGeneralOrderHandling",
          "componentType": "Message",
          "fixmlFileName": "order",
          "includeFile": "components",
          "sectionID": "Trade",
        },
        "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
        "enumeration": EnumType {
          "added": "FIX.2.7",
          "addedEP": undefined,
          "codeSet": "OrdStatusCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Filled",
          "group": undefined,
          "id": "39003",
          "name": "Filled",
          "sort": 3,
          "tag": 39,
          "type": "char",
          "updated": undefined,
          "updatedEP": undefined,
          "value": "2",
        },
        "name": "OrdStatus",
        "section": SectionType {
          "description": "Order handling and execution messages",
          "displayOrder": 2,
          "fixmlFileName": "trade",
          "name": "Trade",
          "notReqXML": false,
          "sectionID": "Trade",
          "volume": "4",
        },
        "tag": 39,
        "type": null,
        "value": "2",
      },
      Field {
        "category": null,
        "description": "Used to indicate how the multi-legged security (e.g. option strategies, spreads, etc.) is being reported.",
        "enumeration": EnumType {
          "added": "FIX.4.2",
          "addedEP": undefined,
          "codeSet": "MultiLegReportingTypeCodeSet",
          "deprecated": undefined,
          "deprecatedEP": undefined,
          "description": "Single security (default if not specified)",
          "group": undefined,
          "id": "442001",
          "name": "SingleSecurity",
          "sort": 1,
          "tag": 442,
          "type": "char",
          "updated": "FIX.5.0SP1",
          "updatedEP": "95",
          "value": "1",
        },
        "name": "MultiLegReportingType",
        "section": null,
        "tag": 442,
        "type": null,
        "value": "1",
      },
      Field {
        "category": null,
        "description": "Price per unit of quantity (e.g. per share)",
        "enumeration": null,
        "name": "Price",
        "section": null,
        "tag": 44,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
            "standard": "XML",
          },
          "name": "Price",
        },
        "value": 99.06,
      },
      Field {
        "category": null,
        "description": "Quantity ordered. This represents the number of shares for equities or par, face or nominal value for FI instruments.

(Prior to FIX 4.2 this field was of type int)",
        "enumeration": null,
        "name": "OrderQty",
        "section": null,
        "tag": 38,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).",
            "standard": "XML",
          },
          "name": "Qty",
        },
        "value": 25,
      },
      Field {
        "category": null,
        "description": "Price of this (last) fill.",
        "enumeration": null,
        "name": "LastPx",
        "section": null,
        "tag": 31,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
            "standard": "XML",
          },
          "name": "Price",
        },
        "value": 99.06,
      },
      Field {
        "category": null,
        "description": "Calculated average price of all fills on this order.

For Fixed Income trades AvgPx is always expressed as percent-of-par, regardless of the PriceType (423) of LastPx (31). I.e., AvgPx will contain an average of percent-of-par values (see LastParPx (669)) for issues traded in Yield, Spread or Discount.",
        "enumeration": null,
        "name": "AvgPx",
        "section": null,
        "tag": 6,
        "type": {
          "added": "FIX.4.2",
          "baseType": "float",
          "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
          "mappedDatatype": {
            "base": "xs:decimal",
            "builtin": "false",
            "description": "float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.",
            "standard": "XML",
          },
          "name": "Price",
        },
        "value": 99.06,
      },
      Field {
        "category": null,
        "description": "Timestamp when the business transaction represented by the message occurred.",
        "enumeration": null,
        "name": "TransactTime",
        "section": null,
        "tag": 60,
        "type": {
          "added": "FIX.4.2",
          "baseType": "String",
          "description": "string field representing time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss* format, colons, dash, and period required.

Valid values:

YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss* fractions of seconds.

The fractions of seconds may be empty when no fractions of seconds are conveyed (in such a case the period is not conveyed), it may include 3 digits to convey milliseconds, 6 digits to convey microseconds, 9 digits to convey nanoseconds, 12 digits to convey picoseconds; Other number of digits may be used with bilateral agreement.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "19981231-23:59:59", "19981231-23:59:60", "19990101-00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
          "mappedDatatype": {
            "base": "xs:dateTime",
            "builtin": "false",
            "description": "string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT).

Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601.

Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second.

The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified.

Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)",
            "standard": "XML",
          },
          "name": "UTCTimestamp",
          "updated": "FIX.5.0SP2",
          "updatedEP": "256",
        },
        "value": "20100130-08:00:52",
      },
      Field {
        "category": null,
        "description": "Three byte, simple checksum (see Volume 2: "Checksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trailing <SOH>, as the end-of-message delimiter. Always defined as three characters. (Always unencrypted)",
        "enumeration": null,
        "name": "CheckSum",
        "section": null,
        "tag": 10,
        "type": {
          "added": "FIX.4.2",
          "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
          "mappedDatatype": {
            "base": "xs:string",
            "builtin": "true",
            "description": "Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive (i.e. morstatt != Morstatt).",
            "standard": "XML",
          },
          "name": "String",
        },
        "value": "136",
      },
    ],
    "description": "ExecutionReport",
    "fixVersion": "FIX.4.2",
    "messageSequence": 833,
    "messageString": "8=FIX.4.29=26635=849=ABC56=XYZ50=AZ1257=NA34=83352=20100130-08:00:51.99255=GLD48=PL11YA167=FUT207=LIFFE1=AA137=ABC117=INDNTHDOG58=Fill200=201009205=1332=25151=014=2554=240=277=O59=0150=220=039=2442=144=99.0638=2531=99.066=99.0660=20100130-08:00:5210=136",
    "messageType": "8",
    "messageTypeDescription": "The execution report message is used to:

1. confirm the receipt of an order

2. confirm changes to an existing order (i.e. accept cancel and replace requests)

3. relay order status information

4. relay fill information on working orders

5. relay fill information on tradeable or restricted tradeable quotes

6. reject orders

7. report post-trade fees calculations associated with a trade",
    "structure": [
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Hdr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message header

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "FIXT.1.1 (Always unencrypted, must be first field in message)",
              "id": "8",
              "name": "BeginString",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be second field in message)",
              "id": "9",
              "name": "BodyLength",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, must be third field in message)",
              "id": "35",
              "name": "MsgType",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "49",
              "name": "SenderCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted)",
              "id": "56",
              "name": "TargetCompID",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "34",
              "name": "MsgSeqNum",
              "presence": "required",
            },
            {
              "added": "FIX.4.0",
              "description": "(Can be embedded within encrypted data section.)",
              "id": "52",
              "name": "SendingTime",
              "presence": "required",
            },
          ],
          "id": "1024",
          "name": "StandardHeader",
          "type": "component",
          "updated": "FIX.Latest",
          "updatedEP": "271",
        },
        "id": "1024",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "CumQty",
          "added": "FIX.2.7",
          "description": "Total quantity (e.g. number of shares) filled.

(Prior to FIX 4.2 this field was of type int)",
          "id": "14",
          "name": "CumQty",
          "type": "Qty",
        },
        "id": "14",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "ExecID",
          "added": "FIX.2.7",
          "description": "Unique identifier of execution message as assigned by sell-side (broker, exchange, ECN) (will be 0 (zero) for ExecType (150)=I (Order Status)).

Uniqueness must be guaranteed within a single trading day or the life of a multi-day order. Firms which accept multi-day orders should consider embedding a date within the ExecID field to assure uniqueness across days.

(Prior to FIX 4.1 this field was of type int).",
          "id": "17",
          "name": "ExecID",
          "type": "String",
          "updated": "FIX.5.0SP1",
          "updatedEP": "95",
        },
        "id": "17",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "OrdID",
          "added": "FIX.2.7",
          "description": "Unique identifier for Order as assigned by sell-side (broker, exchange, ECN). Uniqueness must be guaranteed within a single trading day. Firms which accept multi-day orders should consider embedding a date within the OrderID field to assure uniqueness across days.",
          "id": "37",
          "name": "OrderID",
          "type": "String",
        },
        "id": "37",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "OrdStat",
          "added": "FIX.2.7",
          "baseCategory": "SingleGeneralOrderHandling",
          "baseCategoryAbbrName": "Stat",
          "description": "Identifies current status of order. *** SOME VALUES HAVE BEEN REPLACED - See "Replaced Features and Supported Approach" *** (see Volume : "Glossary" for value definitions)",
          "id": "39",
          "name": "OrdStatus",
          "type": "OrdStatusCodeSet",
        },
        "id": "39",
        "presence": "required",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Side",
          "added": "FIX.2.7",
          "description": "Side of order (see Volume : "Glossary" for value definitions)",
          "id": "54",
          "name": "Side",
          "type": "SideCodeSet",
        },
        "id": "54",
        "presence": "required",
      },
      {
        "added": "FIX.4.1",
        "data": {
          "abbrName": "ExecTyp",
          "added": "FIX.4.1",
          "description": "Describes the specific ExecutionRpt (e.g. Pending Cancel) while OrdStatus(39) will always identify the current order status (e.g. Partially Filled).",
          "id": "150",
          "name": "ExecType",
          "type": "ExecTypeCodeSet",
          "updated": "FIX.5.0SP2",
          "updatedEP": "131",
        },
        "id": "150",
        "presence": "required",
      },
      {
        "added": "FIX.4.1",
        "data": {
          "abbrName": "LeavesQty",
          "added": "FIX.4.1",
          "description": "Quantity open for further execution. If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no longer active) then LeavesQty could be 0, otherwise LeavesQty = OrderQty (38) - CumQty (14).

(Prior to FIX 4.2 this field was of type int)",
          "id": "151",
          "name": "LeavesQty",
          "type": "Qty",
        },
        "id": "151",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
      {
        "added": "FIX.2.7",
        "data": {
          "abbrName": "Trlr",
          "added": "FIX.4.0",
          "category": "Session",
          "description": "The standard FIX message trailer

",
          "fieldRef": [
            {
              "added": "FIX.4.0",
              "description": "(Always unencrypted, always last field in message)",
              "id": "10",
              "name": "CheckSum",
              "presence": "required",
            },
          ],
          "id": "1025",
          "name": "StandardTrailer",
          "type": "component",
        },
        "id": "1025",
        "presence": "required",
      },
      {
        "added": "FIX.4.3",
        "data": {
          "abbrName": "Instrmt",
          "added": "FIX.4.3",
          "category": "Common",
          "description": "The Instrument component block contains all the fields commonly used to describe a security or instrument. Typically the data elements in this component block are considered the static data of a security, data that may be commonly found in a security master database. The Instrument component block can be used to describe any asset type supported by FIX.

",
          "id": "1003",
          "name": "Instrument",
          "type": "component",
        },
        "id": "1003",
        "presence": "required",
        "updated": "FIX.5.0SP2",
        "updatedEP": "188",
      },
    ],
  },
]
`;
